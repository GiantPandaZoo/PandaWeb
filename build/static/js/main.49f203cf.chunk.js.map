{"version":3,"sources":["ApplicationConfig.js","components/ConnectWallet/LoadWallet.jsx","components/ConnectWallet/ConnectWallet.jsx","components/Web3/WebThreeLoadEvent.jsx","components/ErrorBoundary/ErrorBoundaryFallback.jsx","components/ErrorBoundary/ErrorBoundary.jsx","components/ErrorBoundary/index.js","components/NotFound/index.js","components/NotFound/NotFound.jsx","components/ConnectWallet/index.js","components/DialogBox/DialogBoxVO.jsx","components/Web3/CurrentAccountStorage.jsx","etherscan/ContractAddressConfig.js","etherscan/abi/USDTToken_abi.js","etherscan/abi/WBTC_abi.js","etherscan/abi/ETHToken_abi.js","etherscan/abi/OPA_abi.js","etherscan/abi/TEST_ASSET_abi.js","etherscan/abi/ETHCallOptionPool_abi.js","etherscan/abi/WBTCCallOptionPool_abi.js","etherscan/abi/BNBCallOptionPool_abi.js","etherscan/abi/ETHCallPoolerToken_abi.js","etherscan/abi/WBTCCallPoolerToken_abi.js","etherscan/abi/BNBCallPoolerToken_abi.js","etherscan/abi/ETHPutOptionPool_abi.js","etherscan/abi/WBTCPutOptionPool_abi.js","etherscan/abi/BNBPutOptionPool_abi.js","etherscan/abi/ETHPutPoolerToken_abi.js","etherscan/abi/WBTCPutPoolerToken_abi.js","etherscan/abi/BNBPutPoolerToken_abi.js","etherscan/abi/Option_abi.js","etherscan/abi/Staking_abi.js","etherscan/abi/DEXRouter_Pancake_abi.js","etherscan/abi/DEXFactory_Pancake_abi.js","etherscan/abi/DEXTokenPair_Pancake_abi.js","etherscan/abi/ADA_abi.js","etherscan/abi/BNB_abi.js","etherscan/OptionTradingConfig.js","components/Web3/CurrentChainStorage.jsx","serviceWorker.js","components/Log/index.js","index.js","stores/index.js","components/Logo/index.js","layouts/DefaultLayout/components/Header/HeaderVO.jsx","components/DialogBox/index.js","layouts/DefaultLayout/components/Header/index.js","layouts/DefaultLayout/components/Footer/index.js","pages/Home/components/Banner/index.js","components/Device/index.js","pages/Home/components/UseCases/index.js","pages/Home/components/QA/index.js","components/ConnectWallet/IfConnectedWallet.jsx","components/ConditionDisplay/index.js","pages/Home/components/Trading/OptionTradingDTO.jsx","pages/Home/components/Trading/OptionTradingDTOList.jsx","components/BigNumberConvert/index.js","components/Countdown/index.js","pages/Home/components/Trading/OptionTradingVO.jsx","pages/Home/components/Trading/ProfitVO.jsx","pages/Home/components/Trading/MyOptionContractsVO.jsx","pages/Home/components/Trading/MyOptionContractsData.jsx","pages/Home/components/Trading/ProfitChartVO.jsx","components/Web3/GetWeb3.jsx","components/AssetBalance/index.js","pages/Home/components/Trading/ProfitData.jsx","components/AssetApprove/index.js","pages/Home/components/Trading/OptionTradingDAO.jsx","components/Countdown/CountdownTimer.js","components/DataRefreshTimer/index.js","pages/Home/components/Trading/TradingForm.jsx","pages/Home/components/Trading/Profit.jsx","pages/Home/components/Trading/MyOptionContracts.jsx","pages/Home/components/Trading/ProfitChart.jsx","pages/Home/components/Trading/index.js","pages/Home/Home.jsx","pages/Home/index.js","pages/Sell/components/Banner/index.js","pages/Sell/components/Pooler/PoolerVO.jsx","pages/Sell/components/Pooler/ProfitVO.jsx","pages/Sell/components/Pooler/ProfitData.jsx","pages/Sell/components/Pooler/ProfitWithdrawVO.jsx","pages/Sell/components/Pooler/PoolerDAO.jsx","pages/Sell/components/Pooler/PoolerForm.jsx","pages/Sell/components/Pooler/Profit.jsx","pages/Sell/components/Pooler/index.js","pages/Sell/Sell.jsx","pages/Sell/index.js","pages/Analytics/components/Banner/index.js","pages/Analytics/components/AnalyticsData/AnalyticsVO.jsx","pages/Analytics/components/AnalyticsData/UnderlyingAssetVO.jsx","pages/Analytics/components/AnalyticsData/UnderwritingPoolVO.jsx","pages/Analytics/components/AnalyticsData/UnderwritingPoolSnapshotVO.jsx","pages/Analytics/components/AnalyticsData/UnderwritingPoolSnapshotData.jsx","pages/Analytics/components/AnalyticsData/AnalyticsDAO.jsx","pages/Analytics/components/AnalyticsData/UnderlyingAsset.jsx","pages/Analytics/components/AnalyticsData/UnderwritingPool.jsx","pages/Analytics/components/AnalyticsData/UnderwritingPoolSnapshot.jsx","pages/Analytics/components/AnalyticsData/index.js","pages/Analytics/Analytics.jsx","pages/Analytics/index.js","pages/OPA/components/PoolRewards/PoolRewardsVO.jsx","pages/OPA/components/PoolRewards/PoolRewardsData.jsx","pages/OPA/components/Coin/index.js","pages/OPA/components/PoolRewards/RedeemRewardsVO.jsx","pages/OPA/components/PoolRewards/PoolRewardsDAO.jsx","pages/OPA/components/PoolRewards/RedeemRewards.jsx","pages/OPA/components/PoolRewards/index.js","pages/OPA/components/PopStake/PopStakeVO.jsx","pages/OPA/components/PopStake/index.js","pages/OPA/components/PopClaim/PopClaimVO.jsx","pages/OPA/components/PopClaim/index.js","pages/OPA/components/PopWithdraw/PopWithdrawVO.jsx","pages/OPA/components/PopWithdraw/index.js","pages/OPA/components/OPAStats/OPAStatsVO.jsx","pages/OPA/components/DAOStaking/DAOStakingVO.jsx","pages/OPA/components/DAOStaking/DAOStakingDAO.jsx","pages/OPA/components/PopConnectWallet/PopConnectWalletVO.jsx","pages/OPA/components/PopConnectWallet/index.js","pages/OPA/components/DAOStaking/index.js","pages/OPA/components/LPStaking/LPStakingVO.jsx","components/LPPriceHelper/index.js","pages/OPA/components/LPStaking/LPDEXData.jsx","pages/OPA/components/LPStaking/LPStakingData.jsx","pages/OPA/components/LPStaking/LPStakingDAO.jsx","pages/OPA/components/LPStaking/index.js","pages/OPA/components/OPAStats/OPAStatsDAO.jsx","pages/OPA/components/OPAStats/index.js","pages/OPA/index.js","pages/OPA/OPA.jsx","pages/FAQ/components/QuestionsConfig_en.js","pages/FAQ/components/Questions/QuestionsTitle.jsx","pages/FAQ/components/Questions/index.js","pages/FAQ/components/Answers/TopJumper.jsx","pages/FAQ/components/Answers/QuestionsAnswer.jsx","pages/FAQ/components/Answers/index.js","pages/FAQ/index.js","pages/OPDashboard/components/ListOptions/ListOptionsVO.jsx","pages/OPDashboard/components/ListOptions/ListOptionsDAO.jsx","pages/OPDashboard/components/ListOptions/index.js","routerConfig.js","pages/OPDashboard/OPDashboard.jsx","components/Web3/LoadWeb3.jsx","layouts/DefaultLayout/index.js","router.js","App.js"],"names":["ApplicationConfig","lang","dataRefreshCycle","opaCircSupply","opaMiningStartTime","opaParadropStartTime","opaOutputDay","LPStakingConfig","dexName","tokenPair","name","token","assetName","plUrl","poolerAdditionalChargeFee","LoadWallet","props","wallet","useWallet","account","connect","reset","status","library","error","chainId","balance","changeAccount","connector","useState","isShowWalletPop","showWalletPop","connectWallet","walletName","window","ethereum","BinanceChain","log","debug","saveToSession","DialogBoxVO","confirm","setTitle","setContent","disconnectWallet","a","CurrentAccountStorage","clearAccount","key","value","localStorage","setItem","getFromSession","getItem","useEffect","info","setTimeout","setAccount","web3","Web3","CurrentChainStorage","setChainId","WebThreeLoadEvent","setLoadState","message","OptionTradingConfig","defaultChain","visible","align","hasMask","disableScroll","className","onClick","bind","type","size","customBtnClass","intl","get","customDisBtnClass","ConnectWallet","observer","currentAccountStorage","this","showAccount","title","Component","listeners","autorun","isLoaded","length","call","listener","references","push","state","observable","action","ErrorBoundaryFallback","componentStack","location","replace","origin","process","ErrorBoundary","logErrorToMyService","setState","hasError","onError","ignoredError","children","Fallback","defaultProps","NotFound","DialogConfig","CONFIRM","titleIcon","content","SUCCESS","FAILED","setDialogType","setVisible","dialogType","setTitleIcon","updateAccount","eth","getAccounts","then","currentAccount","ContractAddressConfig","net56","opa","staking","DAO","stake","asset","pool","BNB","put","BTCB","ETH","USDTToken","WBTC_abi","ETHToken","OPA_abi","TEST_ASSET_abi","ETHCallOptionPool_abi","WBTCCallOptionPool_abi","BNBCallOptionPool_abi","ETHCallPoolerToken","WBTCCallPoolerToken","BNBCallPoolerToken","ETHPutOptionPool_abi","WBTCPutOptionPool_abi","BNBPutOptionPool_abi","ETHPutPoolerToken","WBTCPutPoolerToken","BNBPutPoolerToken","Option_abi","Staking_abi","DEXRouter_Pancake_abi","DEXFactory_Pancake_abi","DEXTokenPair_Pancake_abi","ADA_abi","BNB_abi","defaultCoin","defaultOptionType","defaultOptionDuration","id","defaultApproveAllowance","defaultApproveAllowance_56","getDefaultApproveAllowance","defaultApproveThreshold","defaultApproveThreshold_56","getDefaultApproveThreshold","getAssetsScaleMap","scaleMap","assets","assetConfig","show","primitive","show_56","primitive_56","coins","icon","nativeAsset","56","1","getNativeAsset","approve","Buy","contractDes","address_56","address","assetType","Sell","OPA","LP","Pancake","router","abi","factory","LP_Token","contractConfig","USDT","hotPotToken","WBTC","callPoolContract","WBTCCallOptionPool","depositMethod","withdrawMethod","poolerToken","putPoolContract","WBTCPutOptionPool","optionContract","Option","ETHCallOptionPool","ETHPutOptionPool","BNBCallOptionPool","BNBPutOptionPool","Staking","address_56_config","stakeType","TEST_ASSET","ADA","Boolean","hostname","match","unregister","navigator","serviceWorker","ready","registration","Log","level","moment","locale","locales","require","init","currentLocale","split","CONTAINER","document","getElementById","Error","render","REACT_APP_HMR","module","hot","accept","Logo","to","HeaderVO","currentNavKey","navArr","navItem","url","nav","DialogBox","onOpen","onClose","configInit","footerActions","Header","map","href","year","Date","getFullYear","target","Cell","Banner","gap","colSpan","getHTML","Device","setDeviceType","d","mobile","deviceType","tablet","desktop","UseCases","device","QA","IfConnectedWallet","ConditionDisplay","display","OptionTradingDTO","OptionTradingDTOList","optionType","coinName","optionTradingVoArr","optionRounds","units","scale","BigNumberConvert","bnString","BigNumber","toNumber","toFormat","decimal","_decimal","decimalPlaces","primitiveValue","i","t","n","times","toString","num","showValue","toFixed","ether","x","y","plus","xNum","yNum","minus","Countdown","endTime","endTimeFormat","countdownTime","isOver","buildCountdownTime","date","local","format","now","diff","minDiff","min","secDiff","sec","OptionTradingVO","optionDuration","optionRound","optionAmount","optionAmountWei","strikePrice","strikePriceTxt","optionCosts","optionCostsTxt","expiryDate","expiryDateTxt","optionAmountMax","optionAmountMaxFloat","optionAmountMaxTxt","contractAddress","poolContractAddress","tradingEnable","optionDurationTxt","arr","Number","toPrimitiveValue","defaultOptionAmount","setOptionAmount","_countdownComponent","toShowValueFormatDecimalAsset","toShowNumberDecimalAssetSmall","toShowValueFormatDecimalUSDT","costsNum","toShowNumberDecimal","toShowValueFormatDecimal","buildOptionRound","buildCurrentOptionInfo","setDefaultOptionAmount","currentOption","optionDtoArr","optionDto","setStrikePrice","setOptionCosts","setExpiryDate","setOptionAmountMax","optionAddress","optionDurationDesMap","sort","round1","round2","label","padStart","ProfitVO","isCallLoading","isPutLoading","callDataArrTemp","callLoadDataLength","callLoadedDataLength","putDataArrTemp","putLoadDataLength","putLoadedDataLength","data","addCallLoadedDataLength","setCallLoading","callDataArr","option1","option2","flag1","isLoading","addPutLoadedDataLength","setPutLoading","putDataArr","MyOptionContractsVO","callOptionType","putOptionType","currentPrice","dataArrTemp","loadDataLength","loadedDataLength","addLoadedDataLength","setLoading","arrTemp","poolType","durationShow","dataArr","refreshExpiryDate","MyOptionContractsData","duration","durationMin","position","positionShowNumber","toShowNumber","positionShow","premium","premiumShow","strikePriceShow","setRevenue","isConverted","currentPriceShow","toFormatDecimal","profit","getCallProfit","getPutProfit","revenue","revenueShow","revenueStyle","_currentPrice","toPrimitiveBigNumber","_strikePrice","comparedTo","div","expiryDateShow","countdown","countdownStyle","ProfitChartVO","optionPremium","cost","chartFillColor","toShowNumberDecimalUSDT","annotationStrikePrice","annotationCost","OptionTradingVOList","optionPremiumTemp","toShowNumberDecimalAsset","currentPriceTips","setChartFillColor","chartData","buildCallPriceArr","buildPutPriceArr","setIsLoaded","priceArr","costStr","toFormatDecimalNumber","unshift","currentPriceStr","currentPriceRevenue","getCallRevenue","strikePriceStr","stickPriceRevenueRatio","profitNodeCount","lossNodeCount","firstItemPrice","lastItemPrice","difference","price","theRatio","setAnnotationCost","start","end","setAnnotationStrikePrice","setCurrentPriceTips","ratio","getPutRevenue","getWeb3","AssetBalance","refresh","accountBalance","finishArr","handler","getBalanceCallback","setAlready","getNativeAssetBalance","contractAbi","Contract","methods","balanceOf","getBalance","loadBalance","already","ProfitData","coinIcon","claimEnable","profitNumber","profitTxt","AssetApprove","allowance","operationType","_operationType","accountAllowance","config","contract","allowanceAddress","result","optionContractAddress","callBack","send","from","callBackRequest","approveRequest","request","batch","BatchRequest","add","execute","getAllowance","OptionTradingDAO","optionPoolContractConfig","optionPoolContractAddress","optionPoolContractAbi","listOptions","loadOptions","setOptionRounds","loadOptionCosts","optionAddressArr","loadCompleteCallback","loadOption","loadTaskLength","optionTradingDTO","getInfoCallback","getRound","getDuration","optionTradingVO","premiumCost","on","failed","buy","success","loadOptionPools","addCallLoadDataLength","addPutLoadDataLength","callProfitData","setCoinName","setPoolType","doLoadProfits","setProfit","addCallData","putProfitData","addPutData","callback","checkProfits","claimProfits","loadProfits","coinsConfig","coinConfig","loadMyOptionsDataForAsset","buildPoolContract","loadAssetPrice","assetPrice","callPoolContractAddress","loadListOptionsForMyOptions","putPoolContractAddress","getAssetPrice","addLoadDataLength","loadOptionInfo","optionPoolContract","optionData","setCurrentPrice","addData","setPosition","setDuration","round","getRoundAccountPaidPremiums","setPremium","setOptionPremium","buildChart","CountdownTimer","timerSetup","setInterval","timerRun","DataRefreshTimer","RadioGroup","Group","getContractAllowance","isNeedApprove","lt","optionRoundSelect","setTradingEnable","setOptionDurationTxt","optionAmountChange","optionTypeSwitch","setOptionType","TradingForm","refreshStrikePrice","columns","shape","onChange","NextComponentLocaleConfig","defaultValue","getDefaultOptionDuration","dataSource","innerAfter","step","precision","max","hasTrigger","disabled","aria-label","assetRender","index","record","profitRender","claimRender","claimProfit","Profit","Column","cell","dataIndex","setOptionDataCellProps","rowIndex","colIndex","MyOptionContracts","loadMyOptionsData","cellProps","refreshProfitChart","autoFit","height","formatter","text","item","concat","line","style","stroke","lineWidth","grid","lineDash","fill","fillOpacity","items","dataItem","tipProfit","Line","autoRotate","offsetX","offsetY","fontWeight","fontSize","DataMarker","point","textAlign","Trading","defaultActiveKey","coin","Item","Home","withRouter","setCurrentNavKey","SellBanner","PoolerVO","quantity","quantityWei","balanceOfFloat","balanceOfTxt","apy","apr","depositEnable","getBalanceSuccess","isCallOptionType","depositCoinName","defaultQuantity","setQuantity","toShowValueFormatDecimalSmall","setDefaultQuantity","incomeAssetCoinName","withdrawEnable","assetQuantity","number","assetQuantityTxt","assetQuantityWei","assetPoolQuantity","assetPoolQuantityTxt","assetAvailableQuantity","assetAvailableQuantityTxt","withdrawAbleQuantity","Math","withdrawAbleQuantityShow","setWithdrawQuantity","withdrawQuantity","withdrawQuantityInt","incomeQuantity","incomeNumber","incomeQuantityTxt","c","getAssetContribution","width","getAssetContributionTxt","getAssetContributionDesWidth","ProfitWithdrawVO","showWithdrawDialog","profitData","PoolerDAO","getAssetBalance","setBalanceOf","deposit","putContractConfig","allowanceNb","defaultApproveThresholdNb","optionArr","loadedCount","roundAccPremiumShare","loadOptionRoundAccPremiumShare","optionRoundAccPremiumShare","setAPR","currentRound","loadOptionDuration","doLoadOptionRoundAccPremiumShare","lastRoundAccPremiumShare","lastLastRoundAccPremiumShare","roundCount","getRoundAccPremiumShare","timesToNumber","loadInvestment","depositCallBack","loadMyProfit","additionalChargeWei","depositValue","plusAndToString","loadPoolerTokenAddress","setAssetQuantity","loadAssetAvailableQuantity","loadTotalInPool","loadIncomeQuantity","loadRoundAccPremiumShare","setAssetAvailableQuantity","setAssetPoolQuantity","setWithdrawAbleQuantity","checkPremium","setIncomeQuantity","setShowWithdrawDialog","claimPremium","checkAllowanceBeforeDeposit","PoolerForm","investmentRender","poolTotalRender","contributionRender","incomeRender","aprRender","operationRender","openWithdrawDialog","claim","setByProfitData","closeWithdrawDialog","withdrawQuantityChange","withdraw","assetCoinName","SellCoinTab","onCoinChange","Pooler","tabRender","AnalyticsVO","poolerIncomeAssetName","UnderlyingAssetVO","totalAssetQuantity","totalAssetQuantityShow","totalAssetValue","callAssetQuantity","callAssetQuantityShow","callAssetQuantityShowNumber","callAssetValue","putAssetQuantity","putAssetQuantityShow","putAssetQuantityShowNumber","putAssetValue","totalIncomeQuantity","totalIncomeQuantityShow","callIncomeQuantity","callIncomeQuantityShow","putIncomeQuantity","putIncomeQuantityShow","toShowValue","quantityNumber","timesAndFormat","setTotalAssetQuantity","setCallAssetQuantity","setPutAssetQuantity","setTotalIncomeQuantity","setCallIncomeQuantity","setPutIncomeQuantity","UnderwritingPoolVO","callUtilizationRatio","callUtilizationRatioShow","callAvailableAssetQuantityShow","callAvailableAssetQuantity","callTotalAsset","callTotalAssetShowNumber","callTotalAssetShow","putUtilizationRatio","putUtilizationRatioShow","putAvailableAssetQuantityShow","putAvailableAssetQuantity","putTotalAsset","putTotalAssetShowNumber","putTotalAssetShow","putTotalAssetValueShow","UnderwritingPoolSnapshotVO","poolData","UnderwritingPoolSnapshotData","totalSupply","available","availableShow","countdownComponent","AnalyticsDAO","loadPositionAndIncome","loadListOptions","addCallAssetQuantity","addCallIncomeQuantity","addPutAssetQuantity","addPutIncomeQuantity","loadOptionTotalSupplyCallBack","loadOptionTotalIncomeCallBack","loadOptionTotalSupplyAndIncome","addAssetTotalSupplyCallBack","totalPremiums","loadUtilizationRatio","utilizationRatio","setCallUtilizationRatio","loadTotalAsset","totalAsset","setCallTotalAsset","setPutUtilizationRatio","setPutTotalAsset","currentUtilizationRate","collateral","loadListOptionsForPoolSnapshot","optionsLength","poolDada","addPoolData","setTotalSupply","setAvailable","UnderlyingAsset","loadUnderlyingAsset","UnderwritingPool","loadUnderlyingPool","setCallAvailableAssetQuantityShow","setPutAvailableAssetQuantityShow","getCallAvailableAssetQuantityStyle","getCallUtilizationRatioStyle","getPutAvailableAssetQuantityStyle","getPutUtilizationRatioStyle","setPoolDataCellProps","UnderwritingPoolSnapshot","loadUnderwritingPoolSnapshotData","onAnalyticsCoinChange","AnalyticsData","Analytics","PoolRewardsVO","countTotalRewards","total","poolRewardsData","callPoolRewardsShowNumber","putPoolRewardsShowNumber","totalRewards","PoolRewardsData","assetIcon","callPoolRewards","callPoolRewardsShow","toShowValueFormatDecimalOPA","toShowNumberDecimalOPA","putPoolRewards","putPoolRewardsShow","coinIconMap","getCoinIcon","RedeemRewardsVO","setAsset","setAssetIcon","setCallPoolRewards","setPutPoolRewards","currentPool","checkClaimEnable","PoolRewardsDAO","loadRewardsCallback","poolRewards","doLoadPoolRewards","rewards","checkOPA","claimOPA","resetRewards","loadPoolRewards","closePoolRewardsDialog","setShow","claimPoolRewards","poolItemClick","setCurrentPool","RedeemRewards","poolRewardRedeem","setWithPoolRewardsData","poolCoinRender","callPoolRender","putPoolRender","poolRewardsOperationRender","PoolRewards","PopStakeVO","assetDes","assetUnit","stakeAsset","maxStake","maxStakeShow","maxStakeShowNumber","setStakeAmount","stakeAmount","stakeAmountBN","submitEnable","providerLiquidityUrl","popEventSource","setPopEventTimestamp","popEventTimestamp","getTime","closePopStakeDialog","stakeAmountChange","triggerSubmitEvent","PopStake","rewardsFrom","rewardsShow","closePopClaimDialog","PopClaimVO","stakeRewardsClaim","PopClaim","maxWithdraw","maxWithdrawShow","maxWithdrawShowNumber","setWithdrawAmount","withdrawAmount","withdrawAmountBN","closePopWithdrawDialog","PopWithdrawVO","withdrawAmountChange","opaPopWithdraw","PopWithdraw","priceShow","priceShowNumber","marketCapValue","circSupplyShowNumber","marketCap","circSupply","circSupplyShow","totalStaked","totalStakedShow","totalStakedShowNumber","OPAStatsVO","totalStakedValue","myDaoStaked","myDaoStakedShow","myDaoStakedShowNumber","myDaoRewards","myDaoRewardsShow","myDaoApr","loadDAOTotalStaked","loadMyDAOStaked","loadMyDAORewards","DAOStakingVO","setTotalStaked","numStaked","setMyDaoStaked","loadMyDAOAPR","loadOPABlockReward","opaBlockReward","opaRewardsDay","setMyDaoApr","checkReward","setMyDaoRewards","doDAOStake","maxStakeNew","setMaxStake","loadDAOStakingData","claimRewards","setRewards","maxWithdrawNew","setMaxWithdraw","closePopConnectDialog","PopConnectWalletVO","PopConnectWallet","opaStake","setAssetUnit","setStakeAsset","setPopEventSource","opaClaim","setRewardsFrom","opaWithdraw","setAssetDes","DAOStaking","DAOStakingDAO","setTotalStakedValue","daoStake","daoClaim","daoWithdraw","lpDEXDataArr","amountOut","pow","addressArr","usdtAddress","getAmountsOut","amounts","tokenPairAddress","loadLPTokenAddress","lpTokenAddress","loadLPTokenTotalSupply","loadLPTokenReserves","reserve","priceAsset","usdtArr","loadTokenPrice","priceResult","address1","address2","getPair","getReserves","token0","address0","toUpperCase","LPDEXData","lpStakingDataArr","LPStakingData","tokenPairName","tokenArr","provideLiquidityUrl","opaLPTokenPriceShowNumber","myStaked","myStakedShow","myStakedShowNumber","myRewards","myRewardsShow","opaPrice","opaPriceShowNumber","opaLPTokenPrice","myApr","stakingDataArr","dex","lpDEXData","setDexName","lpStakingData","setTokenPairName","setTokenArr","setAssetName","setProvideLiquidityUrl","setLpStakingDataArr","LPStakingVO","setLpDEXDataArr","loadLPTotalStaked","loadMyLPStaked","loadMyLPRewards","getPairId","loadMyLPAPR","setMyStaked","setMyRewards","LPPriceHelper","setOpaPrice","loadLPTokenPrice","lpTokenPrice","setOpaLPTokenPrice","loadLPOPABlockReward","opaValueDay","lpTokenValue","setMyApr","doLPStake","loadLPStakingData","lpStake","pairName","setProviderLiquidityUrl","lpClaim","lpWithdraw","staked","LPStaking","LPStakingDAO","loadLPStakingItem","pair","loadCircSupply","setPrice","startTime","tz","secondsDiff","paradrop","paradropStartTime","paradropSecondsDiff","setCircSupply","OPAStats","OPAStatsDAO","loadStats","QuestionsConfig_en","titles","l","r","QuestionsTitle","Questions","TopJumper","switchShow","delay","thisArg","lastInvokeTime","_delay","args","createThrottle","offsetHeight","shouldShow","scrollY","addEventListener","removeEventListener","QuestionsAnswer","cellSpacing","Answers","FAQ","update","updateOptionPool","ListOptionsDAO","optionPoolOperationRender","ListOptions","ListOptionsVO","loading","routerConfig","path","component","exact","loadWeb3","UserLayout","chainIds","routerData","Routers","basename","DefaultLayout","configure","enforceActions","App","rootStore"],"mappings":"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","file":"static/js/main.49f203cf.chunk.js","sourcesContent":["const ApplicationConfig = {\n    lang: 'en-US',\n    // lang: 'zh-CN',\n    dataRefreshCycle: 13000,\n    opaCircSupply: 200000000000000000000000000,\n    opaMiningStartTime: '2021-05-31T10:00:00.000Z',\n    opaParadropStartTime: '2021-05-31T12:00:00.000Z',\n    opaOutputDay:288000,\n    LPStakingConfig: [\n        // {\n        //     dexName:'DoDo',\n        //     tokenPair:[\n        //         {\n        //             name:'OPA-USDT',\n        //             token:['OPA','USDT'],\n        //             plUrl:'https://ht.mdex.com/#/add/HT',\n        //         },\n        //         {\n        //             name:'OPA-BNB',\n        //             token:['OPA','BNB'],\n        //             plUrl:'https://ht.mdex.com/#/add/HT',\n        //         }\n        //     ]\n        // },\n        {\n            dexName:'Pancake',\n            tokenPair:[\n                {\n                    name:'OPA-USDT',\n                    token:['OPA','USDT'],\n                    assetName:'OPA-USDT@Pancake',\n                    plUrl:'https://exchange.pancakeswap.finance/#/add/0xA2F89a3be1bAda5Eb9D58D23EDc2E2FE0F82F4b0/0x55d398326f99059fF775485246999027B3197955',\n                },\n                // {\n                //     name:'OPA-BNB',\n                //     token:['OPA','BNB'],\n                //     plUrl:'https://ht.mdex.com/#/add/HT',\n                // }\n            ]\n        }\n    ],\n    poolerAdditionalChargeFee: 0.05\n};\n\nexport default ApplicationConfig;\n","import './index.scss';\n\nimport React, { useState, useEffect } from 'react';\nimport {useWallet} from 'react-binance-wallet'\nimport CurrentAccountStorage from '../Web3/CurrentAccountStorage';\nimport log from '../Log/index';\nimport Web3 from 'web3';\nimport {Button, Input, NumberPicker, Overlay} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport WebThreeLoadEvent from \"../Web3/WebThreeLoadEvent\";\nimport CurrentChainStorage from \"../Web3/CurrentChainStorage\";\nimport DialogBoxVO from \"../DialogBox/DialogBoxVO\";\nimport OptionTradingConfig from \"../../etherscan/OptionTradingConfig\";\n\nconst LoadWallet = (props) => {\n    const wallet = useWallet();\n    const { account, connect, reset, status, library, error, balance, chainId, changeAccount, connector } = wallet;\n    const [isShowWalletPop, showWalletPop] = useState(false);\n\n    const connectWallet = (walletName) => {\n        if (window.ethereum || window.BinanceChain) {\n            log.debug(`connectWallet, walletName => ${walletName}`);\n            connect(walletName);\n            saveToSession(\"CURRENT_WALLET\",walletName);\n            saveToSession(\"AUTO_CONNECT\",'true');\n        }else{\n            DialogBoxVO.confirm();\n            DialogBoxVO.setTitle('Select a Wallet');\n\n            DialogBoxVO.setContent(`You'll need to install \"MetaMask\" or \"Binance Chain Wallet\" to continue. Once you have it installed, go ahead and refresh the page.`);\n        }\n    };\n\n    const disconnectWallet=async () => {\n        saveToSession(\"AUTO_CONNECT\",'false');\n        CurrentAccountStorage.clearAccount();\n        await reset();\n    };\n\n    const saveToSession=(key,value)=>{\n        if (window.localStorage) {\n            let storage = window.localStorage;\n            storage.setItem(key, value);\n        }\n    };\n\n    const getFromSession=(key)=>{\n        if (window.localStorage) {\n            let storage = window.localStorage;\n            return storage.getItem(key);\n        }\n        return '';\n    };\n\n    useEffect(() => {\n        log.info(`useEffect: account => ${account}`);\n\n        if(!account && getFromSession('AUTO_CONNECT')==='true'){\n            setTimeout(()=>{\n                connectWallet(getFromSession(\"CURRENT_WALLET\") || 'injected');\n            },500);\n        }\n\n        if(account){\n            CurrentAccountStorage.setAccount(account);\n        }\n    }, [account]);\n\n    useEffect(() => {\n        log.info(`useEffect: library => ${library}, chainId => ${chainId}`);\n\n        if(library && chainId){\n            window.web3 = new Web3(library);\n            CurrentChainStorage.setChainId(chainId);\n\n            WebThreeLoadEvent.setLoadState(true);\n        }\n    }, [library,chainId]);\n\n    useEffect(() => {\n        log.info(`useEffect: error => ${error}, message => ${error?.message}`);\n        if(error && error.message==='Unsupported chain'){\n            DialogBoxVO.confirm();\n            DialogBoxVO.setTitle('You Must Change Networks');\n\n            DialogBoxVO.setContent(`We've detected that you need to switch your wallet's network to ${OptionTradingConfig.defaultChain.name} for this Dapp.`);\n\n            disconnectWallet();\n        }\n\n        if(error && error.message==='No BSC provider was found on window.BinanceChain.'){\n            DialogBoxVO.confirm();\n            DialogBoxVO.setTitle('The Binance Chain Wallet package is not installed.');\n\n            DialogBoxVO.setContent(`You'll need to install \"Binance Chain Wallet\" to continue. Once you have it installed, go ahead and refresh the page.`);\n\n            disconnectWallet();\n        }\n\n        if(error && error.message==='No Ethereum provider was found on window.ethereum.'){\n            DialogBoxVO.confirm();\n            DialogBoxVO.setTitle('The MetaMask Wallet package is not installed.');\n\n            DialogBoxVO.setContent(`You'll need to install \"MetaMask\" to continue. Once you have it installed, go ahead and refresh the page.`);\n\n            disconnectWallet();\n        }\n    }, [error,chainId]);\n\n    return (\n        <div>\n            {status === 'disconnected' ? (\n                <>\n                    <Overlay visible={isShowWalletPop}\n                        // safeNode={() => this.btn}\n                             align=\"cc cc\"\n                             hasMask\n                             disableScroll className={'overlay_container wallet_pop_windows'}>\n                        <div className={'pop_wallet_box'}>\n                            <div className={'wallet_item'} onClick={connectWallet.bind(this,'injected')}>\n                                <div className={'wallet_icon icon_metamask'}></div>\n                                <div className={'wallet_name'}>MetaMask</div>\n                                <div className={'des'}>Connect to your MetaMask Wallet</div>\n                            </div>\n\n                            <div className={'wallet_item'} onClick={connectWallet.bind(this,'bsc')}>\n                                <div className={'wallet_icon icon_bsc'}></div>\n                                <div className={'wallet_name'}>Binance Chain Wallet</div>\n                                <div className={'des'}>Connect to your Binance Chain Wallet</div>\n                            </div>\n                        </div>\n                    </Overlay>\n                    <Button type=\"primary\" size=\"large\" onClick={showWalletPop.bind(this,true)} className={`sub_btn ${props.customBtnClass||''}`}>\n                        {intl.get('commons.connectWallet')}\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        onClick={disconnectWallet.bind(this)}\n                        className={`sub_btn ${props.customDisBtnClass||''}`}\n                    >\n                        {intl.get('commons.disconnectWallet')}\n                    </Button>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default LoadWallet;\n","import '../Theme/theme.scss';\n\nimport React, {Component} from 'react';\nimport currentAccountStorage from '../Web3/CurrentAccountStorage';\nimport {observer} from 'mobx-react';\n\nimport LoadWallet from \"./LoadWallet\";\n\n@observer\nclass ConnectWallet extends Component {\n    render() {\n        if (!currentAccountStorage.account) {\n            return (\n                <LoadWallet customBtnClass={this.props.customBtnClass||''}/>\n            );\n        } else {\n            if (this.props.showAccount) {\n                return (\n                    <div className={'account_box'}>\n                        <div className={'account'}\n                             title={currentAccountStorage.account}>{currentAccountStorage.account}</div>\n                        <LoadWallet customDisBtnClass={this.props.customDisBtnClass||''}/>\n                    </div>\n                );\n            } else {\n                return \"\";\n            }\n        }\n    }\n}\n\nexport default ConnectWallet;\n","import {action, observable, autorun} from 'mobx'\n\nclass WebThreeLoadEvent {\n    @observable isLoaded = false;\n\n    listeners = [];\n\n    constructor(){\n        autorun(() => {\n            if(this.isLoaded && this.listeners.length){\n                for (let listener of this.listeners) {\n                    listener.call();\n                }\n            }\n        });\n    }\n\n    addListener(listener,references) {\n        if(references){\n            this.listeners.push(()=>{\n                listener.call(references);\n            });\n        }else{\n            this.listeners.push(listener);\n        }\n    }\n\n    @action\n    setLoadState(state){\n        this.isLoaded=state;\n    }\n\n}\n\nexport default new WebThreeLoadEvent()\n","import React from 'react';\nimport './index.scss';\nimport intl from 'react-intl-universal';\n\nconst ErrorBoundaryFallback = ({componentStack, error}) => {\n    return (\n        <div className={'error_500_container'}>\n            <div className={'content'}>\n                <div className={'err_bg'}></div>\n                <div className={'tips'}>\n                    <div className={'title'}>{intl.get('page.error.500.tips.title')}</div>\n                    <div className={'tip'}>{intl.get('page.error.500.tips.tip')}</div>\n                </div>\n                <div className={'buttons'}>\n                    <div\n                        className={`btn`}\n                        onClick={() => {\n                            window.location.replace(window.location.origin + process.env.PUBLIC_URL);\n                        }}\n                    >\n                        {intl.get('page.error.500.tips.btn')}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ErrorBoundaryFallback;\n","// reference： https://github.com/bvaughn/react-error-boundary\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorBoundaryFallback from './ErrorBoundaryFallback';\n\nclass ErrorBoundary extends Component {\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return {hasError: true};\n    }\n\n    static propTypes = {\n        onError: PropTypes.func,\n        Fallback: PropTypes.func,\n    };\n    static defaultProps = {\n        Fallback: ErrorBoundaryFallback,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: null,\n            info: null,\n        };\n    }\n\n    componentDidCatch(error, info) {\n        const {onError} = this.props;\n        if (typeof onError === 'function') {\n            try {\n                // istanbul ignore next: Ignoring ternary; can’t reproduce missing info in test environment.\n                onError && onError.call(this, error, info ? info.componentStack : '');\n            } catch (ignoredError) {\n                // ignored error\n            }\n        }\n\n        // You can also log the error to an error reporting service\n        this.logErrorToMyService(error, info);\n    }\n\n    logErrorToMyService = (error, info) => {\n        this.setState({\n            error,\n            info,\n        });\n    };\n\n    render() {\n        const {hasError, error, info} = this.state;\n        const {children, Fallback} = this.props;\n\n        // render fallback UI if there is error\n        if (hasError || error !== null) {\n            return (\n                <Fallback\n                    componentStack={\n                        // istanbul ignore next: Ignoring ternary; can’t reproduce missing info in test environment.\n                        info ? info.componentStack : ''\n                    }\n                    error={error}\n                />\n            );\n        }\n\n        return children || null;\n    }\n}\n\nexport default ErrorBoundary;\n","import ErrorBoundary from './ErrorBoundary';\n\nexport default ErrorBoundary;\n","import NotFound from './NotFound';\n\nexport default NotFound;\n","import React, {Component} from 'react';\nimport './index.scss';\nimport intl from 'react-intl-universal';\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div className={'error_400_container'}>\n                <div className={'content'}>\n                    <div className={'err_bg'}></div>\n                    <div className={'tips'}>\n                        <div className={'title'}>{intl.get('page.error.404.tips.title')}</div>\n                        <div className={'tip'}>{intl.get('page.error.404.tips.tip')}</div>\n                    </div>\n                    <div className={'buttons'}>\n                        <div\n                            className={`btn`}\n                            onClick={() => {\n                                window.location.replace(window.location.origin + process.env.PUBLIC_URL);\n                            }}\n                        >\n                            {intl.get('page.error.404.tips.btn')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import ConnectWallet from './ConnectWallet';\n\nexport default ConnectWallet;\n","import {action, observable} from 'mobx';\nimport intl from 'react-intl-universal';\n\nclass DialogBoxVO {\n    @observable visible=false;\n    @observable titleIcon=\"\";\n    @observable title=\"\";\n    @observable content=\"\";\n    @observable dialogType=\"CONFIRM\";\n\n    DialogConfig={};\n\n    constructor(){\n    }\n\n    configInit(){\n        this.DialogConfig={\n            CONFIRM:{\n                titleIcon:'',\n                title:intl.get('commons.dialog.confirm.title'),\n                content:intl.get('commons.dialog.confirm.content')\n            },\n            SUCCESS:{\n                titleIcon:'title_icon title_icon_success',\n                title:intl.get('commons.dialog.success.title'),\n                content:intl.get('commons.dialog.success.content')\n            },\n            FAILED:{\n                titleIcon:'title_icon title_icon_failed',\n                title:intl.get('commons.dialog.failed.title'),\n                content:intl.get('commons.dialog.failed.content')\n            },\n        }\n    }\n\n    @action\n    confirm(){\n        this.setDialogType('CONFIRM');\n        this.setVisible(true);\n    }\n\n    @action\n    success(){\n        this.setDialogType('SUCCESS');\n        this.setVisible(true);\n    }\n\n    @action\n    failed(){\n        this.setDialogType('FAILED');\n        this.setVisible(true);\n    }\n\n    @action\n    setVisible(visible) {\n        this.visible = visible;\n    }\n\n    @action\n    setTitleIcon(titleIcon) {\n        this.titleIcon = titleIcon;\n    }\n\n    @action\n    setTitle(title) {\n        this.title = title;\n    }\n\n    @action\n    setContent(content) {\n        this.content = content;\n    }\n\n    @action\n    setDialogType(dialogType) {\n        this.dialogType = dialogType;\n        this.setTitle(this.DialogConfig[dialogType].title);\n        this.setTitleIcon(this.DialogConfig[dialogType].titleIcon);\n        this.setContent(this.DialogConfig[dialogType].content);\n    }\n}\n\nexport default new DialogBoxVO();\n","import {action, observable} from 'mobx'\nimport log from '../../components/Log';\n\nclass CurrentAccountStorage {\n    @observable account = \"\";\n\n    @action\n    loadAccountFromWeb3() {\n        let updateAccount = this;\n        window.web3.eth.getAccounts().then((account) => {\n            log.info(`load accounts => ${account}`);\n\n            if (account && account.length) {\n                updateAccount.setAccount(account[0]);\n            }\n        });\n    }\n\n    @action\n    clearAccount() {\n        this.setAccount(\"\");\n    }\n\n    @action\n    setAccount(currentAccount) {\n        if (window.localStorage) {\n            this.account = currentAccount;\n            let storage = window.localStorage;\n            storage.setItem(\"CURRENT_ACCOUNT\", currentAccount);\n        }\n    }\n}\n\nexport default new CurrentAccountStorage()\n","const ContractAddressConfig = {\n    net56:{\n        opa:{\n            token:\"0xA2F89a3be1bAda5Eb9D58D23EDc2E2FE0F82F4b0\",\n            staking:{\n                DAO:{\n                    stake:\"0xB40772332382cBaE2EAb0aeAb360f72384A11C0e\",\n                    asset:\"0xA2F89a3be1bAda5Eb9D58D23EDc2E2FE0F82F4b0\"\n                },\n                'OPA-USDT@DoDo':{\n                    stake:\"0x0034C85583cA1D40C94690781C07f1060A1caa91\",\n                    asset:\"0xc2c8804451737ed63db01c092dd7699e0f72f1a4\"\n                },\n                'OPA-BNB@DoDo':{\n                    stake:\"0x0034C85583cA1D40C94690781C07f1060A1caa91\",\n                    asset:\"0xc2c8804451737ed63db01c092dd7699e0f72f1a4\"\n                },\n                'OPA-USDT@Pancake':{\n                    stake:\"0x0F48a2DaCb2EB6C227020c4D6441d50363007f13\",\n                    asset:\"0x82cD9eB4cDc1900f52E8e66618Bba0c01DC7a29F\"\n                },\n                'OPA-BNB@Pancake':{\n                    stake:\"0x0034C85583cA1D40C94690781C07f1060A1caa91\",\n                    asset:\"0xc2c8804451737ed63db01c092dd7699e0f72f1a4\"\n                },\n                'OPA-BTCB@Pancake':{\n                    stake:\"0x0034C85583cA1D40C94690781C07f1060A1caa91\",\n                    asset:\"0xc2c8804451737ed63db01c092dd7699e0f72f1a4\"\n                },\n            }\n        },\n        pool:{\n            BNB:{\n                call:\"0xca2B1CADBE906f6660A342b019b0BB822Cadf1BE\",\n                put:\"0x2bdB323eCA3aD20d69488103a54E128202C3ECF1\",\n            },\n            BTCB:{\n                call:\"0xEEb3c80dBA0a163Cf31383caABA520A4F02b4332\",\n                put:\"0x59e4c63CE21E8a2E320A12B6EB0729A6be407e57\",\n            },\n            ETH:{\n                call:\"0x078f6761c3317d0D0766d515dF507e7011FF8F18\",\n                put:\"0xaF12A8cB500C2908bD20F70cF3E86515eE1b8ac0\",\n            },\n        },\n    },\n};\n\nexport default ContractAddressConfig;\n","const USDTToken = [\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default USDTToken;\n","const WBTC_abi = [\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default WBTC_abi;\n","const ETHToken = [\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default ETHToken;\n","const OPA_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_initialSupply\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"AllowTransfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BlockTransfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"recipients\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"name\": \"batchTransfer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burnFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pause\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"paused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"releaseAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"release\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"timelockOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"releaseTime\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"releaseTime\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferWithLock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpause\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default OPA_abi;\n","const TEST_ASSET_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_initialSupply\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Claim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Received\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"recipients\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"name\": \"batchTransfer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burnFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkTotalRevenue\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"revenue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkUnclaimedRevenue\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"revenue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claim\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getCurrentRound\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getManagerAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundData\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"accTokenShare\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"roundEthers\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"knownAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address payable\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pause\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"paused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address payable\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"removeKnownAddress\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address payable\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setKnownAddress\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address payable\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setManagerAddress\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"nsecs\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setUpdatePeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpause\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"updatePeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n];\nexport default TEST_ASSET_abi;\n","const ETHCallOptionPool_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"AssetContract_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"priceFeed\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"premiumCost\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Buy\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PremiumClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProfitsClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalProfit\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalOptionSold\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SettleLog\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaUpdate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdraw\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"AssetContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NWA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAPerBlock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"USDTContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"newSigma\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"name\": \"adjustSigma\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"cdfDataContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract CDFDataInterface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkOPA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkPremium\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"premium\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkProfits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"profits\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimOPA\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimProfits\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAsset\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"depositAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAssetPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"init\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"listOptions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IOption[]\",\n                \"name\": \"\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"maxUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"optionsLeft\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"optionsleft\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerTokenContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPoolerToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"premiumCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"maxrate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setMaxUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"OPAToken_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPAToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolManager_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolManager\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"rate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settleBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settlePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sigma\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"update\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"utilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAsset\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdrawAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default ETHCallOptionPool_abi;\n","const WBTCCallOptionPool_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"AssetContract_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"priceFeed\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"premiumCost\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Buy\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PremiumClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProfitsClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalProfit\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalOptionSold\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SettleLog\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaUpdate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdraw\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"AssetContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NWA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAPerBlock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"USDTContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"newSigma\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"name\": \"adjustSigma\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"cdfDataContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract CDFDataInterface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkOPA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkPremium\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"premium\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkProfits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"profits\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimOPA\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimProfits\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAsset\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"depositAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAssetPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"init\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"listOptions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IOption[]\",\n                \"name\": \"\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"maxUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"optionsLeft\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"optionsleft\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerTokenContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPoolerToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"premiumCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"maxrate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setMaxUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"OPAToken_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPAToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolManager_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolManager\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"rate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settleBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settlePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sigma\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"update\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"utilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAsset\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdrawAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default WBTCCallOptionPool_abi;\n","const BNBCallOptionPool_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"priceFeed\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"premiumCost\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Buy\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PremiumClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProfitsClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalProfit\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalOptionSold\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SettleLog\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaUpdate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdraw\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NWA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAPerBlock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"USDTContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"newSigma\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"name\": \"adjustSigma\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"cdfDataContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract CDFDataInterface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkOPA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkPremium\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"premium\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkProfits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"profits\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimOPA\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimProfits\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"deposit\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAssetPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"init\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"listOptions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IOption[]\",\n                \"name\": \"\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"maxUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"optionsLeft\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"optionsleft\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerTokenContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPoolerToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"premiumCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"maxrate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setMaxUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"OPAToken_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPAToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolManager_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolManager\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"rate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settleBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settlePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sigma\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"update\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"utilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdraw\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default BNBCallOptionPool_abi;\n","const ETHCallPoolerToken = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default ETHCallPoolerToken;\n","const WBTCCallPoolerToken = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default WBTCCallPoolerToken;\n","const BNBCallPoolerToken = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default BNBCallPoolerToken;\n","const ETHPutOptionPool_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"assetDecimal\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"priceFeed\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"premiumCost\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Buy\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PremiumClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProfitsClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalProfit\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalOptionSold\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SettleLog\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaUpdate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdraw\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NWA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAPerBlock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"USDTContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"newSigma\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"name\": \"adjustSigma\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"cdfDataContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract CDFDataInterface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkOPA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkPremium\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"premium\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkProfits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"profits\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimOPA\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimProfits\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"depositUSDT\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAssetPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"init\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"listOptions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IOption[]\",\n                \"name\": \"\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"maxUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"optionsLeft\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"optionsleft\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerTokenContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPoolerToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"premiumCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"maxrate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setMaxUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"OPAToken_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPAToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolManager_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolManager\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"rate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settleBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settlePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sigma\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"update\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"utilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdrawUSDT\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default ETHPutOptionPool_abi;\n","const WBTCPutOptionPool_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"assetDecimal\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"priceFeed\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"premiumCost\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Buy\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PremiumClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProfitsClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalProfit\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalOptionSold\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SettleLog\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaUpdate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdraw\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NWA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAPerBlock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"USDTContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"newSigma\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"name\": \"adjustSigma\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"cdfDataContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract CDFDataInterface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkOPA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkPremium\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"premium\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkProfits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"profits\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimOPA\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimProfits\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"depositUSDT\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAssetPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"init\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"listOptions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IOption[]\",\n                \"name\": \"\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"maxUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"optionsLeft\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"optionsleft\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerTokenContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPoolerToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"premiumCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"maxrate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setMaxUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"OPAToken_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPAToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolManager_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolManager\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"rate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settleBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settlePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sigma\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"update\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"utilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdrawUSDT\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default WBTCPutOptionPool_abi;\n","const BNBPutOptionPool_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"assetDecimal\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"priceFeed\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"premiumCost\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Buy\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Paused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PremiumClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProfitsClaim\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalProfit\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"totalOptionSold\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SettleLog\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"sigma\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SigmaUpdate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Unpaused\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdraw\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NWA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAPerBlock\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"USDTContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"newSigma\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"name\": \"adjustSigma\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"buy\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"cdfDataContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract CDFDataInterface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkOPA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkPremium\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"premium\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkProfits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"profits\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimOPA\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimProfits\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"depositUSDT\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAssetPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getNextUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"init\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"listOptions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IOption[]\",\n                \"name\": \"\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"maxUtilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"optionsLeft\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"optionsleft\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"round\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerPaused\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"poolerTokenContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPoolerToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"contract IOption\",\n                \"name\": \"optionContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"premiumCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"maxrate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setMaxUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"OPAToken_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPAToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolManager_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolManager\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"rate\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"setUtilizationRate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settleBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"settlePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sigma\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"\",\n                \"type\": \"uint16\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpauseBuyer\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"unpausePooler\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"update\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"utilizationRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdrawUSDT\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default BNBPutOptionPool_abi;\n","const ETHPutPoolerToken = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default ETHPutPoolerToken;\n","const WBTCPutPoolerToken = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default WBTCPutPoolerToken;\n","const BNBPutPoolerToken = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default BNBPutPoolerToken;\n","const Option_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"duration_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"decimals_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"contract IOptionPool\",\n                \"name\": \"poolContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountUSDT\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addPremium\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"expiryDate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getDuration\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getRound\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundAccPremiumShare\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getRoundAccountPaidPremiums\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getRoundBalanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundExpiryDate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundSettlePrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundStrikePrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundTotalPremiums\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRoundTotalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getSettledRound\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getUnclaimedProfitsRound\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"strikePrice_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"newSupply\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"resetOption\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"accPremiumShare\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setRoundAccPremiumShare\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSettledRound\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"r\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setUnclaimedProfitsRound\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"strikePrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalPremiums\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default Option_abi;\n","const Staking_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"opaContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"assetContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"AssetContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPABlockReward\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"OPAContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"checkReward\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"opa\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimRewards\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"numStaked\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"rewardAccount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setOPAReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"rewardAccount_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOPARewardAccount\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"stake\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalStaked\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdraw\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default Staking_abi;\n","const DEXRouter_Pancake_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_factory\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_WETH\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"WETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenA\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenB\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountADesired\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountBDesired\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountBMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountA\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountB\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountTokenDesired\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountTokenMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETHMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidityETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"factory\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOut\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserveIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserveOut\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getAmountIn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserveIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserveOut\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getAmountOut\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOut\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOut\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"name\": \"getAmountsIn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"name\": \"getAmountsOut\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountA\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserveA\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserveB\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"quote\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountB\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenA\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenB\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountBMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountA\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountB\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountTokenMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETHMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidityETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountTokenMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETHMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidityETHSupportingFeeOnTransferTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountTokenMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETHMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approveMax\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"removeLiquidityETHWithPermit\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountTokenMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETHMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approveMax\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenA\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenB\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountAMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountBMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approveMax\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"removeLiquidityWithPermit\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountA\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountB\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOut\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapETHForExactTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOutMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapExactETHForTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOutMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOutMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapExactTokensForETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOutMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOutMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapExactTokensForTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountIn\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOutMin\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOut\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountInMax\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapTokensForExactETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOut\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountInMax\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"path\",\n                \"type\": \"address[]\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapTokensForExactTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"amounts\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n];\n\nexport default DEXRouter_Pancake_abi;\n","const DEXFactory_Pancake_abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_feeToSetter\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"token0\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"token1\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"pair\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"PairCreated\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"INIT_CODE_PAIR_HASH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"allPairs\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"allPairsLength\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenA\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenB\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"createPair\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pair\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"feeTo\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"feeToSetter\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPair\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_feeTo\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setFeeTo\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_feeToSetter\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setFeeToSetter\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default DEXFactory_Pancake_abi;\n","const DEXTokenPair_Pancake_abi = [\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount1\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Burn\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Mint\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount0In\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount1In\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount0Out\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount1Out\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Swap\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint112\",\n                \"name\": \"reserve0\",\n                \"type\": \"uint112\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint112\",\n                \"name\": \"reserve1\",\n                \"type\": \"uint112\"\n            }\n        ],\n        \"name\": \"Sync\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"DOMAIN_SEPARATOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"MINIMUM_LIQUIDITY\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"PERMIT_TYPEHASH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"factory\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getReserves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint112\",\n                \"name\": \"_reserve0\",\n                \"type\": \"uint112\"\n            },\n            {\n                \"internalType\": \"uint112\",\n                \"name\": \"_reserve1\",\n                \"type\": \"uint112\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"_blockTimestampLast\",\n                \"type\": \"uint32\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_token0\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_token1\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"initialize\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"kLast\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"nonces\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"permit\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"price0CumulativeLast\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"price1CumulativeLast\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"skim\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount0Out\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount1Out\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"swap\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"sync\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"token0\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"token1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nexport default DEXTokenPair_Pancake_abi;\n","const ADA_abi = [\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"_symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nexport default ADA_abi;\n","const BNB_abi = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"guy\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"src\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdraw\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [],\n        \"name\": \"deposit\",\n        \"outputs\": [],\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"fallback\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"src\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"guy\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"src\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Deposit\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"src\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"wad\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdrawal\",\n        \"type\": \"event\"\n    }\n];\nexport default BNB_abi;\n","import ContractAddressConfig from './ContractAddressConfig';\n\nimport USDT from './abi/USDTToken_abi';\nimport WBTC from './abi/WBTC_abi';\nimport ETH from './abi/ETHToken_abi';\nimport OPA from './abi/OPA_abi';\nimport TEST_ASSET from './abi/TEST_ASSET_abi';\nimport ETHCallOptionPool from './abi/ETHCallOptionPool_abi';\nimport WBTCCallOptionPool from './abi/WBTCCallOptionPool_abi';\nimport BNBCallOptionPool from './abi/BNBCallOptionPool_abi';\nimport ETHCallPoolerToken from './abi/ETHCallPoolerToken_abi';\nimport WBTCCallPoolerToken from './abi/WBTCCallPoolerToken_abi';\nimport BNBCallPoolerToken from './abi/BNBCallPoolerToken_abi';\nimport ETHPutOptionPool from './abi/ETHPutOptionPool_abi';\nimport WBTCPutOptionPool from './abi/WBTCPutOptionPool_abi';\nimport BNBPutOptionPool from './abi/BNBPutOptionPool_abi';\nimport ETHPutPoolerToken from './abi/ETHPutPoolerToken_abi';\nimport WBTCPutPoolerToken from './abi/WBTCPutPoolerToken_abi';\nimport BNBPutPoolerToken from './abi/BNBPutPoolerToken_abi';\nimport Option from './abi/Option_abi';\nimport Staking from './abi/Staking_abi';\n\nimport CurrentChainStorage from \"../components/Web3/CurrentChainStorage\";\nimport DEXRouter_Pancake_abi from \"./abi/DEXRouter_Pancake_abi\";\nimport DEXFactory_Pancake_abi from \"./abi/DEXFactory_Pancake_abi\";\nimport DEXTokenPair_Pancake_abi from \"./abi/DEXTokenPair_Pancake_abi\";\nimport ADA_abi from \"./abi/ADA_abi\";\nimport BNB_abi from \"./abi/BNB_abi\";\n\nconst OptionTradingConfig = {\n    defaultCoin: 'BTCB',\n    defaultOptionType: 'callPoolContract',\n    defaultOptionDuration: '300',\n\n    defaultChain:{\n        id: 56,\n        name: 'BSC mainnet',\n    },\n\n    defaultApproveAllowance: '10000000000000000000000',\n    defaultApproveAllowance_56: '100000000000000000000000000',\n    getDefaultApproveAllowance: function(){\n        return this[`defaultApproveAllowance_${CurrentChainStorage.chainId}`] || this['defaultApproveAllowance'];\n    },\n\n    defaultApproveThreshold: '100000000000',\n    defaultApproveThreshold_56: '1000000000000000000',\n    getDefaultApproveThreshold: function(){\n        return this[`defaultApproveThreshold_${CurrentChainStorage.chainId}`] || this['defaultApproveThreshold'];\n    },\n\n    // assets:['USDT','BTCB','ETH'],\n    getAssetsScaleMap: function(){\n        let scaleMap={};\n        for(let assetConfig of this.assets){\n            let assetName=assetConfig.name;\n            let show=assetConfig.scaleMap[`show_${CurrentChainStorage.chainId}`] || assetConfig.scaleMap['show'];\n            let primitive=assetConfig.scaleMap[`primitive_${CurrentChainStorage.chainId}`] || assetConfig.scaleMap['primitive'];\n\n            scaleMap[assetName]={\n                show: show,\n                primitive: primitive\n            };\n        }\n\n        return scaleMap;\n    },\n    assets:[\n        {\n            name: 'USDT',\n            scaleMap: {\n                show:'0.000001',\n                primitive:'1000000',\n                show_56:'0.000000000000000001',\n                primitive_56:'1000000000000000000',\n            }\n        },\n        {\n            name: 'BTCB',\n            scaleMap: {\n                show:'0.00000001',\n                primitive:'100000000',\n                show_56:'0.000000000000000001',\n                primitive_56:'1000000000000000000',\n            }\n        },\n        {\n            name: 'ETH',\n            scaleMap: {\n                show:'0.000000000000000001',\n                primitive:'1000000000000000000'\n            }\n        },\n        {\n            name: 'BNB',\n            scaleMap: {\n                show:'0.000000000000000001',\n                primitive:'1000000000000000000'\n            }\n        },\n        {\n            name: 'OPA',\n            scaleMap: {\n                show:'0.000000000000000001',\n                primitive:'1000000000000000000'\n            }\n        },\n\n    //    OPA staking\n        {\n            name: 'TEST_ASSET',\n            scaleMap: {\n                show:'0.000000000000000001',\n                primitive:'1000000000000000000'\n            }\n        },\n        {\n            name: 'OPA-USDT@Pancake',\n            scaleMap: {\n                show:'0.000000000000000001',\n                primitive:'1000000000000000000'\n            }\n        },\n    ],\n    coins: [\n        {\n            name: 'BTCB',\n            icon: 'icon_btc',\n        },\n        {\n            name: 'ETH',\n            icon: 'icon_eth',\n        },\n        {\n            name: 'BNB',\n            icon: 'icon_bnb',\n        },\n    ],\n    nativeAsset:{\n        56:'BNB',\n        1:'ETH',\n        getNativeAsset: function () {\n            return this[`${CurrentChainStorage.chainId}`];\n        }\n    },\n    approve:{\n        Buy: [\n            {\n                contractDes: 'Buy_ETHCallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.ETH.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Buy_ETHPutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.ETH.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Buy_WBTCCallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BTCB.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Buy_WBTCPutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BTCB.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Buy_BNBCallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BNB.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Buy_BNBPutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BNB.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n        ],\n        Sell: [\n            {\n                contractDes: 'Sell_BNBPutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BNB.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Sell_ETHCallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.ETH.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'ETH',\n            },\n            {\n                contractDes: 'Sell_ETHPutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.ETH.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n            {\n                contractDes: 'Sell_WBTCCallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BTCB.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'BTCB',\n            },\n            {\n                contractDes: 'Sell_WBTCPutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BTCB.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'USDT',\n            },\n        ],\n        OPA:[\n            {\n                contractDes: 'OPA_DAO',\n                address_56: ContractAddressConfig.net56.opa.staking.DAO.stake,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'OPA',\n            },\n            {\n                contractDes: 'OPA_Stake_OPA-USDT@Pancake',\n                address_56: ContractAddressConfig.net56.opa.staking['OPA-USDT@Pancake'].stake,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                assetType:'OPA-USDT@Pancake',\n            }\n        ]\n    },\n    LP:{\n        Pancake:{\n            router:{\n                name: 'PancakeRouter',\n                address_56: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: DEXRouter_Pancake_abi,\n            },\n            factory:{\n                name: 'PancakeFactory',\n                address_56: '0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73',\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: DEXFactory_Pancake_abi,\n            },\n            LP_Token:{\n                name: 'PancakePair',\n                abi: DEXTokenPair_Pancake_abi,\n            },\n        },\n    },\n    contractConfig: {\n        USDT: {\n            hotPotToken: {\n                name: 'HotPotToken',\n                address_56: '0x55d398326f99059fF775485246999027B3197955',\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: USDT,\n            },\n        },\n        BTCB: {\n            hotPotToken: {\n                name: 'BEP20Token',\n                address_56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: WBTC,\n            },\n            callPoolContract: {\n                name: 'ERC20CallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BTCB.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: WBTCCallOptionPool,\n                depositMethod: 'depositAsset',\n                withdrawMethod: 'withdrawAsset',\n                poolerToken:{\n                    name: 'PoolerToken',\n                    abi: WBTCCallPoolerToken,\n                }\n            },\n            putPoolContract: {\n                name: 'PutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BTCB.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: WBTCPutOptionPool,\n                depositMethod: 'depositUSDT',\n                withdrawMethod: 'withdrawUSDT',\n                poolerToken:{\n                    name: 'PoolerToken',\n                    abi: WBTCPutPoolerToken,\n                }\n            },\n            optionContract: {\n                name: 'Option',\n                abi: Option,\n            },\n        },\n        ETH: {\n            hotPotToken: {\n                name: 'BEP20Ethereum',\n                address_56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: ETH,\n            },\n            callPoolContract: {\n                name: 'ERC20CallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.ETH.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: ETHCallOptionPool,\n                depositMethod: 'depositAsset',\n                withdrawMethod: 'withdrawAsset',\n                poolerToken:{\n                    name: 'PoolerToken',\n                    abi: ETHCallPoolerToken,\n                }\n            },\n            putPoolContract: {\n                name: 'PutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.ETH.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: ETHPutOptionPool,\n                depositMethod: 'depositUSDT',\n                withdrawMethod: 'withdrawUSDT',\n                poolerToken:{\n                    name: 'PoolerToken',\n                    abi: ETHPutPoolerToken,\n                }\n            },\n            optionContract: {\n                name: 'Option',\n                abi: Option,\n            },\n        },\n        BNB: {\n            hotPotToken: {\n                name: 'WBNB',\n                address_56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: BNB_abi,\n            },\n            callPoolContract: {\n                name: 'NativeCallOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BNB.call,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: BNBCallOptionPool,\n                depositMethod: 'deposit',\n                withdrawMethod: 'withdraw',\n                poolerToken:{\n                    name: 'PoolerToken',\n                    abi: BNBCallPoolerToken,\n                }\n            },\n            putPoolContract: {\n                name: 'PutOptionPool',\n                address_56: ContractAddressConfig.net56.pool.BNB.put,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: BNBPutOptionPool,\n                depositMethod: 'depositUSDT',\n                withdrawMethod: 'withdrawUSDT',\n                poolerToken:{\n                    name: 'PoolerToken',\n                    abi: BNBPutPoolerToken,\n                }\n            },\n            optionContract: {\n                name: 'Option',\n                abi: Option,\n            },\n        },\n        OPA: {\n            hotPotToken: {\n                name: 'OPAToken',\n                address_56: ContractAddressConfig.net56.opa.token,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: OPA,\n            },\n            staking: {\n                name: 'Staking',\n                abi: Staking,\n                address_56_config: ContractAddressConfig.net56.opa,\n                address: function (stakeType) {\n                    return this[`address_${CurrentChainStorage.chainId}_config`]['staking'][stakeType]['stake'];\n                }\n            }\n        },\n\n    //    OPA Staking\n        TEST_ASSET:{\n            hotPotToken: {\n                name: 'HotPotToken',\n                address_56: \"0xc2c8804451737ed63db01c092dd7699e0f72f1a4\",\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: TEST_ASSET,\n            },\n        },\n        'OPA-USDT@Pancake':{\n            hotPotToken: {\n                name: 'HotPotToken',\n                address_56: ContractAddressConfig.net56.opa.staking['OPA-USDT@Pancake'].asset,\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: DEXTokenPair_Pancake_abi,\n            },\n        },\n    //    LP Price test\n        ADA:{\n            hotPotToken: {\n                name: 'BEP20Cardano',\n                address_56: \"0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47\",\n                address: function(){\n                    return this[`address_${CurrentChainStorage.chainId}`];\n                },\n                abi: ADA_abi,\n            },\n        },\n    },\n};\n\nexport default OptionTradingConfig;\n","import {action, observable} from 'mobx'\n\nclass CurrentChainStorage {\n    @observable chainId = 0;\n\n    @action\n    setChainId(chainId){\n        this.chainId=chainId;\n    }\n}\n\nexport default new CurrentChainStorage()\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","class Log {\n    level = 'info';\n\n    debug(log) {\n        if (this.level === 'debug') {\n            console.log(log);\n        }\n    }\n\n    info(log) {\n        console.log(log);\n    }\n}\n\nexport default new Log();\n"," import React from 'react';\nimport {render} from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {ErrorBoundary} from '@/components';\nimport ApplicationConfig from 'ApplicationConfig';\nimport moment from 'moment';\nimport intl from 'react-intl-universal';\nimport './index.scss';\n\nimport App from './App';\n\nmoment.locale('zh-cn');\n\nconst locales = {\n    'en': require('./locales/en_US.json'),\n    'zh': require('./locales/zh_CN.json'),\n};\n// let lang = (navigator.languages && navigator.languages[0]) || navigator.language;\n// let lang = 'zh-CN';\nlet lang = ApplicationConfig.lang;\nintl.init({\n    currentLocale: lang.split('-')[0],\n    locales: locales,\n});\n\nconst CONTAINER = document.getElementById('root');\n\nif (!CONTAINER) {\n    throw new Error(' <div id=\"root\"></div> Node is not found.');\n}\n\nrender(\n    <ErrorBoundary>\n        <App/>\n    </ErrorBoundary>,\n    CONTAINER\n);\n\nif (process.env.REACT_APP_HMR === 'true' && module.hot) {\n    module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","class RootStore {\n}\n\nexport {};\nexport default new RootStore();\n","import './index.scss';\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Logo = () => {\n    return (\n        <Link to=\"/\" className=\"logo_link\"></Link>\n    );\n};\n\nexport default Logo;\n","import {action, observable} from 'mobx';\nimport intl from 'react-intl-universal';\n\nclass HeaderVO {\n    @observable currentNavKey = 'buy';\n\n    @observable navArr = [\n        {\n            key:'buy',\n            url:'/#BUY',\n            nav: intl.get('commons.header.buyer'),\n            className:'nav_link'\n        },\n        {\n            key:'sell',\n            url:'sell',\n            nav: intl.get('commons.header.pooler'),\n            className:'nav_link'\n        },\n        {\n            key:'analytics',\n            url:'analytics',\n            nav: intl.get('commons.header.analytics'),\n            className:'nav_link'\n        },\n        {\n            key:'opa',\n            url:'OPA',\n            nav: intl.get('commons.header.opa'),\n            className:'nav_link'\n        },\n        {\n            key:'faq',\n            url:'FAQ',\n            nav: intl.get('commons.header.faq'),\n            className:'nav_link'\n        }\n    ];\n\n    constructor(){\n    }\n\n    @action\n    setCurrentNavKey(currentNavKey){\n        this.currentNavKey = currentNavKey;\n\n        for(let navItem of this.navArr){\n            if(navItem.key==currentNavKey){\n                navItem.className='nav_link active';\n            }else{\n                navItem.className='nav_link';\n            }\n        }\n    }\n\n    @action\n    setNavArr(navArr){\n        this.navArr=navArr;\n    }\n}\n\nexport default new HeaderVO();\n","import './index.scss';\n\nimport React, {Component} from \"react\";\nimport { Dialog } from '@alifd/next';\nimport DialogBoxVO from './DialogBoxVO';\nimport {observer} from \"mobx-react\";\n\n@observer\nclass DialogBox extends Component {\n    onOpen = () => {\n        DialogBoxVO.setVisible(true);\n    };\n\n    onClose = () => {\n        DialogBoxVO.setVisible(false);\n    };\n\n    componentDidMount(){\n        DialogBoxVO.configInit();\n    }\n\n    render(){\n        return (\n            <Dialog\n                title=\"\"\n                visible={DialogBoxVO.visible}\n                footerActions={[]}\n                onClose={this.onClose}>\n                <div className={'content_title'}><div className={DialogBoxVO.titleIcon}></div>{DialogBoxVO.title}</div>\n                <div className={'d_content'}>{DialogBoxVO.content}</div>\n            </Dialog>\n        );\n    }\n};\n\nexport default DialogBox;\n","import React, {Component} from 'react';\nimport {ConnectWallet} from '@components'\nimport Logo from '../../../../components/Logo'\nimport HeaderVO from './HeaderVO';\n\nimport './index.scss';\nimport {observer} from \"mobx-react\";\nimport DialogBox from \"../../../../components/DialogBox\";\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport CurrentChainStorage from \"../../../../components/Web3/CurrentChainStorage\";\nimport OptionTradingConfig from \"../../../../etherscan/OptionTradingConfig\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\n\n@observer\nclass Header extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && CurrentChainStorage.chainId){\n                if(CurrentChainStorage.chainId != OptionTradingConfig.defaultChain.id){\n                    DialogBoxVO.confirm();\n                    DialogBoxVO.setTitle('You Must Change Networks');\n\n                    DialogBoxVO.setContent(`We've detected that you need to switch your wallet's network to ${OptionTradingConfig.defaultChain.name} for this Dapp.`);\n                }else{\n                    DialogBoxVO.setVisible(false);\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"header_container\">\n                <div className=\"section\">\n                    <DialogBox/>\n                    <div className={'section_container header_item_container'}>\n                        <div className={'h_i_c_l'}>\n                            <div className={'logo_box'}>\n                                <Logo/>\n                                <div className={'audited_by'}>Audited by Slowmist</div>\n                            </div>\n                            <ul className=\"navs\">\n                                {\n                                    HeaderVO.navArr.map(navItem => (\n                                        <li key={navItem.key} className=\"nav_menu\">\n                                            <a href={navItem.url} className={navItem.className}>\n                                                {navItem.nav}\n                                            </a>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                        <div className=\"operations\">\n                            <ConnectWallet showAccount={true}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './index.scss';\nimport './font/iconfont.css';\n\nimport Logo from \"../../../../components/Logo\";\n\nexport default () => {\n    let today = new Date();\n    let year = today.getFullYear();\n    return (\n        <div className=\"footer_container\">\n            <div className=\"section f_section\">\n                <div className={'section_container footer_item_container'}>\n                    <div className={'f_i_c_l'}>\n                        <Logo/>\n                        <div className=\"f_copyright\">{year} © Option Panda. </div>\n                    </div>\n                    <div className={'f_i_c_m'}>\n                        <div className={'audited_by'}>\n                            Audited by:\n                        </div>\n                        <div>\n                            <a href=\"https://github.com/GiantPandaZoo/docs/blob/main/SlowMist%20Audit%20Report%20-%20OptionPanda.pdf\" className={'slow_mist'} target={'_blank'}></a>\n                        </div>\n                    </div>\n                    <div className={'f_i_c_r'}>\n                        <a href=\"mailto:optionpanda@protonmail.com\" className={'f_link'}>\n                            <span className=\"iconfont icon-email-fill\"></span>\n                        </a>\n                        <a\n                            href=\"https://t.me/opandaofficial\"\n                            target={'_blank'}\n                            className={'f_link'}\n                        >\n                            <span className=\"iconfont icon-telegram-original\"></span>\n                        </a>\n                        <a\n                            href=\"https://twitter.com/option_panda\"\n                            target={'_blank'}\n                            className={'f_link'}\n                        >\n                            <span className=\"iconfont icon-twitter\"></span>\n                        </a>\n                        <a\n                            href=\"https://discord.gg/SdjEj49ePa\"\n                            target={'_blank'}\n                            className={'f_link'}\n                        >\n                            <span className=\"iconfont icon-discord\"></span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","/* eslint-disable new-cap */\nimport React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\n\nimport './index.scss';\n\nimport {ConnectWallet} from '@components';\n\nconst {Cell} = ResponsiveGrid;\n\nconst Banner = () => {\n    return (\n        <section id=\"J_banner\" className=\"section b_container b_container_home\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={0}>\n                    <Cell className=\"grid-6 section_item l\" colSpan={6}>\n                        <div className={'title home'}>{intl.getHTML('page.home.banner.title')}</div>\n                        <div className={'content'}>\n                            {intl.get('page.home.banner.content')}\n                        </div>\n                        <div className={'btn'}>\n                            <ConnectWallet/>\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-6 section_item r\" colSpan={6}>\n                        <div className={'content home'}>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n        </section>\n    );\n};\n\nexport default Banner;\n","import log from '../Log';\nimport d from \"current-device\";\nimport {action, observable} from \"mobx\";\n\nclass Device {\n    @observable deviceType = \"\";\n\n    constructor(){\n        this.setDeviceType();\n    }\n\n    @action\n    setDeviceType(){\n        if(d.mobile()){\n            this.deviceType='phone';\n        }\n\n        if(d.tablet()){\n            this.deviceType='tablet';\n        }\n\n        if(d.desktop()){\n            this.deviceType='desktop';\n        }\n\n        log.debug(`current device is => ${this.deviceType}`);\n    }\n}\n\nexport default new Device()\n","import React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport Device from '../../../../components/Device';\n\nimport './index.scss';\n\nconst {Cell} = ResponsiveGrid;\n\nconst UseCases = () => {\n    return (\n        <section id=\"J_useCases\" className=\"section u_container\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={10} device={Device.deviceType}>\n                    <Cell className=\"grid-2 section_item u_section_item\" colSpan={2}>\n                        <div className={'buyer'}>\n                            <div className=\"u_s_i_item buyer_icon\"/>\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-4 section_item u_section_item uc_content\" colSpan={4}>\n                        <div className={'buyer'}>\n                            <div className=\"u_s_i_item title\">{intl.get('page.home.userCase.buyer.title')}</div>\n                            <div className=\"u_s_i_item section_content des\">\n                                {intl.get('page.home.userCase.buyer.content')}\n                            </div>\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-2 section_item u_section_item\" colSpan={2}>\n                        <div className={'pooler'}>\n                            <div className=\"u_s_i_item poller_icon\"/>\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-4 section_item u_section_item uc_content\" colSpan={4}>\n                        <div className={'pooler'}>\n                            <div className=\"u_s_i_item title\">{intl.get('page.home.userCase.poller.title')}</div>\n                            <div className=\"u_s_i_item section_content des\">\n                                {intl.get('page.home.userCase.poller.content')}\n                            </div>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n        </section>\n    );\n};\n\nexport default UseCases;\n","import React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\n\nimport './index.scss';\n\nconst {Cell} = ResponsiveGrid;\n\nconst QA = () => {\n    return (\n        <section id=\"J_qa\" className=\"section qa_container\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={10}>\n                    <Cell className=\"grid-12 section_item section_title module_title\" colSpan={12}>\n                        {intl.get('page.home.qa.sectionTitle')}\n                    </Cell>\n\n                    <Cell className=\"grid-12 section_item qa_section_item\" colSpan={12}>\n                        <div className=\"title\">{intl.get('page.home.qa.item1.title')}</div>\n                        <div className=\"section_content\">\n                            {intl.getHTML('page.home.qa.item1.content')}\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-12 section_item qa_section_item\" colSpan={12}>\n                        <div className=\"title\">{intl.get('page.home.qa.item2.title')}</div>\n                        <div className=\"section_content\">\n                            {intl.getHTML('page.home.qa.item2.content')}\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n        </section>\n    );\n};\n\nexport default QA;\n","import {observer} from \"mobx-react\";\nimport {Component} from \"react\";\nimport currentAccountStorage from \"../Web3/CurrentAccountStorage\";\n\n@observer\nclass IfConnectedWallet extends Component {\n    render() {\n        if (currentAccountStorage.account) {\n            return this.props.children;\n        } else {\n            return '';\n        }\n    }\n}\n\nexport default IfConnectedWallet;\n","import {observer} from \"mobx-react\";\nimport {Component} from \"react\";\n\n@observer\nclass ConditionDisplay extends Component {\n    render() {\n        if (this.props.display) {\n            return this.props.children;\n        } else {\n            return '';\n        }\n    }\n}\n\nexport default ConditionDisplay;\n","import {observable} from \"mobx\";\n\nclass OptionTradingDTO {\n    @observable coinName = \"\";\n    @observable optionType = \"\";\n    @observable optionRound = \"\";\n    @observable optionDuration = \"\";\n    @observable optionAmount = 0;\n    @observable strikePrice = 0;\n    @observable optionCosts = 0;\n    @observable expiryDate = 0;\n    @observable optionAmountMax = 0;\n    @observable optionAddress = \"\";\n    @observable poolContractAddress=\"\";\n}\n\nexport default OptionTradingDTO;\n","import {action, observable} from \"mobx\";\nimport OptionTradingConfig from \"../../../../etherscan/OptionTradingConfig\";\n\nclass OptionTradingDTOList {\n    @observable coinName = OptionTradingConfig.defaultCoin;\n    @observable optionType = OptionTradingConfig.defaultOptionType;\n    @observable optionPoolContractAddress = \"\";\n\n    @observable optionRounds = [];\n\n    @action\n    setOptionType(optionType) {\n        this.optionType = optionType;\n    }\n\n    @action\n    setCoinName(coinName) {\n        this.coinName = coinName;\n    }\n\n    @action\n    setOptionType(optionType) {\n        this.optionType = optionType;\n    }\n\n    @action\n    setOptionRounds(optionTradingVoArr) {\n        this.optionRounds = optionTradingVoArr;\n    }\n}\n\nexport default new OptionTradingDTOList();\n","import BigNumber from 'bignumber.js'\nimport OptionTradingConfig from \"../../etherscan/OptionTradingConfig\";\n\nconst units = {\n        wei: '0.000000000000000001',\n        kwei: '0.000000000000001',\n        mwei: '0.000000000001',\n        gwei: '0.000000001',\n        szabo: '0.000001',\n        finney: '0.001',\n        ether: '1',\n        kether: '1000',\n        mether: '1000000',\n        gether: '1000000000',\n        tether: '1000000000000',\n        price: '1',\n    },\n    scale = {\n        wei: '1000000000000000000',\n        kwei: '1000000000000000',\n        mwei: '1000000000000',\n        gwei: '1000000000',\n        szabo: '1000000',\n        finney: '1000',\n        ether: '1',\n        kether: '0.001',\n        mether: '0.000001',\n        gether: '0.000000001',\n        tether: '0.000000000001',\n        usd: '0.000001',\n        price: '1000000',\n    };\n\nconst scaleMap = ()=>{\n    return OptionTradingConfig.getAssetsScaleMap();\n};\n\nclass BigNumberConvert {\n    toNumber(bnString){\n        let i = new BigNumber(bnString);\n        return i.toNumber();\n    }\n\n    toFormat(bnString){\n        let i = new BigNumber(bnString);\n        return i.toFormat();\n    }\n\n    toFormatDecimal(bnString,decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(bnString);\n        return i.decimalPlaces(_decimal).toFormat();\n    }\n\n    toFormatDecimalNumber(bnString,decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(bnString);\n        return i.decimalPlaces(_decimal).toNumber();\n    }\n\n    toShowValue(primitiveValue,asset){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).toString();\n    }\n\n    toShowValueFormat(primitiveValue,asset){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).toFormat();\n    }\n\n    toShowValueFormatDecimal(primitiveValue,asset,decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).decimalPlaces(_decimal).toFormat();\n    }\n\n    toShowValueFormatDecimalSmall(primitiveValue,asset,decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).decimalPlaces(_decimal,1).toFormat();\n    }\n\n    toShowValueFormatDecimalAsset(primitiveValue,asset){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).decimalPlaces(4).toFormat();\n    }\n\n    toShowValueFormatDecimalUSDT(primitiveValue){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()['USDT']['show']);\n\n        let num=(i.times(t)).times(n);\n        let _decimal=2;\n        if(num < 0.01){\n            _decimal=4;\n        }\n        return num.decimalPlaces(_decimal).toFormat();\n    }\n\n    toShowValueFormatDecimalOPA(primitiveValue){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()['OPA']['show']);\n        return (i.times(t)).times(n).decimalPlaces(4).toFormat();\n    }\n\n    toShowNumber(primitiveValue,asset){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n);\n    }\n\n    toShowNumberDecimal(primitiveValue,asset,_decimal){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).decimalPlaces(_decimal).toNumber();\n    }\n\n    toShowNumberDecimalAsset(primitiveValue,asset){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).decimalPlaces(4).toNumber();\n    }\n\n    toShowNumberDecimalAssetSmall(primitiveValue,asset, decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['show']);\n        return (i.times(t)).times(n).decimalPlaces(_decimal,1).toNumber();\n    }\n\n    toShowNumberDecimalUSDT(primitiveValue){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()['USDT']['show']);\n\n        let num=(i.times(t)).times(n);\n        let _decimal=2;\n        if(num < 0.01){\n            _decimal=4;\n        }\n        return num.decimalPlaces(_decimal).toNumber();\n    }\n\n    toShowNumberDecimalOPA(primitiveValue){\n        let i = new BigNumber(primitiveValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()['OPA']['show']);\n        return (i.times(t)).times(n).decimalPlaces(4).toNumber();\n    }\n\n    toPrimitiveValue(showValue,asset){\n        let i = new BigNumber(showValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['primitive']);\n        return (i.times(t)).times(n).toFixed();\n    }\n\n    toPrimitiveBigNumber(showValue,asset){\n        let i = new BigNumber(showValue);\n        let t = new BigNumber('1');\n        let n = new BigNumber(scaleMap()[asset]['primitive']);\n        return (i.times(t)).times(n);\n    }\n\n    toWei(ether){\n        let i = new BigNumber(ether);\n        let t = new BigNumber(units.ether);\n        let n = new BigNumber(scale.wei);\n        return (i.times(t)).times(n).toString();\n    }\n\n    plusAndToString(x,y,decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(x);\n        let t = new BigNumber(y);\n        return i.plus(t).decimalPlaces(_decimal).toString();\n    }\n\n    timesAndFormat(x,y,decimal){\n        let _decimal=decimal||18;\n        let i = new BigNumber(x);\n        let t = new BigNumber(y);\n        return i.times(t).decimalPlaces(_decimal).toFormat();\n    }\n\n    minusAndToShowNumberDecimalUSDT(x,y){\n        let xNum=new BigNumber(x);\n        let yNum=new BigNumber(y);\n\n        let num=xNum.minus(yNum);\n        let _decimal=2;\n        if(num < 0.01){\n            _decimal=4;\n        }\n\n        return num.decimalPlaces(_decimal);\n    }\n\n    plusAndToShowNumberDecimalUSDT(x,y){\n        let xNum=new BigNumber(x);\n        let yNum=new BigNumber(y);\n\n        let num=xNum.plus(yNum);\n        let _decimal=2;\n        if(num < 0.01){\n            _decimal=4;\n        }\n\n        return num.decimalPlaces(_decimal);\n    }\n\n    timesToNumber(primitiveValue, scale, decimal){\n        let i = new BigNumber(primitiveValue);\n        return i.times(scale).decimalPlaces(decimal).toNumber();\n    }\n}\n\nexport default new BigNumberConvert();\n","import moment from 'moment'\n\nclass Countdown {\n    endTime=0;\n    endTimeFormat=0;\n    countdownTime='';\n    isOver=false;\n\n    constructor(endTime){\n        this.endTime=endTime;\n        this.buildCountdownTime();\n    }\n\n    buildCountdownTime(){\n        let date=new Date(this.endTime * 1000);\n        let a = moment(date);\n        a.local();\n\n        this.endTimeFormat=a.format('YYYY-MM-DD HH:mm:ss');\n\n        let now=moment();\n        let diff=a.diff(now, 'seconds');\n        if(diff<=0){\n            this.countdownTime = \"--\";\n            this.isOver=true;\n        }else{\n            this.isOver=false;\n\n            let minDiff=a.diff(now, 'minutes');\n            let min='';\n            if(minDiff<10){\n                min=`0${minDiff}`;\n            }else{\n                min=minDiff;\n            }\n\n            let secDiff=diff % 60;\n            let sec='';\n            if(secDiff<10){\n                sec=`0${secDiff}`;\n            }else{\n                sec=secDiff;\n            }\n\n            this.countdownTime = `${min}:${sec}`;\n        }\n    }\n\n    refreshCountdownTime(){\n        this.buildCountdownTime();\n        return this;\n    }\n}\n\nexport default Countdown;\n","import {action, observable} from 'mobx';\nimport intl from 'react-intl-universal';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport OptionTradingDTOList from './OptionTradingDTOList';\nimport BigNumberConvert from '../../../../components/BigNumberConvert'\nimport Countdown from \"../../../../components/Countdown\";\n\nclass OptionTradingVO {\n    @observable coinName = OptionTradingConfig.defaultCoin;\n    @observable optionType = OptionTradingConfig.defaultOptionType;\n    @observable optionRounds = [];\n    @observable optionDuration = \"\";\n    @observable optionRound = 0;\n    @observable optionAmount = 0;\n    @observable optionAmountWei = 0;\n    @observable strikePrice = 0;\n    @observable strikePriceTxt = \"\";\n    @observable optionCosts = 0;\n    @observable optionCostsTxt = \"\";\n    @observable expiryDate = 0;\n    @observable expiryDateTxt = \"\";\n    @observable optionAmountMax = 0;\n    @observable optionAmountMaxFloat = 0;\n    @observable optionAmountMaxTxt = \"\";\n\n    @observable contractAddress=\"\";\n    @observable poolContractAddress=\"\";\n\n    @observable tradingEnable = false;\n\n    getDefaultOptionDuration() {\n        if(!this.optionDuration || !this.optionRound){\n            return \"\";\n        }\n        return `${this.optionDuration}#${this.optionRound}`;\n    }\n\n    @action\n    reset(){\n        this.optionRounds = [];\n        this.optionDuration = \"\";\n        this.optionRound = 0;\n        this.optionAmount = 0;\n        this.optionAmountWei = 0;\n        this.strikePrice = 0;\n        this.strikePriceTxt = \"\";\n        this.optionCosts = 0;\n        this.optionCostsTxt = \"\";\n        this.expiryDate = 0;\n        this.expiryDateTxt = \"\";\n        this.optionAmountMax = 0;\n        this.optionAmountMaxFloat = 0;\n        this.optionAmountMaxTxt = \"\";\n\n        this.contractAddress=\"\";\n        this.poolContractAddress=\"\";\n\n        this.tradingEnable = false;\n    }\n\n    @action\n    setTradingEnable(tradingEnable){\n        this.tradingEnable=tradingEnable;\n    }\n\n    @action\n    setOptionDurationTxt(optionDurationTxt) {\n        let arr=optionDurationTxt.split(\"#\");\n        this.optionDuration=arr[0];\n        this.optionRound = Number(arr[1]);\n    }\n\n    @action\n    setOptionAmount(optionAmount){\n        this.optionAmount=optionAmount;\n        this.optionAmountWei=BigNumberConvert.toPrimitiveValue(optionAmount,this.coinName);\n    }\n\n    @action\n    setDefaultOptionAmount(){\n        let defaultOptionAmount=1;\n        if(this.optionAmountMaxFloat<1){\n            defaultOptionAmount=this.optionAmountMaxFloat;\n        }\n        this.setOptionAmount(defaultOptionAmount);\n    }\n\n    @action\n    setExpiryDate(expiryDate) {\n        // expiryDate=1609863401;\n        this.expiryDate = expiryDate;\n        let _countdownComponent=new Countdown(this.expiryDate);\n        this.expiryDateTxt=_countdownComponent.countdownTime;\n    }\n\n    @action\n    refreshExpiryDate(){\n        let _countdownComponent=new Countdown(this.expiryDate);\n        this.expiryDateTxt=_countdownComponent.countdownTime;\n        this.tradingEnable=!_countdownComponent.isOver;\n    }\n\n    @action\n    setOptionAmountMax(optionAmountMax){\n        this.optionAmountMax=optionAmountMax;\n        this.optionAmountMaxTxt=BigNumberConvert.toShowValueFormatDecimalAsset(optionAmountMax,this.coinName);\n        this.optionAmountMaxFloat=BigNumberConvert.toShowNumberDecimalAssetSmall(optionAmountMax,this.coinName,4);\n        if(this.optionAmountMaxFloat<=0){\n            this.optionAmountMaxFloat=BigNumberConvert.toShowNumberDecimalAssetSmall(optionAmountMax,this.coinName,8);\n        }\n    }\n\n    @action\n    setStrikePrice(strikePrice){\n        this.strikePrice=strikePrice;\n        this.strikePriceTxt=BigNumberConvert.toShowValueFormatDecimalUSDT(strikePrice);\n    }\n\n    @action\n    setOptionCosts(optionCosts){\n        this.optionCosts=optionCosts;\n\n        let costsNum=BigNumberConvert.toShowNumberDecimal(optionCosts,'USDT',8);\n        if(costsNum<0.01){\n            this.optionCostsTxt=BigNumberConvert.toShowValueFormatDecimal(optionCosts,'USDT',4);\n        }else{\n            this.optionCostsTxt=BigNumberConvert.toShowValueFormatDecimalUSDT(optionCosts);\n        }\n    }\n\n    @action\n    refresh() {\n        if (!OptionTradingDTOList) {\n            return;\n        }\n\n        this.coinName = OptionTradingDTOList.coinName;\n        this.optionType = OptionTradingDTOList.optionType;\n        this.optionDuration = this.optionDuration || OptionTradingConfig.defaultOptionDuration;\n        this.buildOptionRound(OptionTradingDTOList);\n        this.buildCurrentOptionInfo(OptionTradingDTOList);\n        this.setDefaultOptionAmount();\n    }\n\n    buildCurrentOptionInfo(OptionTradingDTOList) {\n        let currentOption = null;\n        let optionDtoArr = OptionTradingDTOList.optionRounds;\n        if (!(optionDtoArr && optionDtoArr.length)) {\n            return;\n        }\n\n        for (let optionDto of optionDtoArr) {\n            if (this.optionDuration === optionDto.optionDuration) {\n                currentOption = optionDto;\n            }\n        }\n\n        if (currentOption) {\n            this.setStrikePrice(currentOption.strikePrice);\n            this.setOptionCosts(currentOption.optionCosts);\n            this.setExpiryDate(currentOption.expiryDate);\n            this.setOptionAmountMax(currentOption.optionAmountMax);\n            this.contractAddress=currentOption.optionAddress;\n            this.poolContractAddress=currentOption.poolContractAddress;\n            this.optionRound=currentOption.optionRound;\n        }\n    }\n\n    buildOptionRound(OptionTradingDTOList) {\n        let optionDtoArr = OptionTradingDTOList.optionRounds;\n        if (!(optionDtoArr && optionDtoArr.length)) {\n            return;\n        }\n\n        let optionDurationDesMap={\n            \"300\":intl.get('page.home.trading.optionDuration.300'),\n            \"900\":intl.get('page.home.trading.optionDuration.900'),\n            \"1800\":intl.get('page.home.trading.optionDuration.1800'),\n            \"2700\":intl.get('page.home.trading.optionDuration.2700'),\n            \"3600\":intl.get('page.home.trading.optionDuration.3600'),\n        };\n\n        let optionRounds = [];\n        for (let optionDto of optionDtoArr) {\n            let optionRound = {\n                // \"label\": `${optionDurationDesMap[optionDto.optionDuration]} -- ${optionDto.optionRound}${intl.get('page.home.trading.optionDuration.round')}`,\n                \"label\": `${optionDurationDesMap[optionDto.optionDuration]}`,\n                \"value\": `${optionDto.optionDuration}#${optionDto.optionRound}`\n            };\n            optionRounds.push(optionRound);\n        }\n\n        this.optionRounds = optionRounds.sort((round1,round2)=>{\n            return round2.label.padStart(20,'0') > round1.label.padStart(20,'0') ? -1 : 1;\n        });\n    }\n}\n\nexport default new OptionTradingVO();\n","import {action, observable} from 'mobx';\n\nclass ProfitVO {\n    @observable callDataArr = [];\n    @observable callDataArrTemp = [];\n    @observable callLoadDataLength = 0;\n    @observable callLoadedDataLength = 0;\n\n    isCallLoading = false;\n\n    @observable putDataArr = [];\n    @observable putDataArrTemp = [];\n    @observable putLoadDataLength = 0;\n    @observable putLoadedDataLength = 0;\n\n    isPutLoading = false;\n\n    constructor(){\n    }\n\n    @action\n    reset(){\n        this.callDataArrTemp = [];\n        this.callLoadDataLength = 0;\n        this.callLoadedDataLength = 0;\n\n        this.isCallLoading = true;\n\n        this.putDataArrTemp = [];\n        this.putLoadDataLength = 0;\n        this.putLoadedDataLength = 0;\n\n        this.isPutLoading=true;\n    }\n\n    @action\n    addCallData(data){\n        this.callDataArrTemp.push(data);\n        this.addCallLoadedDataLength(1);\n    }\n\n    @action\n    addCallLoadDataLength(length){\n        this.callLoadDataLength += length;\n    }\n\n    @action\n    addCallLoadedDataLength(length){\n        this.callLoadedDataLength += length;\n\n        if(this.callLoadedDataLength == this.callLoadDataLength){\n            this.setCallLoading(false);\n\n            this.callDataArr=this.callDataArrTemp.sort((option1,option2)=>{\n                let flag1=`${option1.coinName}`;\n                let flag2=`${option2.coinName}`;\n                return flag2 > flag1 ? -1 : 1;\n            });\n        }\n    }\n\n    @action\n    setCallLoading(isLoading){\n        this.isCallLoading=isLoading;\n    }\n\n    @action\n    addPutData(data){\n        this.putDataArrTemp.push(data);\n        this.addPutLoadedDataLength(1);\n    }\n\n    @action\n    addPutLoadDataLength(length){\n        this.putLoadDataLength += length;\n    }\n\n    @action\n    addPutLoadedDataLength(length){\n        this.putLoadedDataLength += length;\n\n        if(this.putLoadedDataLength == this.putLoadDataLength){\n            this.setPutLoading(false);\n\n            this.putDataArr=this.putDataArrTemp.sort((option1,option2)=>{\n                let flag1=`${option1.coinName}`;\n                let flag2=`${option2.coinName}`;\n                return flag2 > flag1 ? -1 : 1;\n            });\n        }\n    }\n\n    @action\n    setPutLoading(isLoading){\n        this.isPutLoading=isLoading;\n    }\n}\n\nexport default new ProfitVO();\n","import {action, observable} from 'mobx';\nimport log from \"../../../../components/Log\";\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass MyOptionContractsVO {\n    callOptionType=\"callPoolContract\";\n    putOptionType=\"putPoolContract\";\n\n    @observable dataArr = [];\n    @observable dataArrTemp = [];\n    @observable loadDataLength = 0;\n    @observable loadedDataLength = 0;\n    isLoading = false;\n\n    constructor(){\n    }\n\n    @action\n    reset(){\n        this.currentPrice = 0;\n        this.dataArrTemp = [];\n        this.loadDataLength=0;\n        this.loadedDataLength=0;\n        this.isLoading=true;\n    }\n\n    @action\n    addData(data){\n        this.dataArrTemp.push(data);\n\n        this.addLoadedDataLength(1);\n    }\n\n    @action\n    addLoadDataLength(length){\n        this.loadDataLength=this.loadDataLength+length;\n    }\n\n    @action\n    addLoadedDataLength(length){\n        this.loadedDataLength=this.loadedDataLength+length;\n\n        if(this.loadedDataLength == this.loadDataLength){\n            this.setLoading(false);\n\n            let arrTemp=this.dataArrTemp.sort((option1,option2)=>{\n                let flag1=`${option1.coinName}_${option1.poolType}_${option1.durationShow.padStart(10,'0')}`;\n                let flag2=`${option2.coinName}_${option2.poolType}_${option2.durationShow.padStart(10,'0')}`;\n                return flag2 > flag1 ? -1 : 1;\n            });\n\n            this.dataArr=arrTemp;\n        }\n    }\n\n    @action\n    setLoading(isLoading){\n        this.isLoading=isLoading;\n    }\n\n    @action\n    refreshExpiryDate(){\n        let arr=this.dataArr;\n        this.dataArr=[];\n        for(let data of arr){\n            data.refreshExpiryDate();\n        }\n        this.dataArr=arr;\n    }\n}\n\nexport default new MyOptionContractsVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport BigNumber from 'bignumber.js'\nimport Countdown from \"../../../../components/Countdown\";\nimport log from '../../../../components/Log';\n\nclass MyOptionContractsData {\n    @observable coinName='';\n    @observable assetName='';\n    @observable poolType='';\n    @observable duration='';\n    @observable durationShow='';\n    @observable position=0;\n    @observable positionShowNumber=0;\n    @observable positionShow='';\n    @observable premium='';\n    @observable premiumShow='';\n    @observable strikePrice='';\n    @observable strikePriceShow='';\n    @observable currentPrice='';\n    @observable currentPriceShow='';\n    @observable revenue='';\n    @observable revenueShow='';\n    @observable revenueStyle='';\n    @observable expiryDate='';\n    @observable expiryDateShow='';\n    @observable countdown='';\n    @observable countdownStyle='';\n\n    @action\n    setCoinName(value){\n        this.coinName=value;\n    }\n\n    @action\n    setPoolType(value) {\n        if(value==\"callPoolContract\"){\n            this.poolType=\"CALL\";\n            this.assetName=this.coinName;\n        }else if(value==\"putPoolContract\"){\n            this.poolType = \"PUT\";\n            this.assetName=\"USDT\";\n        }else{\n            this.poolType = value;\n        }\n    }\n\n    @action\n    setDuration(value) {\n        this.duration = value;\n\n        let durationMin=this.duration / 60;\n        this.durationShow = `${durationMin}min`;\n    }\n\n    @action\n    setPosition(value) {\n        this.position = value;\n        this.positionShowNumber=BigNumberConvert.toShowNumber(this.position,this.coinName,4);\n        this.positionShow=`${BigNumberConvert.toShowValueFormatDecimalAsset(this.position,this.coinName)} ${this.coinName}`;\n    }\n\n    @action\n    setPremium(value) {\n        this.premium = value;\n        this.premiumShow=`$${BigNumberConvert.toShowValueFormatDecimalUSDT(this.premium)}`;\n    }\n\n    @action\n    setStrikePrice(value) {\n        this.strikePrice = value;\n        this.strikePriceShow=`$${BigNumberConvert.toShowValueFormatDecimalUSDT(this.strikePrice)}`;\n        this.setRevenue();\n    }\n\n    @action\n    setCurrentPrice(value, isConverted) {\n        this.currentPrice = value;\n        if(isConverted){\n            this.currentPriceShow=`$${BigNumberConvert.toFormatDecimal(this.currentPrice,2)}`;\n        }else{\n            this.currentPriceShow=`$${BigNumberConvert.toShowValueFormatDecimalUSDT(this.currentPrice)}`;\n        }\n    }\n\n    @action\n    setRevenue() {\n        let profit=0;\n        if(this.poolType==\"CALL\"){\n            profit=this.getCallProfit();\n        }else if(this.poolType==\"PUT\"){\n            profit=this.getPutProfit();\n        }\n\n        this.revenue = profit;\n        this.revenueShow=`${BigNumberConvert.toFormatDecimal(this.revenue,4)} ${this.assetName}`;\n        this.revenueStyle= profit>0 ? \"revenue\" : \"\";\n    }\n\n    getCallProfit(){\n        let _currentPrice=BigNumberConvert.toPrimitiveBigNumber(this.currentPrice,\"USDT\");\n        let _strikePrice=new BigNumber(this.strikePrice);\n\n        log.debug(`getCallProfit, _currentPrice => ${_currentPrice.toFormat()}, _strikePrice => ${_strikePrice.toFormat()}`);\n\n        if(_currentPrice.comparedTo(_strikePrice)<=0 || _currentPrice.comparedTo(0)<=0 || _strikePrice.comparedTo(0)<=0){\n            return 0;\n        }\n\n        // let ratio=this.sub(_currentPrice, this.strikePrice)/this.strikePrice;\n        // let profit=ratio * this.positionShowNumber;\n        let profit=_currentPrice.minus(_strikePrice).times(this.positionShowNumber).div(_strikePrice);\n        log.debug(`profit => ${profit.toFormat()}`);\n        return profit;\n    }\n\n    getPutProfit(){\n        let _currentPrice=BigNumberConvert.toPrimitiveBigNumber(this.currentPrice,\"USDT\");\n        let _strikePrice=new BigNumber(this.strikePrice);\n\n        log.debug(`getPutProfit, _currentPrice => ${_currentPrice.toFormat()}, _strikePrice => ${_strikePrice.toFormat()}`);\n\n        if(_currentPrice.comparedTo(_strikePrice)>=0 || _currentPrice.comparedTo(0)<=0 || _strikePrice.comparedTo(0)<=0){\n            return 0;\n        }\n\n        // let ratio=this.sub(this.strikePrice, _currentPrice)/this.strikePrice;\n        // let holderShare=ratio * this.positionShowNumber;\n        // let profit=holderShare * this.strikePrice;\n        let profit=_strikePrice.minus(_currentPrice).times(this.positionShowNumber);\n        profit=BigNumberConvert.toShowNumber(profit,\"USDT\");\n        log.debug(`profit => ${profit.toFormat()}`);\n        return profit;\n    }\n\n    @action\n    setExpiryDate(value) {\n        // value=1609864055;\n        this.expiryDate = value;\n\n        let _countdownComponent=new Countdown(this.expiryDate);\n        this.expiryDateShow=_countdownComponent.endTimeFormat;\n        this.countdown=_countdownComponent.countdownTime;\n        if(!_countdownComponent.isOver){\n            this.countdownStyle='countdown';\n        }else{\n            this.countdownStyle='';\n        }\n    }\n\n    @action\n    refreshExpiryDate(){\n        this.setExpiryDate(this.expiryDate);\n    }\n}\n\nexport default MyOptionContractsData;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert'\nimport OptionTradingVOList from \"./OptionTradingDTOList\";\n\nclass ProfitChartVO {\n    currentPrice=0;\n    @observable currentPriceShow=0;\n\n    strikePrice=0;\n    optionPremium=0;\n    cost=0;\n\n    @observable chartData=[];\n    @observable annotationStrikePrice={\n        start:[],\n        end:[]\n    };\n    @observable annotationCost={\n        start:[],\n        end:[]\n    };\n    @observable currentPriceTips=[];\n    @observable chartFillColor=\"\";\n    @observable isLoaded=false;\n\n    @action\n    setIsLoaded(isLoaded){\n        this.isLoaded=isLoaded;\n    }\n\n    @action\n    setChartFillColor(chartFillColor){\n        this.chartFillColor=chartFillColor;\n    }\n\n    @action\n    setCurrentPrice(currentPrice){\n        this.currentPrice=currentPrice;\n        this.currentPriceShow=BigNumberConvert.toShowNumberDecimalUSDT(currentPrice);\n    }\n\n    @action\n    setAnnotationStrikePrice(annotationStrikePrice){\n        this.annotationStrikePrice=annotationStrikePrice;\n    }\n\n    @action\n    setAnnotationCost(annotationCost){\n        this.annotationCost=annotationCost;\n    }\n\n    @action\n    setStrikePrice(strikePrice){\n        this.strikePrice=BigNumberConvert.toShowNumberDecimalUSDT(strikePrice);\n        if(OptionTradingVOList.optionType==\"callPoolContract\"){\n            this.cost=this.strikePrice+this.optionPremium;\n        }else{\n            this.cost=this.strikePrice-this.optionPremium;\n        }\n    }\n\n    @action\n    setOptionPremium(optionPremium){\n        let optionPremiumTemp=BigNumberConvert.toShowNumberDecimalUSDT(optionPremium);\n        if(optionPremiumTemp<=0){\n            optionPremiumTemp=BigNumberConvert.toShowNumberDecimalAsset(optionPremium,'USDT',4);\n        }\n        this.optionPremium=optionPremiumTemp;\n\n        if(OptionTradingVOList.optionType==\"callPoolContract\"){\n            this.cost=this.strikePrice+this.optionPremium;\n        }else{\n            this.cost=this.strikePrice-this.optionPremium;\n        }\n    }\n\n    @action\n    setCurrentPriceTips(currentPriceTips){\n        this.currentPriceTips=currentPriceTips;\n    }\n\n    @action\n    buildChart(){\n        if(OptionTradingVOList.optionType==\"callPoolContract\"){\n            this.setChartFillColor(\"l(0) 0:#ffffff 0.5:#FFDAAA 0.5:#75F9B7 1:#ffffff\");\n            this.chartData=this.buildCallPriceArr();\n        }else{\n            this.setChartFillColor(\"l(0) 0:#ffffff 0.5:#75F9B7 0.5:#FFDAAA 1:#ffffff\");\n            this.chartData=this.buildPutPriceArr();\n        }\n\n        this.setIsLoaded(true);\n    }\n\n    buildCallPriceArr(){\n        let priceArr=[];\n\n        let costStr=BigNumberConvert.toFormatDecimalNumber(this.cost,4).toString();\n        priceArr.unshift({\n            \"price\": costStr,\n            \"Expected Profit\": 0,\n            \"profit\": \"loss\"\n        });\n\n        let currentPriceStr=this.currentPriceShow.toString();\n        let currentPriceRevenue=this.getCallRevenue(this.currentPriceShow ,this.cost);\n        let strikePriceStr=this.strikePrice.toString();\n        let stickPriceRevenueRatio=this.getCallRevenue(this.strikePrice,this.cost);\n\n        if(currentPriceStr<strikePriceStr){\n            priceArr.unshift({\n                \"price\": strikePriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n            currentPriceRevenue=stickPriceRevenueRatio;\n            priceArr.unshift({\n                \"price\": currentPriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n        }else if(currentPriceStr>=strikePriceStr && currentPriceStr<costStr){\n            priceArr.unshift({\n                \"price\": currentPriceStr,\n                \"Expected Profit\": currentPriceRevenue,\n                \"profit\": \"loss\"\n            });\n            priceArr.unshift({\n                \"price\": strikePriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n        }else if(currentPriceStr>=costStr){\n            priceArr.unshift({\n                \"price\": strikePriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n            priceArr.push({\n                \"price\": currentPriceStr,\n                \"Expected Profit\": currentPriceRevenue,\n                \"profit\": \"profit\"\n            });\n        }\n\n        let profitNodeCount=3;\n        let lossNodeCount=3;\n        if(currentPriceStr<=costStr){\n            profitNodeCount=4;\n            lossNodeCount=2;\n        }else{\n            profitNodeCount=3;\n            lossNodeCount=3;\n        }\n\n        let firstItem=priceArr[0];\n        let firstItemPrice=firstItem[\"price\"];\n        firstItemPrice=firstItemPrice*1;\n        for (let i = 1; i < lossNodeCount; i++) {\n            priceArr.unshift({\n                \"price\": BigNumberConvert.toFormatDecimalNumber(firstItemPrice - 100 * i,2).toString(),\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n        }\n\n        let lastItemPrice=priceArr[priceArr.length-1][\"price\"];\n        let preLastItemPrice=priceArr[priceArr.length-2][\"price\"];\n        let difference=lastItemPrice-preLastItemPrice;\n        for (let i = 1; i < profitNodeCount; i++) {\n            let price=lastItemPrice*1 + i*difference;\n            let theRatio=this.getCallRevenue(price ,this.cost);\n            priceArr.push({\n                \"price\": BigNumberConvert.toFormatDecimalNumber(price,2).toString(),\n                \"Expected Profit\": theRatio,\n                \"profit\": \"profit\"\n            });\n        }\n\n        this.setAnnotationCost({\n            start:[costStr, 0],\n            end:[costStr, stickPriceRevenueRatio]\n        });\n\n        this.setAnnotationStrikePrice({\n            start:[strikePriceStr, 0],\n            end:[strikePriceStr, stickPriceRevenueRatio]\n        });\n\n        this.setCurrentPriceTips([this.currentPriceShow.toString(),currentPriceRevenue]);\n\n        return priceArr;\n    }\n\n    getCallRevenue(price,cost){\n        let ratio=(price-cost)/cost;\n        return BigNumberConvert.toFormatDecimalNumber(ratio,4);\n    }\n\n    buildPutPriceArr(){\n        let priceArr=[];\n\n        let costStr=BigNumberConvert.toFormatDecimalNumber(this.cost,2).toString();\n        priceArr.push({\n            \"price\": costStr,\n            \"Expected Profit\": 0,\n            \"profit\": \"loss\"\n        });\n\n        let currentPriceStr=this.currentPriceShow.toString();\n        let currentPriceRevenue=this.getPutRevenue(this.currentPriceShow ,this.cost);\n        let strikePriceStr=this.strikePrice.toString();\n        let stickPriceRevenueRatio=this.getPutRevenue(this.strikePrice,this.cost);\n\n        if(currentPriceStr>strikePriceStr){\n            priceArr.push({\n                \"price\": strikePriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"profit\"\n            });\n            currentPriceRevenue=stickPriceRevenueRatio;\n            priceArr.push({\n                \"price\": currentPriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"profit\"\n            });\n        }else if(currentPriceStr>costStr && currentPriceStr<=strikePriceStr){\n            priceArr.push({\n                \"price\": currentPriceStr,\n                \"Expected Profit\": currentPriceRevenue,\n                \"profit\": \"profit\"\n            });\n            priceArr.push({\n                \"price\": strikePriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"profit\"\n            });\n        }else if(currentPriceStr<=costStr){\n            priceArr.push({\n                \"price\": strikePriceStr,\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n            priceArr.unshift({\n                \"price\": currentPriceStr,\n                \"Expected Profit\": currentPriceRevenue,\n                \"profit\": \"profit\"\n            });\n        }\n\n        let profitNodeCount=3;\n        let lossNodeCount=3;\n        if(currentPriceStr<costStr){\n            profitNodeCount=2;\n            lossNodeCount=4;\n        }else if(currentPriceStr==costStr){\n            profitNodeCount=3;\n            lossNodeCount=4;\n        }else if(currentPriceStr==strikePriceStr){\n            profitNodeCount=4;\n            lossNodeCount=3;\n        }else{\n            profitNodeCount=4;\n            lossNodeCount=2;\n        }\n\n        let lastItemPrice=priceArr[priceArr.length-1][\"price\"];\n        lastItemPrice=lastItemPrice*1;\n        for (let i = 1; i < lossNodeCount; i++) {\n            priceArr.push({\n                \"price\": BigNumberConvert.toFormatDecimalNumber(lastItemPrice + 100 * i,2).toString(),\n                \"Expected Profit\": stickPriceRevenueRatio,\n                \"profit\": \"loss\"\n            });\n        }\n\n        let firstItemPrice=priceArr[0][\"price\"];\n        let secondItemPrice=priceArr[1][\"price\"];\n        let difference=secondItemPrice-firstItemPrice;\n        for (let i = 1; i < profitNodeCount; i++) {\n            let price=firstItemPrice*1 - i*difference;\n            let theRatio=this.getPutRevenue(price ,this.cost);\n            priceArr.unshift({\n                \"price\": BigNumberConvert.toFormatDecimalNumber(price,2).toString(),\n                \"Expected Profit\": theRatio,\n                \"profit\": \"profit\"\n            });\n        }\n\n        this.setAnnotationCost({\n            start:[costStr, 0],\n            end:[costStr, stickPriceRevenueRatio]\n        });\n\n        this.setAnnotationStrikePrice({\n            start:[strikePriceStr, 0],\n            end:[strikePriceStr, stickPriceRevenueRatio]\n        });\n\n        this.setCurrentPriceTips([this.currentPriceShow.toString(),currentPriceRevenue]);\n\n        return priceArr;\n    }\n\n    getPutRevenue(price,cost){\n        let ratio=(cost-price)/cost;\n        return BigNumberConvert.toFormatDecimalNumber(ratio,4);\n    }\n}\n\nexport default new ProfitChartVO();\n","const getWeb3 = () => {\n    return window.web3.eth;\n};\n\nexport default getWeb3;\n","import OptionTradingConfig from '../../etherscan/OptionTradingConfig';\nimport currentAccountStorage from \"../Web3/CurrentAccountStorage\";\nimport log from '../Log';\nimport {action, autorun, observable} from \"mobx\";\nimport web3 from \"../Web3/GetWeb3\";\nimport WebThreeLoadEvent from \"../Web3/WebThreeLoadEvent\";\n\nclass AssetBalance {\n    @observable already = false;\n\n    balance={};\n\n    constructor(){\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                this.refresh();\n            }\n        });\n    }\n\n    @action\n    loadBalance() {\n        log.debug('load balance...');\n\n        let accountBalance=this.balance[currentAccountStorage.account];\n        if(!accountBalance){\n            accountBalance={};\n            this.balance[currentAccountStorage.account]=accountBalance;\n        }\n\n        let finishArr=[];\n        for(let assetConfig of OptionTradingConfig.assets){\n            let asset=assetConfig.name;\n            let handler=this;\n            let getBalanceCallback=(balance)=>{\n                finishArr.push(asset);\n                accountBalance[asset]=balance;\n                log.info(`balance:[account=${currentAccountStorage.account},asset=${asset},balance=${balance}]`);\n\n                if(finishArr.length===OptionTradingConfig.assets.length){\n                    handler.setAlready(true);\n                }\n            };\n\n            if(asset===OptionTradingConfig.nativeAsset.getNativeAsset()){\n                this.getNativeAssetBalance(getBalanceCallback);\n            }else{\n                let contractConfig = OptionTradingConfig.contractConfig[asset][\"hotPotToken\"];\n                let contractAddress = contractConfig.address();\n                let contractAbi = contractConfig.abi;\n\n                let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n                contract.methods\n                    .balanceOf(currentAccountStorage.account)\n                    .call()\n                    .then(getBalanceCallback);\n            }\n        }\n    }\n\n    getNativeAssetBalance(getBalanceCallback){\n        web3().getBalance(currentAccountStorage.account).then(getBalanceCallback);\n    }\n\n    @action\n    refresh(){\n        this.setAlready(false);\n        this.loadBalance();\n    }\n\n    @action\n    setAlready(already){\n        this.already=already;\n    }\n\n    getAssetBalance(asset){\n        return this.balance[currentAccountStorage.account][asset];\n    }\n}\n\nexport default new AssetBalance()\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport log from '../../../../components/Log';\n\nclass ProfitData {\n    @observable coinName='';\n    @observable coinIcon='';\n    @observable assetName='';\n    @observable poolType='';\n    @observable profit = 0;\n    @observable profitTxt = \"0\";\n    @observable claimEnable = false;\n\n    @action\n    setCoinName(value){\n        this.coinName=value;\n\n        let coinIconMap = {\n            BTCB:'coin_icon_btc',\n            ETH:'coin_icon_eth',\n            BNB:'coin_icon_bnb',\n        };\n        this.coinIcon=coinIconMap[value] || '';\n    }\n\n    @action\n    setPoolType(value) {\n        this.poolType=value;\n\n        if(value==\"callPoolContract\"){\n            this.assetName=this.coinName;\n        }else if(value==\"putPoolContract\"){\n            this.assetName=\"USDT\";\n        }\n    }\n\n    @action\n    setProfit(value) {\n        this.profit=value;\n\n        if(value>0){\n            this.claimEnable=true;\n        }else{\n            this.profit=0;\n            this.claimEnable=false;\n        }\n\n        let profitNumber=BigNumberConvert.toShowNumber(this.profit,this.coinName);\n        if(profitNumber < 0.0001){\n            this.profitTxt=BigNumberConvert.toShowValueFormatDecimal(this.profit,this.coinName,8);\n        }else{\n            this.profitTxt=BigNumberConvert.toShowValueFormatDecimalAsset(this.profit,this.coinName);\n        }\n    }\n}\n\nexport default ProfitData;\n","import OptionTradingConfig from '../../etherscan/OptionTradingConfig';\nimport currentAccountStorage from \"../Web3/CurrentAccountStorage\";\nimport log from '../Log';\nimport {action, observable} from \"mobx\";\n\nclass AssetApprove {\n    @observable already = false;\n\n    allowance={};\n\n    @action\n    getAllowance(operationType) {\n        log.debug('load allowance...');\n\n        let _operationType=operationType||\"Buy\";\n        let accountAllowance=this.allowance[currentAccountStorage.account];\n        if(!accountAllowance){\n            accountAllowance={};\n            this.allowance[currentAccountStorage.account]=accountAllowance;\n        }\n\n        let finishArr=[];\n        for(let config of OptionTradingConfig.approve[_operationType]){\n            let contractConfig = OptionTradingConfig.contractConfig[config.assetType][\"hotPotToken\"];\n            let contractAddress = contractConfig.address();\n            let contractAbi = contractConfig.abi;\n\n            let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n            let allowanceAddress=config.address();\n            contract.methods\n                .allowance(currentAccountStorage.account,allowanceAddress)\n                .call()\n                .then((result) => {\n                    finishArr.push(allowanceAddress);\n                    accountAllowance[allowanceAddress]=result;\n                    log.info(`allowance:[assetType=${config.assetType},account=${currentAccountStorage.account},contractName=${config.contractDes},contractAddress=${allowanceAddress},allowance=${result}]`);\n\n                    if(finishArr.length==OptionTradingConfig.approve[_operationType].length){\n                        this.setAlready(true);\n                    }\n                });\n        }\n    }\n\n    @action\n    approve(optionContractAddress,callBack,operationType) {\n        operationType=operationType||'Sell';\n        let assetType=\"\";\n\n        for(let config of OptionTradingConfig.approve[operationType]){\n            if(config.address()===optionContractAddress){\n                assetType=config.assetType;\n            }\n        }\n\n        let contractConfig = OptionTradingConfig.contractConfig[assetType][\"hotPotToken\"];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .approve(optionContractAddress,OptionTradingConfig.getDefaultApproveAllowance())\n            .send({\n                from: currentAccountStorage.account,\n            })\n            .then((result) => {\n                log.debug(\"approve success!\");\n                callBack();\n            });\n    }\n\n    batchRequestApproveAndCallback(optionContractAddress,callBackRequest) {\n        let assetType=\"\";\n\n        for(let config of OptionTradingConfig.approve.Sell){\n            if(config.address()===optionContractAddress){\n                assetType=config.assetType;\n            }\n        }\n\n        let contractConfig = OptionTradingConfig.contractConfig[assetType][\"hotPotToken\"];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        let approveRequest=contract.methods\n            .approve(optionContractAddress,OptionTradingConfig.getDefaultApproveAllowance())\n            .send.request(\n                {from: currentAccountStorage.account},\n                (result) => {\n                    log.debug(\"approve success!\");\n                });\n\n        let batch = new window.web3.BatchRequest();\n        batch.add(approveRequest);\n        batch.add(callBackRequest);\n        batch.execute();\n    }\n\n    @action\n    refresh(operationType){\n        this.setAlready(false);\n        this.getAllowance(operationType);\n    }\n\n    @action\n    setAlready(already){\n        this.already=already;\n    }\n\n    getContractAllowance(contractAddress){\n        return this.allowance[currentAccountStorage.account][contractAddress];\n    }\n}\n\nexport default new AssetApprove()\n","import OptionTradingDTO from './OptionTradingDTO';\nimport OptionTradingVOList from './OptionTradingDTOList';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport OptionTradingVO from './OptionTradingVO';\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport log from '../../../../components/Log';\nimport ProfitVO from './ProfitVO'\nimport MyOptionContractsVO from \"./MyOptionContractsVO\";\nimport MyOptionContractsData from \"./MyOptionContractsData\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport ProfitChartVO from \"./ProfitChartVO\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport ProfitData from \"./ProfitData\";\nimport AssetApprove from \"../../../../components/AssetApprove\";\n\nclass OptionTradingDAO {\n    loadOptionPools() {\n        OptionTradingVO.reset();\n\n        let coinName = OptionTradingVOList.coinName || OptionTradingConfig.defaultCoin;\n        let optionType = OptionTradingVOList.optionType || OptionTradingConfig.defaultOptionType;\n\n        log.debug(`loadOptionPools [coinName=${coinName},optionType=${optionType}] ...`);\n\n        if(!OptionTradingConfig.contractConfig[coinName] || !OptionTradingConfig.contractConfig[coinName][optionType] || !OptionTradingConfig.contractConfig[coinName][optionType].address()){\n            return;\n        }\n\n        let optionPoolContractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let optionPoolContractAddress = optionPoolContractConfig.address();\n\n\n        OptionTradingVOList.optionPoolContractAddress = optionPoolContractAddress;\n        let optionPoolContractAbi = optionPoolContractConfig.abi;\n        let optionPoolContract = new window.web3.eth.Contract(optionPoolContractAbi, optionPoolContractAddress);\n\n        optionPoolContract.methods\n            .listOptions()\n            .call()\n            .then((result) => {\n                let loadCompleteCallback=(optionTradingVoArr)=>{\n                    OptionTradingVOList.setOptionRounds(optionTradingVoArr);\n                    // log.debug(OptionTradingVOList);\n                    OptionTradingVO.refresh();\n\n                    OptionTradingVO.setDefaultOptionAmount();\n                    this.loadOptionCosts(OptionTradingVO);\n                };\n\n                this.loadOptions(result, loadCompleteCallback);\n            });\n    }\n\n    loadOptions(optionAddressArr, loadCompleteCallback) {\n        let optionTradingVoArr = [];\n        for (let address of optionAddressArr) {\n            this.loadOption(address, optionTradingVoArr, optionAddressArr.length, loadCompleteCallback);\n        }\n    }\n\n    loadOption(optionAddress, optionTradingVoArr, loadTaskLength, loadCompleteCallback) {\n        let optionTradingDTO = new OptionTradingDTO();\n\n        let coinName = OptionTradingVOList.coinName || OptionTradingConfig.defaultCoin;\n        optionTradingDTO.coinName = coinName;\n\n        let optionType = OptionTradingVOList.optionType || OptionTradingConfig.defaultOptionType;\n        optionTradingDTO.optionType = optionType;\n\n        optionTradingDTO.optionAddress=optionAddress;\n        optionTradingDTO.poolContractAddress=OptionTradingVOList.optionPoolContractAddress;\n\n        let getInfoCallback=()=>{\n            if(optionTradingDTO.optionRound && optionTradingDTO.optionDuration && optionTradingDTO.strikePrice && optionTradingDTO.expiryDate && optionTradingDTO.optionAmountMax){\n                log.debug(`option load success,[coinName=${coinName},optionType=${optionType}, optionAddress=${optionAddress}, optionPoolContractAddress=${OptionTradingVOList.optionPoolContractAddress}], option data => ${optionTradingDTO}`);\n                optionTradingVoArr.push(optionTradingDTO);\n                if(optionTradingVoArr.length==loadTaskLength){\n                    loadCompleteCallback(optionTradingVoArr);\n                }\n            }else{\n                log.debug(`loading... [optionRound=${optionTradingDTO.optionRound}, optionDuration=${optionTradingDTO.optionDuration}, strikePrice=${optionTradingDTO.strikePrice}, expiryDate=${optionTradingDTO.expiryDate}, optionAmountMax=${optionTradingDTO.optionAmountMax}]`);\n            }\n        };\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName].optionContract;\n        let contractAddress = optionAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .getRound()\n            .call()\n            .then((result) => {\n                optionTradingDTO.optionRound = result;\n                getInfoCallback();\n            });\n\n        contract.methods\n            .getDuration()\n            .call()\n            .then((result) => {\n                optionTradingDTO.optionDuration = result;\n                getInfoCallback();\n            });\n\n        contract.methods\n            .strikePrice()\n            .call()\n            .then((result) => {\n                optionTradingDTO.strikePrice = result;\n                getInfoCallback();\n            });\n\n        contract.methods\n            .expiryDate()\n            .call()\n            .then((result) => {\n                optionTradingDTO.expiryDate = result;\n                getInfoCallback();\n            });\n\n        contract.methods\n            .balanceOf(OptionTradingVOList.optionPoolContractAddress)\n            .call()\n            .then((result) => {\n                optionTradingDTO.optionAmountMax = result;\n                getInfoCallback();\n            });\n    }\n\n    refreshStrikePrice(){\n        log.debug(`refreshStrikePrice...`);\n\n        let contractConfig = OptionTradingConfig.contractConfig[OptionTradingVO.coinName].optionContract;\n        let contractAddress = OptionTradingVO.contractAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .strikePrice()\n            .call()\n            .then((result) => {\n                log.debug(`refreshStrikePrice result => ${result}`);\n                OptionTradingVO.setStrikePrice(result);\n                this.loadOptionCosts(OptionTradingVO);\n            });\n    }\n\n    loadOptionCosts(optionTradingVO) {\n        let coinName = optionTradingVO.coinName;\n        let optionType = optionTradingVO.optionType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .premiumCost(optionTradingVO.optionAmountWei,optionTradingVO.contractAddress)\n            .call()\n            .then((result) => {\n                log.debug(`loadOptionCosts [premiumCost=${result}]`);\n\n                optionTradingVO.setOptionCosts(result);\n                optionTradingVO.refreshExpiryDate();\n            });\n    }\n\n    async approve() {\n        let contractConfig = OptionTradingConfig.contractConfig.USDT.hotPotToken;\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        await contract.methods\n            .approve(OptionTradingVO.poolContractAddress,OptionTradingConfig.getDefaultApproveAllowance())\n            .send({\n                from: currentAccountStorage.account,\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                AssetApprove.getAllowance();\n                this.buy();\n            });\n    }\n\n    async buy() {\n        log.debug(`buy coinName => ${OptionTradingVO.coinName}`);\n        log.debug(`buy quantity(primitive) => ${OptionTradingVO.optionAmountWei}`);\n        log.debug(`buy quantity => ${OptionTradingVO.optionAmount}`);\n\n        let coinName = OptionTradingVO.coinName;\n        let optionType = OptionTradingVO.optionType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = OptionTradingVO.poolContractAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        await contract.methods\n            .buy(OptionTradingVO.optionAmountWei,OptionTradingVO.contractAddress,OptionTradingVO.optionRound )\n            .send({\n                from: currentAccountStorage.account,\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                this.loadOptionPools();\n            });\n    }\n\n    loadProfits() {\n        ProfitVO.reset();\n        ProfitVO.addCallLoadDataLength(OptionTradingConfig.coins.length);\n        ProfitVO.addPutLoadDataLength(OptionTradingConfig.coins.length);\n\n        for (let coinConfig of OptionTradingConfig.coins) {\n            let coinName = coinConfig.name;\n\n            let callProfitData=new ProfitData();\n            callProfitData.setCoinName(coinName);\n\n            let callOptionType = 'callPoolContract';\n            callProfitData.setPoolType(callOptionType);\n\n            this.doLoadProfits(coinName, callOptionType, (profit) => {\n                callProfitData.setProfit(profit);\n                ProfitVO.addCallData(callProfitData);\n            });\n\n\n            let putProfitData=new ProfitData();\n            putProfitData.setCoinName(coinName);\n\n            let putOptionType = 'putPoolContract';\n            putProfitData.setPoolType(putOptionType);\n\n            this.doLoadProfits(coinName,putOptionType, (profit) => {\n                putProfitData.setProfit(profit);\n                ProfitVO.addPutData(putProfitData);\n            });\n        }\n    }\n\n    doLoadProfits(coinName, optionType, callback){\n        log.debug(`loadProfits [coinName=${coinName},optionType=${optionType}] ...`);\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        contract.methods\n            .checkProfits(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`loadProfits result [coinName=${coinName},optionType=${optionType}, profit=${result}] ...`);\n                callback(result);\n            });\n    }\n\n    claimProfits(coinName, optionType) {\n        log.debug(`claimProfits [coinName=${coinName},optionType=${optionType}] ...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        contract.methods\n            .claimProfits()\n            .send({\n                from: currentAccountStorage.account,\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                AssetBalance.refresh();\n                handler.loadProfits();\n            });\n    }\n\n    loadMyOptionsData(){\n        log.debug(`loadMyOptionsData...`);\n        if(MyOptionContractsVO.isLoading){\n            return;\n        }\n\n        MyOptionContractsVO.reset();\n\n        // for (let i = 0; i < 10; i++) {\n        //     let dataItem=new MyOptionContractsData();\n        //     dataItem.setPoolType(\"callPoolContract\");\n        //     dataItem.setDuration(\"300\");\n        //     dataItem.setPosition(\"100000\");\n        //     dataItem.setPremium(\"100000\");\n        //     dataItem.setStrikePrice(\"100000\");\n        //     dataItem.setCurrentPrice(\"100000\");\n        //     dataItem.setRevenue(\"10000000\");\n        //     dataItem.setExpiryDate(\"1609669365\");\n        //\n        //     let time=Date.now() / 1000;\n        //     time=time+1;\n        //     dataItem.setExpiryDate(time);\n        //     MyOptionContractsVO.addData(dataItem);\n        // }\n        // MyOptionContractsVO.setLoading(false);\n\n        let coinsConfig=OptionTradingConfig.coins;\n        // let coinsConfig=[\n        //     {\n        //         name: 'BNB',\n        //         icon: 'icon_bnb',\n        //     },\n        // ];\n\n        for (let coinConfig of coinsConfig) {\n            this.loadMyOptionsDataForAsset(coinConfig.name);\n        }\n    }\n\n    loadMyOptionsDataForAsset(coinName){\n        log.debug(`loadMyOptionsDataForAsset... [coinName=${coinName}]`);\n\n        let callPoolContract=this.buildPoolContract(MyOptionContractsVO.callOptionType, coinName);\n        let putPoolContract=this.buildPoolContract(MyOptionContractsVO.putOptionType, coinName);\n\n        this.loadAssetPrice(callPoolContract,(assetPrice)=>{\n            let callPoolContractAddress=OptionTradingConfig.contractConfig[coinName][MyOptionContractsVO.callOptionType];\n            this.loadListOptionsForMyOptions(MyOptionContractsVO.callOptionType, callPoolContract, callPoolContractAddress.address(), coinName, assetPrice);\n\n\n            let putPoolContractAddress=OptionTradingConfig.contractConfig[coinName][MyOptionContractsVO.putOptionType];\n            this.loadListOptionsForMyOptions(MyOptionContractsVO.putOptionType, putPoolContract, putPoolContractAddress.address(), coinName, assetPrice);\n        });\n    }\n\n    buildPoolContract(optionType, coinName){\n        coinName = coinName || OptionTradingVOList.coinName;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        return new window.web3.eth.Contract(contractAbi, contractAddress);\n    }\n\n    loadAssetPrice(contract,callBack){\n        contract.methods\n            .getAssetPrice()\n            .call()\n            .then((result)=>{\n                callBack(result);\n            });\n    }\n\n    loadListOptionsForMyOptions(optionType,contract, optionPoolContractAddress, coinName, assetPrice){\n        coinName = coinName || OptionTradingVOList.coinName;\n\n        contract.methods\n            .listOptions()\n            .call()\n            .then((result)=>{\n                log.debug(`loadListOptionsForMyOptions success, [asset=${coinName},optionType=${optionType},listOptions=${result}]`);\n\n                MyOptionContractsVO.addLoadDataLength(result.length);\n\n                for (let address of result) {\n                    this.loadOptionInfo(optionType,address, optionPoolContractAddress, contract, coinName, assetPrice);\n                }\n            });\n    }\n\n    loadOptionInfo(optionType, optionAddress, optionPoolContractAddress, optionPoolContract, coinName, assetPrice){\n        coinName = coinName || OptionTradingVOList.coinName;\n\n        let optionData=new MyOptionContractsData();\n        optionData.setCoinName(coinName);\n        optionData.setPoolType(optionType);\n        optionData.setCurrentPrice(BigNumberConvert.toShowNumber(assetPrice,\"USDT\"), true);\n\n        let getInfoCallback=()=>{\n            if(optionData.duration && optionData.position && optionData.premium && optionData.strikePrice && optionData.expiryDate){\n                log.debug(`OptionData load success,[coinName=${coinName},optionType=${optionType}, optionAddress=${optionAddress}, optionPoolContractAddress=${optionPoolContractAddress}], option data => ${optionData}`);\n                MyOptionContractsVO.addData(optionData);\n            }else{\n                log.debug(`loading... [duration=${optionData.duration}, position=${optionData.position}, premium=${optionData.premium}, strikePrice=${optionData.strikePrice}, expiryDate=${optionData.expiryDate}]`);\n            }\n        };\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][\"optionContract\"];\n        let contractAddress = optionAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        contract.methods\n            .balanceOf(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`Option balanceOf(${currentAccountStorage.account}) => [coinName=${coinName},optionType=${optionType}, optionAddress=${optionAddress}, optionPoolContractAddress=${optionPoolContractAddress}, balanceOf=${result}]`);\n\n                if(result>0){\n                    optionData.setPosition(result);\n\n                    contract.methods\n                        .getDuration()\n                        .call()\n                        .then((result) => {\n                            optionData.setDuration(result);\n                            getInfoCallback();\n                        });\n\n                    contract.methods\n                        .getRound()\n                        .call()\n                        .then((round) => {\n                            contract.methods\n                                .getRoundAccountPaidPremiums(round,currentAccountStorage.account)\n                                .call()\n                                .then((premium) => {\n                                    optionData.setPremium(premium);\n                                    getInfoCallback();\n                                });\n                        });\n\n                    contract.methods\n                        .strikePrice()\n                        .call()\n                        .then((result) => {\n                            optionData.setStrikePrice(result);\n                            getInfoCallback();\n                        });\n\n                    contract.methods\n                        .expiryDate()\n                        .call()\n                        .then((result) => {\n                            optionData.setExpiryDate(result);\n                            getInfoCallback();\n                        });\n                }else {\n                    MyOptionContractsVO.addLoadedDataLength(1);\n                }\n            });\n    }\n\n    refreshProfitChart(){\n        let contract=this.buildPoolContract(OptionTradingVOList.optionType);\n        contract.methods\n            .getAssetPrice()\n            .call()\n            .then((result)=>{\n                log.debug(`refreshProfitChart->getAssetPrice => [currentPrice=${result},strikePrice=${OptionTradingVO.strikePrice},optionCosts=${OptionTradingVO.optionCosts}]`);\n\n                // ProfitChartVO.setCurrentPrice(\"37110847595\");\n                ProfitChartVO.setCurrentPrice(result);\n                ProfitChartVO.setStrikePrice(OptionTradingVO.strikePrice);\n                ProfitChartVO.setOptionPremium(OptionTradingVO.optionCosts);\n                if(OptionTradingVO.strikePrice > 0 && OptionTradingVO.optionCosts > 0){\n                    ProfitChartVO.buildChart();\n                }else{\n                    ProfitChartVO.setIsLoaded(false);\n                }\n            });\n    }\n}\n\nexport default new OptionTradingDAO();\n","import {action, observable} from \"mobx\";\n\nclass CountdownTimer {\n    @observable round = 0;\n\n    constructor() {\n        this.timerSetup();\n    }\n\n    @action\n    timerRun(){\n        this.round++;\n    }\n\n    timerSetup(){\n        setInterval(() => this.timerRun(), 1000);\n    }\n}\n\nexport default new CountdownTimer()\n","import React, { Component } from 'react';\nimport log from '../Log';\nimport {action, observable} from \"mobx\";\nimport ApplicationConfig from '../../ApplicationConfig';\n\nclass DataRefreshTimer extends Component {\n    @observable round = 0;\n\n    constructor(props) {\n        super(props);\n        this.timerSetup();\n    }\n\n    @action\n    timerRun(){\n        this.round++;\n        log.debug(`Data refresh... ,round ${this.round}`);\n    }\n\n    timerSetup(){\n        setInterval(() => this.timerRun(), ApplicationConfig.dataRefreshCycle);\n    }\n}\n\nexport default new DataRefreshTimer()\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {Button, Input, NumberPicker, ResponsiveGrid, Select, Radio, ConfigProvider} from '@alifd/next';\nimport ConnectWallet from '../../../../components/ConnectWallet/ConnectWallet';\nimport IfConnectedWallet from '../../../../components/ConnectWallet/IfConnectedWallet';\nimport ConditionDisplay from '../../../../components/ConditionDisplay';\nimport intl from 'react-intl-universal';\nimport { observer } from 'mobx-react';\nimport {autorun} from 'mobx'\nimport OptionTradingDAO from './OptionTradingDAO';\nimport OptionTradingDTOList from './OptionTradingDTOList';\nimport OptionTradingVO from './OptionTradingVO';\nimport WebThreeLoadEvent from '../../../../components/Web3/WebThreeLoadEvent';\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport BigNumber from 'bignumber.js'\nimport log from '../../../../components/Log';\nimport AssetApprove from '../../../../components/AssetApprove';\nimport CountdownTimer from \"../../../../components/Countdown/CountdownTimer\";\nimport DataRefreshTimer from \"../../../../components/DataRefreshTimer\";\nimport {NextComponentLocaleConfig} from \"../../../../components\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\n\nconst { Cell } = ResponsiveGrid;\nconst RadioGroup = Radio.Group;\n\nconst buy = () => {\n    DialogBoxVO.confirm();\n\n    let allowance=new BigNumber(AssetApprove.getContractAllowance(OptionTradingVO.poolContractAddress));\n    let optionCosts=new BigNumber(OptionTradingVO.optionCosts);\n    log.debug(allowance.toFormat());\n    log.debug(optionCosts.toFormat());\n\n    let isNeedApprove=allowance.lt(optionCosts);\n    log.debug(`isNeedApprove => ${isNeedApprove}`);\n    if(isNeedApprove){\n        OptionTradingDAO.approve();\n    }else{\n        OptionTradingDAO.buy();\n    }\n};\n\nconst optionRoundSelect = (value) => {\n    OptionTradingVO.setTradingEnable(false);\n\n    OptionTradingVO.setOptionDurationTxt(value);\n    OptionTradingVO.refresh();\n\n    OptionTradingDAO.loadOptionCosts(OptionTradingVO);\n};\n\nconst optionAmountChange = (value) => {\n    OptionTradingVO.setOptionAmount(value);\n    if(value){\n        OptionTradingDAO.loadOptionCosts(OptionTradingVO);\n    }else{\n        OptionTradingVO.setOptionCosts(0);\n    }\n};\n\nconst optionTypeSwitch=(value)=>{\n    log.debug(`optionType=>${value}`);\n    OptionTradingDTOList.setOptionType(value);\n};\n\n@observer\nclass TradingForm extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(OptionTradingDTOList.coinName && WebThreeLoadEvent.isLoaded){\n                OptionTradingDAO.loadOptionPools();\n            }\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                AssetApprove.getAllowance();\n            }\n        });\n\n        autorun(() => {\n            if(OptionTradingVO.tradingEnable && CountdownTimer.round){\n                OptionTradingVO.refreshExpiryDate();\n            }\n        });\n\n        autorun(() => {\n            if(DataRefreshTimer.round){\n                if(OptionTradingDTOList.coinName && WebThreeLoadEvent.isLoaded && !OptionTradingVO.tradingEnable){\n                    OptionTradingDAO.loadOptionPools();\n                }\n\n                if(OptionTradingDTOList.coinName && WebThreeLoadEvent.isLoaded && OptionTradingVO.tradingEnable){\n                    OptionTradingDAO.refreshStrikePrice();\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <ResponsiveGrid gap={20} className={'option_form'} columns={44}>\n                <Cell className=\"grid-9 section_item\" colSpan={9}>\n                    <span className={'f_title'}>{intl.get('page.home.trading.title.optionType')}</span>\n                    <div className={'f_input_box'}>\n                        <RadioGroup shape=\"button\" size=\"large\" value={OptionTradingDTOList.optionType} onChange={optionTypeSwitch} >\n                            <Radio id=\"J_optionTypeCall\" value=\"callPoolContract\">{intl.get('page.home.trading.optionType.callPoolContract')}</Radio>\n                            <Radio id=\"J_optionTypePut\" value=\"putPoolContract\">{intl.get('page.home.trading.optionType.putPoolContract')}</Radio>\n                        </RadioGroup>\n                    </div>\n                </Cell>\n                <Cell className=\"grid-10 section_item\" colSpan={10}>\n                    <span className={'f_title'}>{intl.get('page.home.trading.title.optionDuration')}</span>\n                    <div className={'f_input_box'}>\n                        <ConfigProvider locale={NextComponentLocaleConfig}>\n                            <Select\n                                id=\"J_optionCycle\"\n                                defaultValue={'-'}\n                                value={OptionTradingVO.getDefaultOptionDuration()}\n                                className={'f_input f_input_longer'}\n                                dataSource={OptionTradingVO.optionRounds}\n                                onChange={optionRoundSelect}\n                            />\n                        </ConfigProvider>\n                    </div>\n                    <div className={'f_tips'}>{intl.get('page.home.trading.tips.expiryDat')}<span className={'bolder'}>{OptionTradingVO.expiryDateTxt}</span></div>\n                </Cell>\n                <Cell className=\"grid-9 section_item\" colSpan={9}>\n                    <span className={'f_title'}>{intl.get('page.home.trading.title.optionAmount')}</span>\n                    <div className={'f_input_box'}>\n                        <NumberPicker\n                            innerAfter={OptionTradingVO.coinName}\n                            className={'f_input f_input_long'}\n                            value={OptionTradingVO.optionAmount}\n                            step={1}\n                            precision={18}\n                            min={0}\n                            max={OptionTradingVO.optionAmountMaxFloat}\n                            onChange={optionAmountChange}\n                            hasTrigger={false}\n                        />\n                    </div>\n                    <div className={'f_tips'}>{intl.get('page.home.trading.tips.optionAmount')}<span className={'bolder'}>{OptionTradingVO.optionAmountMaxTxt}</span></div>\n                </Cell>\n                <Cell className=\"grid-8 section_item\" colSpan={8}>\n                    <span className={'f_title'}>{intl.get('page.home.trading.title.strikePrice')}</span>\n                    <div className={'f_input_box'}>\n                        <Input\n                            disabled\n                            aria-label=\"disabled\"\n                            innerAfter=\"USD\"\n                            className={'f_input'}\n                            value={OptionTradingVO.strikePriceTxt}\n                        />\n                    </div>\n                </Cell>\n                <Cell className=\"grid-8 section_item\" colSpan={8}>\n                    <span className={'f_title'}>{intl.get('page.home.trading.title.optionCosts')}</span>\n                    <div className={'f_input_box'}>\n                        <Input\n                            disabled\n                            aria-label=\"disabled\"\n                            innerAfter=\"USD\"\n                            className={'f_input'}\n                            value={OptionTradingVO.optionCostsTxt}\n                        />\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-44 section_item f_submit_box\" colSpan={44}>\n                    <ConnectWallet />\n                    <IfConnectedWallet>\n                        <div className={'sub_btn_box'}>\n                            <Button type=\"primary\" size=\"large\" onClick={buy} className=\"sub_btn sub_btn_long\" disabled={!OptionTradingVO.tradingEnable || !AssetApprove.already}>\n                                {intl.get('page.home.trading.buy')}\n                            </Button>\n                            <ConditionDisplay display={OptionTradingVO.tradingEnable}>\n                                <div className={'buy_tips'}>\n                                    {intl.get('page.home.trading.tips.buy1')}\n                                    <span className={'bolder'}>{OptionTradingVO.optionCostsTxt} USDT</span>\n                                    {intl.get('page.home.trading.tips.buy2')}\n                                </div>\n                            </ConditionDisplay>\n                        </div>\n                    </IfConnectedWallet>\n                </Cell>\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default TradingForm;\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {Button, ConfigProvider, ResponsiveGrid, Table} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport IfConnectedWallet from '../../../../components/ConnectWallet/IfConnectedWallet';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx'\nimport OptionTradingDAO from './OptionTradingDAO';\nimport ProfitVO from './ProfitVO';\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport DataRefreshTimer from \"../../../../components/DataRefreshTimer\";\nimport {NextComponentLocaleConfig} from \"../../../../components\";\n\nconst { Cell } = ResponsiveGrid;\n\nconst assetRender = (value, index, record) => {\n    return (\n        <div className={'asset_box'}>\n            <div className={`coin_icon ${record.coinIcon}`}></div>\n            <div className={'asset_name'}>{record.coinName}</div>\n        </div>\n    );\n};\n\nconst profitRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.profitTxt}</span>\n            <span className={'unit'}>{record.assetName}</span>\n        </div>\n    );\n};\n\nconst claimRender = (value, index, record) => {\n    return (\n        <Button type=\"primary\" size=\"large\" onClick={claimProfit.bind(this, record.coinName, record.poolType)} className=\"sub_btn sub_btn_short\" disabled={!value}>\n            {intl.get('page.home.trading.profit')}\n        </Button>\n    );\n};\n\nconst claimProfit = (coinName, optionType)=>{\n    OptionTradingDAO.claimProfits(coinName, optionType);\n};\n\n@observer\nclass Profit extends Component {\n    componentDidMount() {\n        autorun(()=>{\n            if(DataRefreshTimer.round){\n                if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                    OptionTradingDAO.loadProfits();\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <IfConnectedWallet>\n                <ResponsiveGrid gap={20} className={'option_profit'}>\n                    <Cell className=\"grid-12 section_item section_title\" colSpan={12}>\n                        {intl.get('page.home.trading.title.profit')}\n                    </Cell>\n\n                    <Cell className=\"grid-12 section_item section_profit_box\" colSpan={12}>\n                        <ResponsiveGrid gap={80} className={'profit_table_box'} columns={2}>\n                            <Cell className=\"grid-1 profit_box \" colSpan={1}>\n                                <div className={'profit_box_title'}>{intl.get('page.home.trading.profit.title.call')}</div>\n                                <ConfigProvider locale={NextComponentLocaleConfig}>\n                                    <Table dataSource={ProfitVO.callDataArr}>\n                                        <Table.Column title={intl.get('page.home.trading.profit.table.title.asset')} className={'asset'} cell={assetRender}/>\n                                        <Table.Column title={intl.get('page.home.trading.profit.table.title.profit')} className={'profit_cell'} cell={profitRender}/>\n                                        <Table.Column dataIndex=\"claimEnable\" className={'claim_cell'} cell={claimRender}/>\n                                    </Table>\n                                </ConfigProvider>\n                            </Cell>\n                            <Cell className=\"grid-1 profit_box \" colSpan={1}>\n                                <div className={'profit_box_title'}>{intl.get('page.home.trading.profit.title.put')}</div>\n                                <ConfigProvider locale={NextComponentLocaleConfig}>\n                                    <Table dataSource={ProfitVO.putDataArr}>\n                                        <Table.Column title={intl.get('page.home.trading.profit.table.title.asset')} className={'asset'} cell={assetRender}/>\n                                        <Table.Column title={intl.get('page.home.trading.profit.table.title.profit')} className={'profit_cell'} cell={profitRender}/>\n                                        <Table.Column dataIndex=\"claimEnable\" className={'claim_cell'} cell={claimRender}/>\n                                    </Table>\n                                </ConfigProvider>\n                            </Cell>\n                        </ResponsiveGrid>\n                    </Cell>\n                </ResponsiveGrid>\n            </IfConnectedWallet>\n        );\n    }\n}\n\nexport default Profit;\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {ConfigProvider,ResponsiveGrid, Table } from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx'\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport MyOptionContractsVO from \"./MyOptionContractsVO\";\nimport IfConnectedWallet from \"../../../../components/ConnectWallet/IfConnectedWallet\";\nimport OptionTradingDAO from \"./OptionTradingDAO\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport CountdownTimer from \"../../../../components/Countdown/CountdownTimer\";\nimport DataRefreshTimer from \"../../../../components/DataRefreshTimer\";\nimport {NextComponentLocaleConfig} from \"../../../../components\";\n\nconst { Cell } = ResponsiveGrid;\n\nconst setOptionDataCellProps = (rowIndex, colIndex, dataIndex, record) => {\n    if (colIndex == 7) {\n        return {\n            className: record[\"revenueStyle\"]\n        };\n    }else if(colIndex == 9) {\n        return {\n            className: record[\"countdownStyle\"]\n        };\n    }\n};\n\n@observer\nclass MyOptionContracts extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account && DataRefreshTimer.round){\n                OptionTradingDAO.loadMyOptionsData();\n            }\n        });\n\n        autorun(() => {\n            if(CountdownTimer.round){\n                if(!MyOptionContractsVO.isLoading){\n                    MyOptionContractsVO.refreshExpiryDate();\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <IfConnectedWallet>\n                <ResponsiveGrid gap={20} className={'analytics_item my_option'}>\n                    <Cell className=\"grid-12 section_item section_title module_title\" colSpan={12}>\n                        {intl.get('page.home.options.title')}\n                    </Cell>\n\n                    <Cell className=\"grid-12 section_item section_my_option_box\" colSpan={12}>\n                        <ConfigProvider locale={NextComponentLocaleConfig}>\n                            <Table dataSource={MyOptionContractsVO.dataArr} cellProps={setOptionDataCellProps}>\n                                <Table.Column title={intl.get('page.home.options.table.title.asset')} dataIndex=\"coinName\" className={'asset'}/>\n                                <Table.Column title={intl.get('page.home.options.table.title.type')} dataIndex=\"poolType\" className={'type'}/>\n                                <Table.Column title={intl.get('page.home.options.table.title.duration')} dataIndex=\"durationShow\" className={'duration'}/>\n                                <Table.Column title={intl.get('page.home.options.table.title.position')} dataIndex=\"positionShow\" className={'position'}/>\n                                <Table.Column title={intl.get('page.home.options.table.title.strikePrice')} dataIndex=\"strikePriceShow\" />\n                                <Table.Column title={intl.get('page.home.options.table.title.premium')} dataIndex=\"premiumShow\" className={'premium'}/>\n                                <Table.Column title={intl.get('page.home.options.table.title.currentPrice')} dataIndex=\"currentPriceShow\"/>\n                                <Table.Column title={intl.get('page.home.options.table.title.revenue')} dataIndex=\"revenueShow\"/>\n                                <Table.Column title={intl.get('page.home.options.table.title.expiryDate')} dataIndex=\"expiryDateShow\" className={'expiryDate'}/>\n                                <Table.Column title={intl.get('page.home.options.table.title.countdown')} dataIndex=\"countdown\"/>\n                            </Table>\n                        </ConfigProvider>\n                    </Cell>\n                </ResponsiveGrid>\n            </IfConnectedWallet>\n        );\n    }\n}\n\nexport default MyOptionContracts;\n","import React, {Component} from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport { Chart, Area,Legend,Axis,Annotation,Line,Tooltip  } from 'bizcharts';\nimport ProfitChartVO from \"./ProfitChartVO\";\nimport {observer} from \"mobx-react\";\nimport {autorun} from \"mobx\";\nimport OptionTradingVO from \"./OptionTradingVO\";\nimport OptionTradingDAO from \"./OptionTradingDAO\";\nimport ConditionDisplay from \"../../../../components/ConditionDisplay\";\n\nconst { Cell } = ResponsiveGrid;\n\n@observer\nclass ProfitChart extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(OptionTradingVO.strikePrice && OptionTradingVO.optionCosts){\n                OptionTradingDAO.refreshProfitChart();\n            }\n        });\n    }\n\n    render() {\n        const labelX={\n            formatter:(text, item, index)=> {\n                return \"$\".concat(text);\n            }\n        };\n        const gridY = {\n            line: {\n                type: 'line',\n                style: {\n                    stroke: \"#E5E5E5\",\n                    lineWidth: 1,\n                    lineDash: [4, 5]\n                }\n            }\n        };\n        const labelY={\n            formatter:(text, item, index)=> {\n                return text < 0 ? \"\" : text.concat(\"%\");\n            }\n        };\n\n        return (\n            <ConditionDisplay display={ProfitChartVO.isLoaded}>\n                <ResponsiveGrid gap={20} className={'option_profit_chart'}>\n                    <Cell className=\"grid-12 section_item\" colSpan={12}>\n                        <Chart autoFit height={300} data={ProfitChartVO.chartData}>\n                            <Legend visible={false} />\n                            <Axis\n                                name=\"Expected Profit\"\n                                title\n                                label={labelY}\n                                line={{\n                                    style:{\n                                        stroke: \"#E5E5E5\",\n                                        lineWidth: 1\n                                    }\n                                }}\n                                grid={gridY}\n                            />\n                            <Axis\n                                name=\"price\"\n                                label={labelX}\n                                line={{\n                                    style:{\n                                        stroke: \"#E5E5E5\",\n                                        lineWidth: 1\n                                    }\n                                }}\n                            />\n                            <Area\n                                position=\"price*Expected Profit\"\n                                style={{\n                                    lineWidth:0,\n                                    fill:`${ProfitChartVO.chartFillColor}`,\n                                    fillOpacity:1\n                                }}\n                            />\n                            <Tooltip>\n                                {(title,items) => {\n                                    let dataItem=items[0];\n                                    let price=dataItem.title;\n                                    let tipProfit=dataItem.value <=0 ? \"0\" : `${dataItem.value}%`;\n                                    return <div className={'toolTips'}>\n                                        <div>Price: ${price}</div>\n                                        <div>Expected Profit: {tipProfit}</div>\n                                    </div>;\n                                }}\n                            </Tooltip>\n                            <Annotation.Line\n                                start={ProfitChartVO.annotationStrikePrice.start}\n                                end={ProfitChartVO.annotationStrikePrice.end}\n                                style={{\n                                    lineWidth:2,\n                                    stroke:\"#F09316\"\n                                }}\n                                text={{\n                                    autoRotate:false,\n                                    content:'Strike Price',\n                                    offsetX:-30,\n                                    offsetY:-2,\n                                    style:{\n                                        fill: \"#555B75\",\n                                        fontWeight: 500,\n                                        fontSize: 14\n                                    }\n                                }}\n                            />\n                            <Annotation.Line\n                                start={ProfitChartVO.annotationCost.start}\n                                end={ProfitChartVO.annotationCost.end}\n                                style={{\n                                    lineWidth:2,\n                                    stroke:\"#50DDBB\"\n                                }}\n                                text={{\n                                    autoRotate:false,\n                                    content:'Cost',\n                                    offsetX:-10,\n                                    offsetY:-2,\n                                    style:{\n                                        fill: \"#555B75\",\n                                        fontWeight: 500,\n                                        fontSize: 14\n                                    }\n                                }}\n                            />\n\n                            <Annotation.DataMarker\n                                position={ProfitChartVO.currentPriceTips}\n                                point={{\n                                    style: {\n                                        fill: \"#ffffff\",\n                                        stroke: \"#4E5F7F\"\n                                    }\n                                }}\n                                text={{\n                                    content: `Current Price:\\n$${ProfitChartVO.currentPriceShow}`,\n                                    style: {\n                                        fill: \"#555B75\",\n                                        textAlign: \"left\",\n                                        fontSize: 16,\n                                        fontWeight: 500\n                                    }\n                                }}\n                            />\n                        </Chart>\n                    </Cell>\n                </ResponsiveGrid>\n            </ConditionDisplay>\n        );\n    }\n};\n\nexport default ProfitChart;\n","import './index.scss';\n\nimport React from 'react';\nimport {ResponsiveGrid, Tab} from '@alifd/next';\nimport TradingForm from \"./TradingForm\";\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport OptionTradingVOList from './OptionTradingDTOList';\nimport Profit from \"./Profit\";\nimport MyOptionContracts from \"./MyOptionContracts\";\nimport DialogBox from \"../../../../components/DialogBox\";\nimport ProfitChart from \"./ProfitChart\";\n\nconst {Cell} = ResponsiveGrid;\n\nconst onChange = (key) => {\n    OptionTradingVOList.setCoinName(key);\n};\n\nconst Trading = () => {\n    return (\n        <section id=\"J_trading\" className=\"section trading_container\">\n            <DialogBox/>\n            <div className=\"section_container\">\n                <a name=\"BUY\"></a>\n                <ResponsiveGrid gap={10}>\n                    <Cell className=\"grid-12 section_item\" colSpan={12}>\n                        <div className={'coin_switch'}>\n                            <Tab onChange={onChange} defaultActiveKey={OptionTradingConfig.defaultCoin}>\n                                {OptionTradingConfig.coins.map(coin => (\n                                    <Tab.Item title={coin.name} key={coin.name} className={coin.icon}/>\n                                ))}\n                            </Tab>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n\n                <TradingForm/>\n                {/*<ProfitChart/>*/}\n                <Profit/>\n                <MyOptionContracts/>\n            </div>\n        </section>\n    );\n};\n\nexport default Trading;\n","/* eslint react/no-string-refs:0 */\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Banner from './components/Banner';\nimport UseCases from \"./components/UseCases\";\nimport QA from \"./components/QA\";\nimport Trading from \"./components/Trading\";\nimport HeaderVO from \"../../layouts/DefaultLayout/components/Header/HeaderVO\";\n\n@withRouter\nclass Home extends Component {\n    componentDidMount(){\n        HeaderVO.setCurrentNavKey('buy');\n    }\n\n    render() {\n        return (\n            <div className=\"sections\">\n                <Banner/>\n                <UseCases/>\n                <Trading/>\n                <QA/>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","/* eslint-disable new-cap */\nimport React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\n\nimport './index.scss';\n\nimport {ConnectWallet} from '@components';\n\nconst {Cell} = ResponsiveGrid;\n\nconst SellBanner = () => {\n    return (\n        <section id=\"J_banner\" className=\"section s_b_container\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={10}>\n                    <Cell className=\"grid-6 section_item l\" colSpan={6}>\n                        <div className={'title sell'}>{intl.get('page.sell.banner.title')}</div>\n                        <div className={'content'}>\n                            {intl.getHTML('page.sell.banner.content')}\n                        </div>\n                        <div className={'btn'}>\n                            <ConnectWallet/>\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-6 section_item r\" colSpan={6}>\n                        <div className={'content sell'}>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n        </section>\n    );\n};\n\nexport default SellBanner;\n","import {action, observable} from 'mobx';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport BigNumberConvert from '../../../../components/BigNumberConvert'\n\nclass PoolerVO {\n    @observable coinName = OptionTradingConfig.defaultCoin;\n    @observable optionType = OptionTradingConfig.defaultOptionType;\n    @observable depositCoinName = \"ETH\";\n    @observable quantity = 0;\n    @observable quantityWei = 0;\n    @observable balanceOf = 0;\n    @observable balanceOfFloat = 0;\n    @observable balanceOfTxt = \"\";\n    @observable apy = 0;\n    @observable apr = 0;\n\n    @observable depositEnable = false;\n    @observable getBalanceSuccess = false;\n\n    constructor(){\n        this.setOptionType(OptionTradingConfig.defaultOptionType);\n    }\n\n    @action\n    reset(){\n        this.quantity = 0;\n        this.quantityWei = 0;\n        this.balanceOf = 0;\n        this.balanceOfFloat = 0;\n        this.balanceOfTxt = \"\";\n        this.apy = 0;\n        this.apr = 0;\n        this.depositEnable = false;\n        this.getBalanceSuccess = false;\n    }\n\n    @action\n    setCoinName(coinName) {\n        this.coinName = coinName;\n        this.setOptionType(this.optionType);\n    }\n\n    @action\n    setOptionType(optionType){\n        this.optionType=optionType ;\n\n        if(this.isCallOptionType()){\n            this.depositCoinName=this.coinName;\n        }else{\n            this.depositCoinName=\"USDT\";\n        }\n    }\n\n    @action\n    setDepositEnable(balanceOf){\n        this.depositEnable=balanceOf ;\n    }\n\n    @action\n    setBalanceSuccess(getBalanceSuccess){\n        this.getBalanceSuccess=getBalanceSuccess ;\n    }\n\n    @action\n    setQuantity(quantity){\n        this.quantity=quantity;\n        this.quantityWei=BigNumberConvert.toPrimitiveValue(quantity,this.depositCoinName);\n    }\n\n    @action\n    setDefaultQuantity(){\n        let defaultQuantity=1;\n        if(this.balanceOfFloat<1){\n            defaultQuantity=this.balanceOfFloat;\n        }\n        this.setQuantity(defaultQuantity);\n    }\n\n    @action\n    setBalanceOf(balanceOf){\n        this.getBalanceSuccess=true;\n        this.balanceOf=balanceOf;\n        this.balanceOfTxt=BigNumberConvert.toShowValueFormatDecimalSmall(balanceOf,this.depositCoinName, 4);\n        this.balanceOfFloat=BigNumberConvert.toShowNumberDecimalAssetSmall(balanceOf,this.depositCoinName, 4);\n\n        this.setDefaultQuantity();\n\n        if(this.balanceOf>0){\n            this.depositEnable=true;\n        }else{\n            this.depositEnable=false;\n        }\n    }\n\n    @action\n    setAPY(apy){\n        this.apy=BigNumberConvert.toFormatDecimalNumber(apy, 2);\n    }\n\n    @action\n    setAPR(apr){\n        this.apr=BigNumberConvert.toFormatDecimalNumber(apr, 2);\n    }\n\n    isCallOptionType(){\n        return this.optionType==\"callPoolContract\";\n    }\n}\n\nexport default new PoolerVO();\n","import {action, observable} from 'mobx';\nimport log from \"../../../../components/Log\";\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass ProfitVO {\n    @observable callDataArr = [];\n    @observable callDataArrTemp = [];\n    @observable callLoadDataLength = 0;\n    @observable callLoadedDataLength = 0;\n\n    isCallLoading = false;\n\n    @observable putDataArr = [];\n    @observable putDataArrTemp = [];\n    @observable putLoadDataLength = 0;\n    @observable putLoadedDataLength = 0;\n\n    isPutLoading = false;\n\n    constructor(){\n    }\n\n    @action\n    reset(){\n        this.callDataArrTemp = [];\n        this.callLoadDataLength = 0;\n        this.callLoadedDataLength = 0;\n\n        this.isCallLoading = true;\n\n        this.putDataArrTemp = [];\n        this.putLoadDataLength = 0;\n        this.putLoadedDataLength = 0;\n\n        this.isPutLoading=true;\n    }\n\n    @action\n    addCallData(data){\n        this.callDataArrTemp.push(data);\n        this.addCallLoadedDataLength(1);\n    }\n\n    @action\n    addCallLoadDataLength(length){\n        this.callLoadDataLength += length;\n    }\n\n    @action\n    addCallLoadedDataLength(length){\n        this.callLoadedDataLength += length;\n\n        if(this.callLoadedDataLength == this.callLoadDataLength){\n            this.setCallLoading(false);\n\n            this.callDataArr=this.callDataArrTemp.sort((option1,option2)=>{\n                let flag1=`${option1.coinName}`;\n                let flag2=`${option2.coinName}`;\n                return flag2 > flag1 ? -1 : 1;\n            });\n        }\n    }\n\n    @action\n    setCallLoading(isLoading){\n        this.isCallLoading=isLoading;\n    }\n\n    @action\n    addPutData(data){\n        this.putDataArrTemp.push(data);\n        this.addPutLoadedDataLength(1);\n    }\n\n    @action\n    addPutLoadDataLength(length){\n        this.putLoadDataLength += length;\n    }\n\n    @action\n    addPutLoadedDataLength(length){\n        this.putLoadedDataLength += length;\n\n        if(this.putLoadedDataLength == this.putLoadDataLength){\n            this.setPutLoading(false);\n\n            this.putDataArr=this.putDataArrTemp.sort((option1,option2)=>{\n                let flag1=`${option1.coinName}`;\n                let flag2=`${option2.coinName}`;\n                return flag2 > flag1 ? -1 : 1;\n            });\n        }\n    }\n\n    @action\n    setPutLoading(isLoading){\n        this.isPutLoading=isLoading;\n    }\n}\n\nexport default new ProfitVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport BigNumber from 'bignumber.js'\nimport log from '../../../../components/Log';\n\nclass ProfitData {\n    incomeAssetCoinName = \"USDT\";\n    \n    @observable coinName='';\n    @observable coinIcon='';\n    @observable assetName='';\n    @observable poolType='';\n\n    @observable assetQuantity = 0;\n    @observable assetQuantityTxt = \"\";\n    @observable assetQuantityWei = 0;\n\n    @observable assetPoolQuantity = 0;\n    @observable assetPoolQuantityTxt = \"\";\n\n    @observable assetAvailableQuantity = 0;\n    @observable assetAvailableQuantityTxt = \"\";\n\n    @observable assetContribution = 0;\n\n    @observable withdrawAbleQuantity = 0;\n    @observable withdrawAbleQuantityShow = 0;\n    @observable withdrawQuantity = 0;\n    @observable withdrawQuantityInt = \"\";\n\n    @observable withdrawEnable = false;\n\n    @observable incomeQuantity = 0;\n    @observable incomeQuantityTxt = 0;\n\n    @observable apr = 0;\n\n    @observable claimEnable = false;\n\n    @action\n    setCoinName(value){\n        this.coinName=value;\n\n        let coinIconMap = {\n            BTCB:'coin_icon_btc',\n            ETH:'coin_icon_eth',\n            BNB:'coin_icon_bnb',\n        };\n        this.coinIcon=coinIconMap[value] || '';\n    }\n\n    @action\n    setPoolType(value) {\n        this.poolType=value;\n\n        if(value==\"callPoolContract\"){\n            this.assetName=this.coinName;\n        }else if(value==\"putPoolContract\"){\n            this.assetName=\"USDT\";\n        }\n    }\n\n    isCallOptionType(){\n        return this.poolType==\"callPoolContract\";\n    }\n\n    @action\n    setWithdrawEnable(withdrawEnable){\n        this.withdrawEnable=withdrawEnable ;\n    }\n\n    @action\n    setAssetQuantity(assetQuantity){\n        this.assetQuantity=assetQuantity;\n\n        let number=BigNumberConvert.toShowNumber(this.assetQuantity,this.assetName);\n        if(number < 0.0001){\n            this.assetQuantityTxt=BigNumberConvert.toShowValueFormatDecimalSmall(this.assetQuantity,this.assetName,8);\n        }else{\n            this.assetQuantityTxt=BigNumberConvert.toShowValueFormatDecimalSmall(this.assetQuantity,this.assetName,4);\n        }\n\n        this.assetQuantityWei=BigNumberConvert.toPrimitiveValue(assetQuantity,this.assetName);\n    }\n\n    @action\n    setAssetPoolQuantity(assetPoolQuantity){\n        this.assetPoolQuantity=assetPoolQuantity;\n\n        let number=BigNumberConvert.toShowNumber(this.assetPoolQuantity,this.assetName);\n        if(number < 0.0001){\n            this.assetPoolQuantityTxt=BigNumberConvert.toShowValueFormatDecimal(this.assetPoolQuantity,this.assetName,8);\n        }else{\n            this.assetPoolQuantityTxt=BigNumberConvert.toShowValueFormatDecimal(this.assetPoolQuantity,this.assetName,4);\n        }\n    }\n\n    @action\n    setAssetAvailableQuantity(assetAvailableQuantity){\n        this.assetAvailableQuantity=assetAvailableQuantity;\n\n        let number=BigNumberConvert.toShowNumber(this.assetAvailableQuantity,this.assetName);\n        if(number < 0.0001){\n            this.assetAvailableQuantityTxt=BigNumberConvert.toShowValueFormatDecimalSmall(this.assetAvailableQuantity,this.assetName,8);\n        }else{\n            this.assetAvailableQuantityTxt=BigNumberConvert.toShowValueFormatDecimalSmall(this.assetAvailableQuantity,this.assetName,4);\n        }\n    }\n\n    @action\n    setWithdrawAbleQuantity(){\n        this.withdrawAbleQuantity=Math.min(this.assetQuantity,this.assetAvailableQuantity);\n        this.withdrawAbleQuantityShow=BigNumberConvert.toShowNumberDecimalAssetSmall(this.withdrawAbleQuantity,this.assetName,5);\n        this.withdrawEnable=this.withdrawAbleQuantity>0;\n        if(this.withdrawEnable){\n            this.setWithdrawQuantity(this.withdrawAbleQuantityShow);\n        }\n    }\n\n    @action\n    setWithdrawQuantity(withdrawQuantity){\n        this.withdrawQuantity=withdrawQuantity;\n        this.withdrawQuantityInt=BigNumberConvert.toPrimitiveValue(this.withdrawQuantity,this.assetName);\n    }\n\n    @action\n    setClaimEnable(claimEnable){\n        this.claimEnable=claimEnable ;\n    }\n\n    @action\n    setIncomeQuantity(incomeQuantity){\n        this.incomeQuantity=incomeQuantity;\n\n        let incomeNumber=BigNumberConvert.toShowNumber(this.incomeQuantity,this.incomeAssetCoinName);\n        if(incomeNumber < 0.0001){\n            this.incomeQuantityTxt=BigNumberConvert.toShowValueFormatDecimalSmall(this.incomeQuantity,this.incomeAssetCoinName,8);\n        }else{\n            this.incomeQuantityTxt=BigNumberConvert.toShowValueFormatDecimalSmall(this.incomeQuantity,this.incomeAssetCoinName,4);\n        }\n\n        this.claimEnable=incomeNumber>0;\n    }\n\n    @action\n    setAPR(apr){\n        this.apr=BigNumberConvert.toFormatDecimalNumber(apr, 2);\n    }\n    \n    getAssetContribution(){\n        if(this.assetPoolQuantity==0){\n            return 0;\n        }else{\n            let c=this.assetQuantity / this.assetPoolQuantity * 100;\n            if(c>100){\n                c=100;\n            }\n            return c.toFixed(2);\n        }\n    }\n\n    getAssetContributionTxt(){\n        return `${this.getAssetContribution()}%`;\n    }\n\n    getAssetContributionStyle(){\n        return  {\n            width:this.getAssetContributionTxt()\n        };\n    }\n\n    getAssetContributionDesWidth(){\n        let contribution=this.getAssetContribution();\n        return 100-contribution;\n    }\n\n    getAssetContributionDesStyle(){\n        return  {\n            width:`${this.getAssetContributionDesWidth()}%`\n        };\n    }\n\n}\n\nexport default ProfitData;\n","import {action, observable} from 'mobx';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport BigNumberConvert from '../../../../components/BigNumberConvert'\nimport PoolerVO from \"./PoolerVO\";\n\nclass ProfitWithdrawVO {\n    @observable coinName = \"ETH\";\n    @observable coinIcon='';\n    @observable assetName='';\n    @observable poolType='';\n\n    @observable assetAvailableQuantity = 0;\n    @observable assetAvailableQuantityTxt = \"\";\n\n    @observable withdrawAbleQuantity = 0;\n    @observable withdrawAbleQuantityShow = 0;\n    @observable withdrawQuantity = 0;\n    @observable withdrawQuantityInt = \"\";\n\n    @observable withdrawEnable = false;\n    @observable showWithdrawDialog = false;\n\n    @action\n    reset(){\n        this.coinName = \"ETH\";\n        this.coinIcon = '';\n        this.assetName = '';\n        this.poolType = '';\n\n        this.assetAvailableQuantity = 0;\n        this.assetAvailableQuantityTxt = \"\";\n\n        this.withdrawAbleQuantity = 0;\n        this.withdrawAbleQuantityShow = 0;\n        this.withdrawQuantity = 0;\n        this.withdrawQuantityInt = \"\";\n\n        this.withdrawEnable = false;\n        this.showWithdrawDialog = false;\n    }\n\n    @action\n    setShowWithdrawDialog(showWithdrawDialog){\n        this.showWithdrawDialog=showWithdrawDialog;\n    }\n\n    @action\n    setByProfitData(profitData) {\n        this.coinName=profitData.coinName;\n        this.coinIcon=profitData.coinIcon;\n        this.assetName=profitData.assetName;\n        this.poolType=profitData.poolType;\n\n        this.assetAvailableQuantity=profitData.assetAvailableQuantity;\n        this.assetAvailableQuantityTxt=profitData.assetAvailableQuantityTxt;\n\n        this.withdrawAbleQuantity=profitData.withdrawAbleQuantity;\n        this.withdrawAbleQuantityShow=profitData.withdrawAbleQuantityShow;\n        this.withdrawQuantity=profitData.withdrawQuantity;\n        this.withdrawQuantityInt=profitData.withdrawQuantityInt;\n\n        this.withdrawEnable = profitData.withdrawEnable;\n    }\n\n    @action\n    setWithdrawQuantity(withdrawQuantity){\n        this.withdrawQuantity=withdrawQuantity;\n        this.withdrawQuantityInt=BigNumberConvert.toPrimitiveValue(this.withdrawQuantity,this.coinName);\n    }\n}\n\nexport default new ProfitWithdrawVO();\n","import OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport PoolerVO from './PoolerVO';\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport AssetApprove from \"../../../../components/AssetApprove\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport log from \"../../../../components/Log\";\nimport BigNumber from 'bignumber.js'\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\nimport ProfitVO from \"./ProfitVO\";\nimport ProfitData from \"./ProfitData\";\nimport ProfitWithdrawVO from \"./ProfitWithdrawVO\";\nimport ApplicationConfig from \"../../../../ApplicationConfig\";\n\nclass PoolerDAO {\n    loadBalance(){\n        log.debug(`loadBalance... [PoolerVO.coinName=${PoolerVO.coinName},PoolerVO.optionType=${PoolerVO.optionType},PoolerVO.depositCoinName=${PoolerVO.depositCoinName}]`);\n\n        PoolerVO.reset();\n        let balance=AssetBalance.getAssetBalance(PoolerVO.depositCoinName);\n        PoolerVO.setBalanceOf(balance);\n    }\n\n    async checkAllowanceBeforeDeposit(){\n        DialogBoxVO.confirm();\n\n        if(PoolerVO.coinName==OptionTradingConfig.nativeAsset.getNativeAsset() && PoolerVO.isCallOptionType()){\n            log.debug(`${OptionTradingConfig.nativeAsset.getNativeAsset()} Call...`);\n            await this.deposit(this);\n        }else{\n            let putContractConfig=OptionTradingConfig.contractConfig[PoolerVO.coinName][PoolerVO.optionType];\n            let allowance=AssetApprove.getContractAllowance(putContractConfig.address());\n            let allowanceNb=new BigNumber(allowance);\n            let defaultApproveThresholdNb=new BigNumber(OptionTradingConfig.getDefaultApproveThreshold());\n            log.debug(`allowanceNb => ${allowanceNb.toFormat()}`);\n            log.debug(`defaultApproveThresholdNb => ${defaultApproveThresholdNb.toFormat()}`);\n\n            let isNeedApprove=allowanceNb.lt(defaultApproveThresholdNb);\n            log.debug(`isNeedApprove => ${isNeedApprove}`);\n            if(isNeedApprove){\n                await AssetApprove.approve(putContractConfig.address(), ()=>{\n                    this.deposit(this);\n                });\n                // await AssetApprove.batchRequestApproveAndCallback(putContractConfig.address(), this.buildDepositRequest());\n            }else{\n                await this.deposit(this);\n            }\n        }\n    }\n\n    loadRoundAccPremiumShare(handler, profitData, callback){\n        let coinName = profitData.coinName;\n        let optionType = profitData.poolType;\n\n        let optionPoolContractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let optionPoolContractAddress = optionPoolContractConfig.address();\n        let optionPoolContractAbi = optionPoolContractConfig.abi;\n        let optionPoolContract = new window.web3.eth.Contract(optionPoolContractAbi, optionPoolContractAddress);\n\n        handler.loadAssetPrice(optionPoolContract, profitData, (price) => {\n            optionPoolContract.methods\n                .listOptions()\n                .call()\n                .then((optionArr) => {\n                    let loadedCount=0;\n                    let roundAccPremiumShare=0;\n                    for (let address of optionArr) {\n                        handler.loadOptionRoundAccPremiumShare(address, optionPoolContractAddress, price, handler, profitData, (optionRoundAccPremiumShare) => {\n                            loadedCount++;\n                            roundAccPremiumShare+=optionRoundAccPremiumShare;\n                            if(loadedCount>=optionArr.length){\n                                log.debug(`roundAccPremiumShareTotal => ${roundAccPremiumShare}`);\n                                profitData.setAPR(roundAccPremiumShare);\n                                callback(profitData);\n                            }\n                        });\n                    }\n                });\n        });\n    }\n\n    loadAssetPrice(optionPoolContract, profitData, callback){\n        if(profitData.isCallOptionType()){\n            optionPoolContract.methods\n                .getAssetPrice()\n                .call()\n                .then((result)=>{\n                    let price=BigNumberConvert.toShowNumberDecimalUSDT(result);\n                    log.debug(`loadAssetPrice result => ${result}, price => ${price}`);\n                    callback(price);\n                });\n        }else{\n            callback(1);\n        }\n    }\n\n    // (( getRoundAccPremiumShare(r-1) - getRoundAccPremiumShare(r-2) ) / 1e18 /asset_price * (24*60/5分钟)*365天*100%\n    loadOptionRoundAccPremiumShare(optionAddress,optionPoolContractAddress, price, handler, profitData, callback){\n        let coinName = profitData.coinName;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName].optionContract;\n        let contractAddress = optionAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .getRound()\n            .call()\n            .then((currentRound) => {\n                log.debug(`loadOptionRoundAccPremiumShare -> getRound: result => ${currentRound}`);\n                if(currentRound>2){\n                    handler.loadOptionDuration(contract, (duration) => {\n                        handler.doLoadOptionRoundAccPremiumShare(contract,currentRound-1, (lastRoundAccPremiumShare) => {\n                            handler.doLoadOptionRoundAccPremiumShare(contract,currentRound-2, (lastLastRoundAccPremiumShare) => {\n                                let roundCount=24 * 60 / duration;\n                                let optionRoundAccPremiumShare=((lastRoundAccPremiumShare-lastLastRoundAccPremiumShare) / price * roundCount) * 365 * 100;\n                                log.debug(`roundAccPremiumShare => [coinName=${profitData.coinName},poolType=${profitData.poolType},duration=${duration},lastRoundAccPremiumShare=${lastRoundAccPremiumShare}, lastLastRoundAccPremiumShare=${lastLastRoundAccPremiumShare}, price=${price}, roundCount=${roundCount}]`);\n                                log.debug(`optionRoundAccPremiumShare => ${optionRoundAccPremiumShare}`);\n                                callback(optionRoundAccPremiumShare);\n                            });\n                        });\n                    });\n                }else{\n                    callback(0);\n                }\n            });\n    }\n\n    doLoadOptionRoundAccPremiumShare(contract, round, callback){\n        contract.methods\n            .getRoundAccPremiumShare(round)\n            .call()\n            .then((result) => {\n                let scale='0.000000000000000001';\n                let value=BigNumberConvert.timesToNumber(result,scale, 6);\n                log.debug(`doLoadOptionRoundAccPremiumShare -> getRoundAccPremiumShare: result => ${result} value => ${value}`);\n                callback(value);\n            });\n    }\n\n    loadOptionDuration(contract, callback){\n        contract.methods\n            .getDuration()\n            .call()\n            .then((result) => {\n                let duration=result / 60;\n                log.debug(`loadOptionDuration result => ${result}, duration => ${duration}`);\n                callback(duration);\n            });\n    }\n\n    buildDepositRequest(){\n        let coinName = PoolerVO.coinName;\n        let optionType = PoolerVO.optionType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let depositMethod = contractConfig.depositMethod;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        log.debug(`Deposit quantity(primitive) => ${PoolerVO.quantity}`);\n        log.debug(`Deposit quantity => ${PoolerVO.quantityWei}`);\n\n        let handler=this;\n        let depositCallBack=()=>{\n            DialogBoxVO.success();\n\n            log.debug(\"deposit success!\");\n            AssetBalance.refresh();\n            AssetApprove.refresh(\"Sell\");\n            handler.loadInvestment();\n        };\n\n        let send=contract.methods[depositMethod]\n            .call(contract.methods,PoolerVO.quantityWei)\n            .send;\n        return send.request({\n            from: currentAccountStorage.account\n        }, depositCallBack);\n    }\n\n    async deposit(handler){\n        let coinName = PoolerVO.coinName;\n        let optionType = PoolerVO.optionType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let depositMethod = contractConfig.depositMethod;\n\n        let contract = await new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        log.debug(`Deposit quantity(primitive) => ${PoolerVO.quantity}`);\n        log.debug(`Deposit quantity => ${PoolerVO.quantityWei}`);\n\n        let depositCallBack=()=>{\n            DialogBoxVO.success();\n\n            log.debug(\"deposit success!\");\n            AssetBalance.refresh();\n            AssetApprove.refresh(\"Sell\");\n            handler.loadMyProfit();\n        };\n\n        let additionalChargeWei=BigNumberConvert.toPrimitiveValue(ApplicationConfig.poolerAdditionalChargeFee,OptionTradingConfig.nativeAsset.getNativeAsset());\n\n        if(PoolerVO.depositCoinName===OptionTradingConfig.nativeAsset.getNativeAsset()){\n            let depositValue=BigNumberConvert.plusAndToString(PoolerVO.quantityWei, additionalChargeWei);\n            await contract.methods\n                .deposit()\n                .send({\n                    from: currentAccountStorage.account,\n                    value: depositValue\n                })\n                .on('error', function(error){\n                    DialogBoxVO.failed();\n                    DialogBoxVO.setContent(error.message);\n                })\n                .then(depositCallBack);\n        }else{\n            await contract.methods[depositMethod]\n                .call(contract.methods,PoolerVO.quantityWei)\n                .send({\n                    from: currentAccountStorage.account,\n                    value: additionalChargeWei\n                })\n                .on('error', function(error){\n                    DialogBoxVO.failed();\n                    DialogBoxVO.setContent(error.message);\n                })\n                .then(depositCallBack);\n        }\n    }\n\n    loadMyProfit(){\n        log.debug(`loadMyProfit...`);\n        if(ProfitVO.isCallLoading || ProfitVO.isPutLoading){\n            return;\n        }\n\n        let coinsConfig=OptionTradingConfig.coins;\n        // let coinsConfig=[\n        //     {\n        //         name: 'BNB',\n        //         icon: 'icon_bnb',\n        //     },\n        // ];\n\n        ProfitVO.reset();\n        ProfitVO.addCallLoadDataLength(coinsConfig.length);\n        ProfitVO.addPutLoadDataLength(coinsConfig.length);\n\n        let handler=this;\n\n        for (let coinConfig of coinsConfig) {\n            let coinName = coinConfig.name;\n\n            let callProfitData=new ProfitData();\n            callProfitData.setCoinName(coinName);\n\n            let callOptionType = 'callPoolContract';\n            callProfitData.setPoolType(callOptionType);\n\n            handler.loadInvestment(callProfitData, (callProfitData) => {\n                ProfitVO.addCallData(callProfitData);\n            });\n\n\n            let putProfitData=new ProfitData();\n            putProfitData.setCoinName(coinName);\n\n            let putOptionType = 'putPoolContract';\n            putProfitData.setPoolType(putOptionType);\n\n            handler.loadInvestment(putProfitData, (putProfitData) => {\n                ProfitVO.addPutData(putProfitData);\n            });\n        }\n    }\n\n    loadInvestment(profitData, callback){\n        log.debug(`loadInvestment... [coinName=${profitData.coinName},poolType=${profitData.poolType},assetName=${profitData.assetName}]`);\n\n        let handler=this;\n        handler.loadPoolerTokenAddress(profitData, address => {\n            let coinName = profitData.coinName;\n            let optionType = profitData.poolType;\n\n            let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType][\"poolerToken\"];\n            let contractAddress = address;\n            let contractAbi = contractConfig.abi;\n            let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n            contract.methods\n                .balanceOf(currentAccountStorage.account)\n                .call()\n                .then((result)=>{\n                    log.debug(`loadInvestment success,[balanceOf=${result}, poolAddress=${address}]`);\n                    profitData.setAssetQuantity(result);\n\n                    handler.loadAssetAvailableQuantity(profitData, profitData => {\n                        handler.loadTotalInPool(profitData, profitData => {\n                            handler.loadIncomeQuantity(profitData, profitData => {\n                                handler.loadRoundAccPremiumShare(handler, profitData, callback);\n                            });\n                        });\n                    });\n                });\n        });\n    }\n\n    loadPoolerTokenAddress(profitData, callback){\n        log.debug(`loadPoolerTokenAddress... [coinName=${profitData.coinName},poolType=${profitData.poolType},assetName=${profitData.assetName}]`);\n\n        let coinName = profitData.coinName;\n        let optionType = profitData.poolType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods[\"poolerTokenContract\"]\n            .call(contract.methods)\n            .call()\n            .then((address)=>{\n                log.debug(`loadPoolerTokenAddress... result=>${address}`);\n                callback(address);\n            });\n    }\n\n    loadAssetAvailableQuantity(profitData, callback){\n        let coinName = profitData.coinName;\n        let optionType = profitData.poolType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods[\"NWA\"]\n            .call(contract.methods)\n            .call()\n            .then((result)=>{\n                profitData.setAssetAvailableQuantity(result);\n                callback(profitData);\n            });\n    }\n\n    loadTotalInPool(profitData, callback){\n        let coinName = profitData.coinName;\n        let optionType = profitData.poolType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods[\"collateral\"]\n            .call(contract.methods)\n            .call()\n            .then((result)=>{\n                log.debug(`loadTotalInPool result => ${result}`);\n                profitData.setAssetPoolQuantity(result);\n                // profitData.setAssetPoolQuantity(\"5100000000000000\");\n                profitData.setWithdrawAbleQuantity();\n\n                callback(profitData);\n            });\n    }\n\n    loadIncomeQuantity(profitData, callback){\n        log.debug(`loadIncomeQuantity... [coinName=${profitData.coinName},poolType=${profitData.poolType},incomeAssetCoinName=${profitData.incomeAssetCoinName}]`);\n\n        let coinName = profitData.coinName;\n        let optionType = profitData.poolType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .checkPremium(currentAccountStorage.account)\n            .call()\n            .then((result)=>{\n                profitData.setIncomeQuantity(result);\n\n                callback(profitData);\n            });\n    }\n\n    withdraw(){\n        log.debug(`withdraw... [coinName=${ProfitWithdrawVO.coinName},optionType=${ProfitWithdrawVO.poolType},withdrawQuantity=${ProfitWithdrawVO.withdrawQuantity},withdrawQuantityInt=${ProfitWithdrawVO.withdrawQuantityInt}]`);\n\n        let handler=this;\n\n        let coinName = ProfitWithdrawVO.coinName;\n        let optionType = ProfitWithdrawVO.poolType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let withdrawMethod = contractConfig.withdrawMethod;\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        let additionalChargeWei=BigNumberConvert.toPrimitiveValue(ApplicationConfig.poolerAdditionalChargeFee,OptionTradingConfig.nativeAsset.getNativeAsset());\n        contract.methods[withdrawMethod]\n            .call(contract.methods, ProfitWithdrawVO.withdrawQuantityInt)\n            .send({\n                from: currentAccountStorage.account,\n                value: additionalChargeWei\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result)=>{\n                DialogBoxVO.success();\n\n                log.debug(\"withdraw success!\");\n                ProfitWithdrawVO.setShowWithdrawDialog(false);\n                AssetBalance.refresh();\n                handler.loadMyProfit();\n            });\n    }\n\n    claim(profitData){\n        log.debug(`claim... [coinName=${profitData.coinName},optionType=${profitData.poolType}]`);\n\n        let handler=this;\n\n        let coinName = profitData.coinName;\n        let optionType = profitData.poolType;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .claimPremium()\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result)=>{\n                DialogBoxVO.success();\n\n                log.debug(\"claim success!\");\n                AssetBalance.refresh();\n                handler.loadMyProfit();\n            });\n    }\n}\n\nexport default new PoolerDAO();\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {Button, Input, NumberPicker, ResponsiveGrid, Select, Radio} from '@alifd/next';\nimport ConnectWallet from '../../../../components/ConnectWallet/ConnectWallet';\nimport IfConnectedWallet from '../../../../components/ConnectWallet/IfConnectedWallet';\nimport ConditionDisplay from '../../../../components/ConditionDisplay';\nimport intl from 'react-intl-universal';\nimport { observer } from 'mobx-react';\n\nimport PoolerVO from './PoolerVO';\nimport PoolerDAO from './PoolerDAO';\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport log from '../../../../components/Log';\nimport AssetApprove from \"../../../../components/AssetApprove\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport CurrentChainStorage from \"../../../../components/Web3/CurrentChainStorage\";\n\nconst { Cell } = ResponsiveGrid;\nconst RadioGroup = Radio.Group;\n\nconst optionTypeSwitch=(value)=>{\n    log.debug(`optionType=>${value}`);\n    PoolerVO.setOptionType(value);\n};\n\nconst optionAmountChange = (value) => {\n    PoolerVO.setQuantity(value);\n};\n\nconst deposit = () => {\n    PoolerDAO.checkAllowanceBeforeDeposit();\n};\n\n@observer\nclass PoolerForm extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(PoolerVO.coinName && WebThreeLoadEvent.isLoaded && currentAccountStorage.account && AssetBalance.already){\n                PoolerDAO.loadBalance();\n            }\n        });\n\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                AssetApprove.getAllowance(\"Sell\");\n            }\n        });\n    }\n\n    render() {\n        return (\n            <ResponsiveGrid gap={20} className={'pooler_form'} columns={11}>\n                <Cell className=\"grid-5 section_item\" colSpan={5}>\n                    <span className={'f_title'}>{intl.get('page.sell.pooler.title.optionType')}</span>\n                    <div className={'f_input_box'}>\n                        <RadioGroup shape=\"button\" size=\"large\" value={PoolerVO.optionType} onChange={optionTypeSwitch}>\n                            <Radio id=\"J_optionTypeCall\" value=\"callPoolContract\">{intl.get('page.sell.pooler.optionType.callPoolContract')}</Radio>\n                            <Radio id=\"J_optionTypePut\" value=\"putPoolContract\">{intl.get('page.sell.pooler.optionType.putPoolContract')}</Radio>\n                        </RadioGroup>\n                    </div>\n                </Cell>\n                <Cell className=\"grid-4 section_item\" colSpan={6}>\n                    <span className={'f_title'}>{intl.get('page.sell.pooler.title.quantity')}</span>\n                    <div className={'f_input_box'}>\n                        <NumberPicker\n                            innerAfter={PoolerVO.depositCoinName}\n                            className={'f_input f_input_long'}\n                            value={PoolerVO.quantity}\n                            step={1}\n                            precision={18}\n                            min={0}\n                            max={PoolerVO.balanceOfFloat}\n                            onChange={optionAmountChange}\n                            hasTrigger={false}\n                        />\n                    </div>\n                    <IfConnectedWallet>\n                        <ConditionDisplay display={PoolerVO.getBalanceSuccess}>\n                            <div className={'f_tips'}>{intl.get('page.sell.pooler.tips.quantity')}<span className={'bolder'}>{PoolerVO.balanceOfTxt} {PoolerVO.depositCoinName}</span></div>\n                        </ConditionDisplay>\n                    </IfConnectedWallet>\n                </Cell>\n\n                <Cell className=\"grid-11 section_item f_submit_box\" colSpan={11}>\n                    <ConnectWallet />\n                    <IfConnectedWallet>\n                        <div className={'sub_btn_box'}>\n                            <Button type=\"primary\" size=\"large\" onClick={deposit} className=\"sub_btn sub_btn_long\" disabled={!PoolerVO.depositEnable}>\n                                {intl.get('page.sell.pooler.deposit')}\n                            </Button>\n                            <ConditionDisplay display={PoolerVO.depositEnable}>\n                                <div className={'deposit_tips'}>\n                                    {intl.get('page.sell.pooler.tips.deposit1')}\n                                    <span className={'bolder'}>{PoolerVO.quantity} {PoolerVO.depositCoinName}</span>\n                                    {intl.get('page.sell.pooler.tips.deposit2')}\n                                </div>\n                            </ConditionDisplay>\n                        </div>\n                    </IfConnectedWallet>\n                </Cell>\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default PoolerForm;\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {Button, Input, ConfigProvider, ResponsiveGrid, Table, Overlay, NumberPicker} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport IfConnectedWallet from '../../../../components/ConnectWallet/IfConnectedWallet';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx'\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport PoolerDAO from \"./PoolerDAO\";\nimport {NextComponentLocaleConfig} from \"../../../../components\";\nimport ProfitVO from \"./ProfitVO\";\nimport ProfitWithdrawVO from \"./ProfitWithdrawVO\";\n\nconst { Cell } = ResponsiveGrid;\n\nconst assetRender = (value, index, record) => {\n    return (\n        <div className={'asset_box'}>\n            <div className={`coin_icon ${record.coinIcon}`}></div>\n            <div className={'asset_name'}>{record.coinName}</div>\n        </div>\n    );\n};\n\nconst investmentRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.assetQuantityTxt}</span>\n            <span className={'unit'}>{record.assetName}</span>\n        </div>\n    );\n};\n\nconst poolTotalRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.assetPoolQuantityTxt}</span>\n            <span className={'unit'}>{record.assetName}</span>\n        </div>\n    );\n};\n\nconst contributionRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.getAssetContribution()}</span>\n            <span className={'unit'}>%</span>\n        </div>\n    );\n};\n\nconst withdrawableRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.assetAvailableQuantityTxt}</span>\n            <span className={'unit'}>{record.assetName}</span>\n        </div>\n    );\n};\n\nconst incomeRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.incomeQuantityTxt}</span>\n            <span className={'unit'}>{record.incomeAssetCoinName}</span>\n        </div>\n    );\n};\n\nconst aprRender = (value, index, record) => {\n    return (\n        <div>\n            <span className={`value`}>{record.apr}</span>\n            <span className={'unit'}>%</span>\n        </div>\n    );\n};\n\nconst operationRender = (value, index, record) => {\n    return (\n        <div className={'btn_box'}>\n            <Button type=\"primary\" size=\"large\" onClick={openWithdrawDialog.bind(this,record)} className=\"sub_btn sub_btn_short\" disabled={!record.withdrawEnable}>\n                {intl.get('page.sell.pooler.investment')}\n            </Button>\n            <Button type=\"primary\" size=\"large\" onClick={claim.bind(this, record)} className=\"sub_btn sub_btn_short\" disabled={!record.claimEnable}>\n                {intl.get('page.sell.pooler.income')}\n            </Button>\n        </div>\n    );\n};\n\nconst openWithdrawDialog=(profitData)=>{\n    ProfitWithdrawVO.setByProfitData(profitData);\n    ProfitWithdrawVO.setShowWithdrawDialog(true);\n};\n\nconst closeWithdrawDialog=()=>{\n    ProfitWithdrawVO.setShowWithdrawDialog(false);\n};\n\nconst withdrawQuantityChange = (value) => {\n    ProfitWithdrawVO.setWithdrawQuantity(value);\n};\n\nconst withdraw=()=>{\n    PoolerDAO.withdraw();\n};\n\nconst claim=(profitData)=>{\n    PoolerDAO.claim(profitData);\n};\n\n@observer\nclass Profit extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                PoolerDAO.loadMyProfit();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <IfConnectedWallet>\n                <Overlay visible={ProfitWithdrawVO.showWithdrawDialog}\n                    // safeNode={() => this.btn}\n                         align=\"cc cc\"\n                         hasMask\n                         disableScroll className={'overlay_container'}>\n                    <div>\n                        <div className={'item title'}>{intl.get('page.sell.pooler.investment.withdraw.title')}</div>\n                        <div className={'item'}>{intl.get('page.sell.pooler.investment.withdraw.address')}</div>\n                        <div className={'item'}>\n                            <Input\n                                disabled\n                                aria-label=\"disabled\"\n                                className={'f_input'}\n                                value={currentAccountStorage.account}\n                            />\n                        </div>\n\n                        <div className={'item'}>{intl.get('page.sell.pooler.investment.withdraw.quantity')}</div>\n                        <div className={'item'}>\n                            <NumberPicker\n                                innerAfter={ProfitWithdrawVO.assetCoinName}\n                                className={'f_input f_input_long'}\n                                value={ProfitWithdrawVO.withdrawQuantity}\n                                step={1}\n                                precision={18}\n                                min={0}\n                                max={ProfitWithdrawVO.withdrawAbleQuantityShow}\n                                onChange={withdrawQuantityChange}\n                                hasTrigger={false}\n                            />\n                        </div>\n\n                        <div className={'item'}>{intl.get('page.sell.pooler.investment.withdraw.available')} <span className={'tips'}>{ProfitWithdrawVO.withdrawAbleQuantityShow}</span> <span className={'tips'}>{ProfitWithdrawVO.assetName}</span></div>\n                        <div className={'item item_des'}>{intl.get('page.sell.pooler.investment.available')} <span className={'tips'}>{ProfitWithdrawVO.assetAvailableQuantityTxt} {ProfitWithdrawVO.assetName}</span></div>\n                        <div className={'item sub_btn_box'}>\n                            <Button type=\"primary\" size=\"large\" onClick={closeWithdrawDialog}  className=\"sub_btn cancel\">\n                                {intl.get('page.sell.pooler.investment.withdraw.cancel')}\n                            </Button>\n                            <Button type=\"primary\" size=\"large\" onClick={withdraw}  className=\"sub_btn confirm\" disabled={!ProfitWithdrawVO.withdrawEnable}>\n                                {intl.get('page.sell.pooler.investment.withdraw.confirm')}\n                            </Button>\n                        </div>\n                    </div>\n                </Overlay>\n\n                <ResponsiveGrid gap={20} className={'pooler_income'}>\n                    <Cell className=\"grid-12 section_item section_title\" colSpan={12}>\n                        {intl.get('page.sell.pooler.title.profit')}\n                    </Cell>\n\n                    <Cell className=\"grid-12 section_item section_investment_box\" colSpan={12}>\n                        <div className={'investment_box_title'}>{intl.get('page.sell.pooler.title.call')}</div>\n                        <ConfigProvider locale={NextComponentLocaleConfig}>\n                            <Table dataSource={ProfitVO.callDataArr}>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.asset')} className={'asset'} cell={assetRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.investment')} className={'amount'} cell={investmentRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.poolTotal')} className={'amount'} cell={poolTotalRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.contribution')} className={'percentage_amount'} cell={contributionRender}/>\n                                {/*<Table.Column title={intl.get('page.sell.pooler.profit.table.title.withdrawable')} className={'amount'} cell={withdrawableRender}/>*/}\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.income')} className={'amount'} cell={incomeRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.apr')} className={'percentage_amount'} cell={aprRender}/>\n                                <Table.Column className={'operation_cell'} cell={operationRender}/>\n                            </Table>\n                        </ConfigProvider>\n                    </Cell>\n\n                    <Cell className=\"grid-12 section_item section_investment_box\" colSpan={12}>\n                        <div className={'investment_box_title'}>{intl.get('page.sell.pooler.title.put')}</div>\n                        <ConfigProvider locale={NextComponentLocaleConfig}>\n                            <Table dataSource={ProfitVO.putDataArr}>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.asset')} className={'asset'} cell={assetRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.investment')} className={'amount'} cell={investmentRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.poolTotal')} className={'amount'} cell={poolTotalRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.contribution')} className={'percentage_amount'} cell={contributionRender}/>\n                                {/*<Table.Column title={intl.get('page.sell.pooler.profit.table.title.withdrawable')} className={'amount'} cell={withdrawableRender}/>*/}\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.income')} className={'amount'} cell={incomeRender}/>\n                                <Table.Column title={intl.get('page.sell.pooler.profit.table.title.apr')} className={'percentage_amount'} cell={aprRender}/>\n                                <Table.Column className={'operation_cell'} cell={operationRender}/>\n                            </Table>\n                        </ConfigProvider>\n                    </Cell>\n                </ResponsiveGrid>\n            </IfConnectedWallet>\n        );\n    }\n}\n\nexport default Profit;\n","/* eslint-disable new-cap */\nimport React from 'react';\nimport {ResponsiveGrid, Tab} from '@alifd/next';\nimport intl from 'react-intl-universal';\n\nimport './index.scss';\n\nimport {ConnectWallet} from '@components';\nimport OptionTradingConfig from \"../../../../etherscan/OptionTradingConfig\";\nimport PoolerForm from './PoolerForm';\nimport PoolerVO from \"./PoolerVO\";\nimport log from '../../../../components/Log';\nimport DialogBox from \"../../../../components/DialogBox\";\nimport Profit from \"./Profit\";\n\nconst {Cell} = ResponsiveGrid;\n\nconst SellCoinTab =({ name, icon }) =>{\n    return (\n        <div className=\"coin_tab_item\">\n            <div className={icon}>{intl.get(`page.sell.pooler.coin.name.${name}`)}</div>\n            <div className=\"tab_desc\">{intl.get(`page.sell.pooler.coin.desc.${name}`)}</div>\n        </div>\n    );\n};\n\nconst onCoinChange = (key) => {\n    log.debug(`coin switch=>${key}`);\n    PoolerVO.setCoinName(key);\n};\n\nconst Pooler = () => {\n    return (\n        <section id=\"J_pooler\" className=\"section pooler_container\">\n            <DialogBox/>\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={10}>\n                    <Cell className=\"grid-12 section_item\" colSpan={12}>\n                        <div className={'coin_switch'}>\n                            <Tab defaultActiveKey={OptionTradingConfig.defaultCoin} onChange={onCoinChange} tabRender={(key, props) => <SellCoinTab key={key} {...props} />}>\n                                {OptionTradingConfig.coins.map(coin => (\n                                    <Tab.Item key={coin.name} {...coin}/>\n                                ))}\n                            </Tab>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n\n                <PoolerForm/>\n                <Profit/>\n            </div>\n        </section>\n    );\n};\n\nexport default Pooler;\n","/* eslint react/no-string-refs:0 */\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Banner from './components/Banner';\nimport Pooler from './components/Pooler';\nimport HeaderVO from \"../../layouts/DefaultLayout/components/Header/HeaderVO\";\n\n@withRouter\nclass Sell extends Component {\n    componentDidMount(){\n        HeaderVO.setCurrentNavKey('sell');\n    }\n\n    render() {\n        return (\n            <div className=\"sections\">\n                <Banner/>\n\n                <Pooler/>\n            </div>\n        );\n    }\n}\n\nexport default Sell;\n","import Sell from './Sell';\n\nexport default Sell;\n","/* eslint-disable new-cap */\nimport React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\n\nimport './index.scss';\n\nimport {ConnectWallet} from '@components';\n\nconst {Cell} = ResponsiveGrid;\n\nconst SellBanner = () => {\n    return (\n        <section id=\"J_banner\" className=\"section b_container a_b_container\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={10}>\n                    <Cell className=\"grid-6 section_item l\" colSpan={6}>\n                        <div className={'title'}>{intl.get('page.analytics.banner.title')}</div>\n                        <div className={'content'}>\n                            {intl.getHTML('page.analytics.banner.content')}\n                        </div>\n                        <div className={'btn'}>\n                            <ConnectWallet/>\n                        </div>\n                    </Cell>\n                    <Cell className=\"grid-6 section_item r\" colSpan={6}>\n                        <div className={'content'}>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n        </section>\n    );\n};\n\nexport default SellBanner;\n","import {action, observable} from 'mobx';\nimport OptionTradingConfig from \"../../../../etherscan/OptionTradingConfig\";\n\nclass AnalyticsVO {\n    callOptionType=\"callPoolContract\";\n    putOptionType=\"putPoolContract\";\n\n    poolerIncomeAssetName=\"USDT\";\n\n    @observable coinName = OptionTradingConfig.defaultCoin;\n\n    @action\n    setCoinName(coinName) {\n        this.coinName = coinName;\n    }\n}\n\nexport default new AnalyticsVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport log from \"../../../../components/Log\";\nimport AnalyticsVO from \"./AnalyticsVO\";\n\nclass UnderlyingAssetVO {\n    @observable currentPrice = 0;\n\n    @observable totalAssetQuantity = 0;\n    @observable totalAssetQuantityShow = 0;\n    @observable totalAssetValue = 0;\n\n    @observable callAssetQuantity = 0;\n    @observable callAssetQuantityShow = 0;\n    @observable callAssetQuantityShowNumber = 0;\n    @observable callAssetValue = 0;\n\n    @observable putAssetQuantity = 0;\n    @observable putAssetQuantityShow = 0;\n    @observable putAssetQuantityShowNumber = 0;\n    @observable putAssetValue = 0;\n\n    @observable totalIncomeQuantity = 0;\n    @observable totalIncomeQuantityShow = 0;\n\n    @observable callIncomeQuantity = 0;\n    @observable callIncomeQuantityShow = 0;\n\n    @observable putIncomeQuantity = 0;\n    @observable putIncomeQuantityShow = 0;\n\n    constructor(){\n    }\n\n    @action\n    reset(){\n        this.currentPrice = 0;\n\n        this.totalAssetQuantity = 0;\n        this.totalAssetQuantityShow = 0;\n        this.totalAssetValue = 0;\n\n        this.callAssetQuantity = 0;\n        this.callAssetQuantityShow = 0;\n        this.callAssetQuantityShowNumber=0;\n        this.callAssetValue = 0;\n\n        this.putAssetQuantity = 0;\n        this.putAssetQuantityShow = 0;\n        this.putAssetQuantityShowNumber=0;\n        this.putAssetValue = 0;\n\n        this.totalIncomeQuantity = 0;\n        this.totalIncomeQuantityShow = 0;\n\n        this.callIncomeQuantity = 0;\n        this.callIncomeQuantityShow = 0;\n\n        this.putIncomeQuantity = 0;\n        this.putIncomeQuantityShow = 0;\n    }\n\n    @action\n    setCurrentPrice(currentPrice){\n        log.debug(`Primitive currentPrice =>${currentPrice}`);\n        let _currentPrice=BigNumberConvert.toShowNumber(currentPrice,\"USDT\");\n        log.debug(`currentPrice =>${_currentPrice}`);\n        this.currentPrice=_currentPrice;\n    }\n\n    @action\n    setCallAssetQuantity(callAssetQuantity){\n        this.callAssetQuantity=callAssetQuantity;\n        this.callAssetQuantityShow=BigNumberConvert.toShowValueFormatDecimal(callAssetQuantity,AnalyticsVO.coinName,4);\n        this.callAssetQuantityShowNumber=BigNumberConvert.toShowValue(callAssetQuantity,AnalyticsVO.coinName,4);\n\n        let quantityNumber=BigNumberConvert.toShowNumber(callAssetQuantity,AnalyticsVO.coinName);\n        this.callAssetValue=BigNumberConvert.timesAndFormat(quantityNumber,this.currentPrice,2);\n\n        this.setTotalAssetQuantity();\n    }\n\n    @action\n    addCallAssetQuantity(callAssetQuantity){\n        let quantity=BigNumberConvert.plusAndToString(this.callAssetQuantity, callAssetQuantity, 4);\n        this.setCallAssetQuantity(quantity);\n    }\n\n    @action\n    setPutAssetQuantity(putAssetQuantity){\n        this.putAssetQuantity=putAssetQuantity;\n        this.putAssetQuantityShow=BigNumberConvert.toShowValueFormatDecimal(putAssetQuantity,AnalyticsVO.coinName,4);\n        this.putAssetQuantityShowNumber=BigNumberConvert.toShowValue(putAssetQuantity,AnalyticsVO.coinName,4);\n\n        let quantityNumber=BigNumberConvert.toShowNumber(putAssetQuantity,AnalyticsVO.coinName);\n        this.putAssetValue=BigNumberConvert.timesAndFormat(quantityNumber,this.currentPrice,2);\n\n        this.setTotalAssetQuantity();\n    }\n\n    @action\n    addPutAssetQuantity(putAssetQuantity){\n        let quantity=BigNumberConvert.plusAndToString(this.putAssetQuantity, putAssetQuantity, 4);\n        this.setPutAssetQuantity(quantity);\n    }\n\n    @action\n    setTotalAssetQuantity(){\n        this.totalAssetQuantity=BigNumberConvert.plusAndToString(this.callAssetQuantity, this.putAssetQuantity, 4);\n        this.totalAssetQuantityShow=BigNumberConvert.toShowValueFormatDecimal(this.totalAssetQuantity,AnalyticsVO.coinName,4);\n\n        let quantityNumber=BigNumberConvert.toShowNumber(this.totalAssetQuantity,AnalyticsVO.coinName);\n        this.totalAssetValue=BigNumberConvert.timesAndFormat(quantityNumber,this.currentPrice,2);\n    }\n\n    @action\n    setCallIncomeQuantity(callIncomeQuantity){\n        this.callIncomeQuantity=callIncomeQuantity;\n\n        let num=BigNumberConvert.toShowNumber(callIncomeQuantity,AnalyticsVO.poolerIncomeAssetName);\n        let _decimal=2;\n        if(num < 0.01){\n            _decimal=4;\n        }\n        this.callIncomeQuantityShow=BigNumberConvert.toFormatDecimal(num,_decimal);\n\n        this.setTotalIncomeQuantity();\n    }\n\n    @action\n    addCallIncomeQuantity(callIncomeQuantity){\n        let quantity=BigNumberConvert.plusAndToString(this.callIncomeQuantity, callIncomeQuantity, 2);\n        this.setCallIncomeQuantity(quantity);\n    }\n\n    @action\n    setPutIncomeQuantity(putIncomeQuantity){\n        this.putIncomeQuantity=putIncomeQuantity;\n\n        let num=BigNumberConvert.toShowNumber(putIncomeQuantity,AnalyticsVO.poolerIncomeAssetName);\n        let _decimal=2;\n        if(num < 0.01){\n            _decimal=4;\n        }\n        this.putIncomeQuantityShow=BigNumberConvert.toFormatDecimal(num,_decimal);\n\n        this.setTotalIncomeQuantity();\n    }\n\n    @action\n    addPutIncomeQuantity(putIncomeQuantity){\n        let quantity=BigNumberConvert.plusAndToString(this.putIncomeQuantity, putIncomeQuantity, 2);\n        this.setPutIncomeQuantity(quantity);\n    }\n\n    @action\n    setTotalIncomeQuantity(){\n        this.totalIncomeQuantity=BigNumberConvert.plusAndToString(this.callIncomeQuantity, this.putIncomeQuantity, 2);\n        this.totalIncomeQuantityShow=BigNumberConvert.toShowValueFormatDecimal(this.totalIncomeQuantity,AnalyticsVO.poolerIncomeAssetName,2);\n    }\n}\n\nexport default new UnderlyingAssetVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport log from \"../../../../components/Log\";\nimport AnalyticsVO from \"./AnalyticsVO\";\nimport UnderlyingAssetVO from \"./UnderlyingAssetVO\";\n\nclass UnderwritingPoolVO {\n    @observable callUtilizationRatio = 0;\n    @observable callUtilizationRatioShow = 0;\n    @observable callAvailableAssetQuantity = 0;\n    @observable callAvailableAssetQuantityShow = 0;\n    @observable callTotalAsset = 0;\n    @observable callTotalAssetShowNumber = 0;\n    @observable callTotalAssetShow = 0;\n\n    @observable putUtilizationRatio = 0;\n    @observable putUtilizationRatioShow = 0;\n    @observable putAvailableAssetQuantity = 0;\n    @observable putAvailableAssetQuantityShow = 0;\n    @observable putTotalAsset = 0;\n    @observable putTotalAssetShowNumber = 0;\n    @observable putTotalAssetShow = 0;\n    @observable putTotalAssetValueShow = 0;\n\n    constructor(){\n    }\n\n    @action\n    reset(){\n        this.callUtilizationRatio = 0;\n        this.callUtilizationRatioShow = 0;\n        this.callAvailableAssetQuantityShow = 0;\n        this.callAvailableAssetQuantity=0;\n        this.callTotalAsset=0;\n        this.callTotalAssetShowNumber=0;\n        this.callTotalAssetShow=0;\n\n        this.putUtilizationRatio = 0;\n        this.putUtilizationRatioShow = 0;\n        this.putAvailableAssetQuantityShow = 0;\n        this.putAvailableAssetQuantity=0;\n        this.putTotalAsset=0;\n        this.putTotalAssetShowNumber=0;\n        this.putTotalAssetShow=0;\n        this.putTotalAssetValueShow = 0;\n    }\n\n    @action\n    setCallUtilizationRatio(callUtilizationRatio){\n        this.callUtilizationRatio=callUtilizationRatio;\n        this.callUtilizationRatioShow=callUtilizationRatio/100;\n    }\n\n    @action\n    setCallAvailableAssetQuantityShow(){\n        let callAvailableAssetQuantity=this.callTotalAssetShowNumber*0.75 - UnderlyingAssetVO.callAssetQuantityShowNumber;\n        if(callAvailableAssetQuantity < 0.01){\n            this.callAvailableAssetQuantity=BigNumberConvert.toFormatDecimalNumber(callAvailableAssetQuantity,4);\n        }else{\n            this.callAvailableAssetQuantity=BigNumberConvert.toFormatDecimalNumber(callAvailableAssetQuantity,2);\n        }\n        this.callAvailableAssetQuantityShow=BigNumberConvert.toFormatDecimal(callAvailableAssetQuantity,4);\n    }\n\n    @action\n    setCallTotalAsset(callTotalAsset){\n        this.callTotalAsset=callTotalAsset;\n        this.callTotalAssetShowNumber=BigNumberConvert.toShowValue(callTotalAsset,AnalyticsVO.coinName,4);\n        this.callTotalAssetShow=BigNumberConvert.toShowValueFormatDecimal(callTotalAsset,AnalyticsVO.coinName,4);\n    }\n\n    getCallUtilizationRatioStyle(){\n        return  {\n            width:`${this.callUtilizationRatio}%`\n        };\n    }\n\n    getCallAvailableAssetQuantityStyle(){\n        let ratio=this.callAvailableAssetQuantity/this.callTotalAssetShowNumber;\n        ratio=BigNumberConvert.toFormatDecimalNumber(ratio*100,2);\n        log.debug(`[callAvailableAssetQuantity=${this.callAvailableAssetQuantity},callTotalAssetShowNumber=${this.callTotalAssetShowNumber},ratio=${ratio}]`);\n        return  {\n            width:`${ratio}%`\n        };\n    }\n\n    @action\n    setPutUtilizationRatio(putUtilizationRatio){\n        this.putUtilizationRatio=putUtilizationRatio;\n        this.putUtilizationRatioShow=putUtilizationRatio/100;\n    }\n\n    @action\n    setPutAvailableAssetQuantityShow(){\n        let putAvailableAssetQuantity=this.putTotalAssetShowNumber*0.75 - UnderlyingAssetVO.putAssetQuantityShowNumber;\n        this.putAvailableAssetQuantity=BigNumberConvert.toFormatDecimalNumber(putAvailableAssetQuantity,2);\n        this.putAvailableAssetQuantityShow=BigNumberConvert.toFormatDecimal(putAvailableAssetQuantity,4);\n    }\n\n    @action\n    setPutTotalAsset(putTotalAsset){\n        let putTotalAssetShowNumber=BigNumberConvert.toShowValue(putTotalAsset,\"USDT\");\n        this.putTotalAsset=putTotalAssetShowNumber/UnderlyingAssetVO.currentPrice;\n        this.putTotalAssetShowNumber=this.putTotalAsset;\n        this.putTotalAssetShow=BigNumberConvert.toFormatDecimal(this.putTotalAsset,4);\n        this.putTotalAssetValueShow=BigNumberConvert.toFormatDecimal(putTotalAssetShowNumber,2);\n    }\n\n    getPutUtilizationRatioStyle(){\n        return  {\n            width:`${this.putUtilizationRatio}%`\n        };\n    }\n\n    getPutAvailableAssetQuantityStyle(){\n        let ratio=this.putAvailableAssetQuantity/this.putTotalAssetShowNumber;\n        ratio=BigNumberConvert.toFormatDecimalNumber(ratio*100,2);\n        return  {\n            width:`${ratio}%`\n        };\n    }\n}\n\nexport default new UnderwritingPoolVO();\n","import {action, observable} from 'mobx';\n\nclass UnderwritingPoolSnapshotVO {\n    @observable poolData = [];\n    @observable dataArrTemp = [];\n    @observable loadDataLength = 0;\n    @observable loadedDataLength = 0;\n    isLoading = false;\n\n    constructor(){\n    }\n\n    @action\n    reset(){\n        this.dataArrTemp = [];\n        this.loadDataLength=0;\n        this.loadedDataLength=0;\n        this.isLoading=true;\n    }\n\n    @action\n    addPoolData(poolData){\n        this.dataArrTemp.push(poolData);\n\n        this.addLoadedDataLength(1);\n    }\n\n    @action\n    addLoadDataLength(length){\n        this.loadDataLength=this.loadDataLength+length;\n    }\n\n    @action\n    addLoadedDataLength(length){\n        this.loadedDataLength=this.loadedDataLength+length;\n\n        if(this.loadedDataLength == this.loadDataLength){\n            this.setLoading(false);\n            this.poolData=this.dataArrTemp;\n        }\n    }\n\n    @action\n    setLoading(isLoading){\n        this.isLoading=isLoading;\n    }\n\n    @action\n    refreshExpiryDate(){\n        let arr=this.poolData;\n        this.poolData=[];\n        for(let data of arr){\n            data.setExpiryDate(data.expiryDate);\n        }\n        this.poolData=arr;\n    }\n}\n\nexport default new UnderwritingPoolSnapshotVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from '../../../../components/BigNumberConvert';\nimport AnalyticsVO from \"./AnalyticsVO\";\nimport Countdown from \"../../../../components/Countdown\";\n\nclass UnderwritingPoolSnapshotData {\n    @observable poolType='';\n    @observable duration='';\n    @observable durationShow='';\n    @observable position='';\n    @observable totalSupply='';\n    @observable positionShow='';\n    @observable available='';\n    @observable availableShow='';\n    @observable strikePrice='';\n    @observable strikePriceShow='';\n    @observable currentPrice='';\n    @observable currentPriceShow='';\n    @observable revenue='';\n    @observable revenueShow='';\n    @observable revenueStyle='';\n    @observable expiryDate='';\n    @observable expiryDateShow='';\n    @observable countdown='';\n    @observable countdownStyle='';\n    @observable countdownComponent='';\n\n    @action\n    setPoolType(value) {\n        if(value==\"callPoolContract\"){\n            this.poolType=\"CALL\";\n        }else if(value==\"putPoolContract\"){\n            this.poolType = \"PUT\";\n        }else{\n            this.poolType = value;\n        }\n    }\n\n    @action\n    setDuration(value) {\n        this.duration = value;\n\n        let durationMin=this.duration / 60;\n        this.durationShow = `${durationMin}min`;\n    }\n\n    @action\n    setTotalSupply(value) {\n        this.totalSupply = value;\n        this.setPosition();\n    }\n\n    @action\n    setPosition() {\n        if(this.totalSupply && this.available){\n            this.position = this.totalSupply-this.available;\n            this.positionShow=`${BigNumberConvert.toShowValueFormatDecimal(this.position,AnalyticsVO.coinName,4)} ${AnalyticsVO.coinName}`;\n        }\n    }\n\n    @action\n    setAvailable(value) {\n        this.available = value;\n        this.availableShow=`${BigNumberConvert.toShowValueFormatDecimal(this.available,AnalyticsVO.coinName,4)} ${AnalyticsVO.coinName}`;\n        this.setPosition();\n    }\n\n    @action\n    setStrikePrice(value) {\n        this.strikePrice = value;\n        this.strikePriceShow=`$${BigNumberConvert.toShowValueFormatDecimal(this.strikePrice,\"USDT\",2)}`;\n    }\n\n    @action\n    setCurrentPrice(value, isConverted) {\n        this.currentPrice = value;\n        if(isConverted){\n            this.currentPriceShow=`$${BigNumberConvert.toFormatDecimal(this.currentPrice,2)}`;\n        }else{\n            this.currentPriceShow=`$${BigNumberConvert.toShowValueFormatDecimal(this.currentPrice,\"USDT\",2)}`;\n        }\n    }\n\n    @action\n    setRevenue(value) {\n        this.revenue = value;\n        this.revenueShow=`${BigNumberConvert.toShowValueFormatDecimal(this.revenue,AnalyticsVO.poolerIncomeAssetName,2)} ${AnalyticsVO.poolerIncomeAssetName}`;\n        this.revenueStyle= value>0 ? \"revenue\" : \"\";\n    }\n\n    @action\n    setExpiryDate(value) {\n        this.expiryDate = value;\n\n        let _countdownComponent=new Countdown(this.expiryDate);\n        this.countdownComponent=_countdownComponent;\n        this.expiryDateShow=_countdownComponent.endTimeFormat;\n        this.countdown=_countdownComponent.countdownTime;\n        if(!_countdownComponent.isOver){\n            this.countdownStyle='countdown';\n        }else{\n            this.countdownStyle='';\n        }\n    }\n}\n\nexport default UnderwritingPoolSnapshotData;\n","import OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport log from \"../../../../components/Log\";\nimport AnalyticsVO from \"./AnalyticsVO\";\nimport UnderlyingAssetVO from \"./UnderlyingAssetVO\";\nimport UnderwritingPoolVO from \"./UnderwritingPoolVO\";\nimport UnderwritingPoolSnapshotVO from \"./UnderwritingPoolSnapshotVO\";\nimport UnderwritingPoolSnapshotData from \"./UnderwritingPoolSnapshotData\";\n\nclass AnalyticsDAO {\n    loadUnderlyingAsset(){\n        log.debug(`loadUnderlyingAsset...`);\n        UnderlyingAssetVO.reset();\n        this.loadPositionAndIncome();\n    }\n\n    loadPositionAndIncome(){\n        log.debug(`loadPosition... [AnalyticsVO.coinName=${AnalyticsVO.coinName}]`);\n\n        let callPoolContract=this.buildPoolContract(AnalyticsVO.callOptionType);\n        let putPoolContract=this.buildPoolContract(AnalyticsVO.putOptionType);\n        this.loadAssetPrice(callPoolContract,()=>{\n            let callPoolContractAddress=OptionTradingConfig.contractConfig[AnalyticsVO.coinName][AnalyticsVO.callOptionType].address();\n            this.loadListOptions(AnalyticsVO.callOptionType,callPoolContract,callPoolContractAddress,(quantity)=>{\n                UnderlyingAssetVO.addCallAssetQuantity(quantity);\n            },(quantity)=>{\n                UnderlyingAssetVO.addCallIncomeQuantity(quantity);\n            });\n\n            let putPoolContractAddress=OptionTradingConfig.contractConfig[AnalyticsVO.coinName][AnalyticsVO.putOptionType].address();\n            this.loadListOptions(AnalyticsVO.putOptionType,putPoolContract,putPoolContractAddress,(quantity)=>{\n                UnderlyingAssetVO.addPutAssetQuantity(quantity);\n            },(quantity)=>{\n                UnderlyingAssetVO.addPutIncomeQuantity(quantity);\n            });\n        });\n    }\n\n    buildPoolContract(optionType){\n        let coinName = AnalyticsVO.coinName;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n        return new window.web3.eth.Contract(contractAbi, contractAddress);\n    }\n\n    loadAssetPrice(contract,callBack){\n        contract.methods\n            .getAssetPrice()\n            .call()\n            .then((result)=>{\n                UnderlyingAssetVO.setCurrentPrice(result);\n                callBack();\n            });\n    }\n\n    loadListOptions(optionType,contract, optionPoolContractAddress, loadOptionTotalSupplyCallBack, loadOptionTotalIncomeCallBack){\n        contract.methods\n            .listOptions()\n            .call()\n            .then((result)=>{\n                log.debug(`loadListOptions success, [asset=${AnalyticsVO.coinName},optionType=${optionType},listOptions=${result}]`);\n\n                for (let address of result) {\n                    this.loadOptionTotalSupplyAndIncome(optionType,address, optionPoolContractAddress, loadOptionTotalSupplyCallBack, loadOptionTotalIncomeCallBack)\n                }\n            });\n    }\n\n    loadOptionTotalSupplyAndIncome(optionType, optionAddress, optionPoolContractAddress, addAssetTotalSupplyCallBack, loadOptionTotalIncomeCallBack){\n        let coinName = AnalyticsVO.coinName;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][\"optionContract\"];\n        let contractAddress = optionAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .totalSupply()\n            .call()\n            .then((totalSupply) => {\n                contract.methods\n                    .balanceOf(optionPoolContractAddress)\n                    .call()\n                    .then((balanceOf) => {\n                        log.debug(`loadOptionTotalSupplyAndBalanceOf success, [asset=${AnalyticsVO.coinName},optionType=${optionType},optionAddress=${optionAddress},totalSupply=${totalSupply},balanceOf=${balanceOf}]`);\n                        let openPosition=totalSupply-balanceOf;\n                        addAssetTotalSupplyCallBack(openPosition);\n                    });\n            });\n\n        contract.methods\n            .totalPremiums()\n            .call()\n            .then((result) => {\n                log.debug(`loadOptionTotalPremiums  success, [asset=${AnalyticsVO.coinName},optionType=${optionType},optionAddress=${optionAddress},totalPremiums=${result}]`);\n                loadOptionTotalIncomeCallBack(result);\n            });\n    }\n\n    loadUnderlyingPool(){\n        log.debug(`loadUnderlyingPool...`);\n        UnderwritingPoolVO.reset();\n\n        let callPoolContract=this.buildPoolContract(AnalyticsVO.callOptionType);\n        this.loadUtilizationRatio(AnalyticsVO.callOptionType,callPoolContract,(utilizationRatio)=>{\n            UnderwritingPoolVO.setCallUtilizationRatio(utilizationRatio);\n        });\n        this.loadTotalAsset(AnalyticsVO.callOptionType,callPoolContract,(totalAsset)=>{\n            UnderwritingPoolVO.setCallTotalAsset(totalAsset);\n        });\n\n        let putPoolContract=this.buildPoolContract(AnalyticsVO.putOptionType);\n        this.loadUtilizationRatio(AnalyticsVO.putOptionType,putPoolContract,(utilizationRatio)=>{\n            UnderwritingPoolVO.setPutUtilizationRatio(utilizationRatio);\n        });\n        this.loadTotalAsset(AnalyticsVO.putOptionType,putPoolContract,(totalAsset)=>{\n            UnderwritingPoolVO.setPutTotalAsset(totalAsset);\n        });\n    }\n\n    loadUtilizationRatio(optionType,contract,callBack){\n        contract.methods\n            .currentUtilizationRate()\n            .call()\n            .then((result)=>{\n                log.debug(`loadUtilizationRatio success, [asset=${AnalyticsVO.coinName},optionType=${optionType},utilizationRatio=${result}]`);\n                callBack(result);\n            });\n    }\n\n    loadTotalAsset(optionType,contract,callBack){\n        contract.methods\n            .collateral()\n            .call()\n            .then((result)=>{\n                log.debug(`loadTotalAsset success, [asset=${AnalyticsVO.coinName},optionType=${optionType},collateral=${result}]`);\n                callBack(result);\n            });\n    }\n\n    loadUnderwritingPoolSnapshotData(){\n        log.debug(`loadUnderwritingPoolSnapshotData... [AnalyticsVO.coinName=${AnalyticsVO.coinName}]`);\n        if(UnderwritingPoolSnapshotVO.isLoading){\n            return;\n        }\n\n        UnderwritingPoolSnapshotVO.reset();\n\n        // for (let i = 0; i < 2; i++) {\n        //     let poolDataItem=new UnderwritingPoolSnapshotData();\n        //     poolDataItem.setPoolType(\"CALL\");\n        //     poolDataItem.setDuration(\"300\");\n        //     poolDataItem.setPosition(\"10\");\n        //     poolDataItem.setAvailable(\"10\");\n        //     poolDataItem.setStrikePrice(\"100\");\n        //     poolDataItem.setCurrentPrice(\"100\");\n        //     poolDataItem.setRevenue(\"0\");\n        //     poolDataItem.setExpiryDate(\"1609669365\");\n        //\n        //     let time=Date.now() / 1000;\n        //     time=time+1;\n        //     poolDataItem.setExpiryDate(time);\n        //     UnderwritingPoolSnapshotVO.addPoolData(poolDataItem);\n        // }\n\n        let callPoolContract=this.buildPoolContract(AnalyticsVO.callOptionType);\n        let callPoolContractAddress=OptionTradingConfig.contractConfig[AnalyticsVO.coinName][AnalyticsVO.callOptionType];\n        this.loadListOptionsForPoolSnapshot(AnalyticsVO.callOptionType, callPoolContract, callPoolContractAddress.address());\n\n        let putPoolContract=this.buildPoolContract(AnalyticsVO.putOptionType);\n        let putPoolContractAddress=OptionTradingConfig.contractConfig[AnalyticsVO.coinName][AnalyticsVO.putOptionType];\n        this.loadListOptionsForPoolSnapshot(AnalyticsVO.putOptionType, putPoolContract, putPoolContractAddress.address());\n    }\n\n    loadListOptionsForPoolSnapshot(optionType,contract, optionPoolContractAddress){\n        contract.methods\n            .listOptions()\n            .call()\n            .then((result)=>{\n                log.debug(`loadListOptionsForPoolSnapshot success, [asset=${AnalyticsVO.coinName},optionType=${optionType},listOptions=${result}]`);\n\n                UnderwritingPoolSnapshotVO.addLoadDataLength(result.length);\n\n                for (let address of result) {\n                    this.loadOptionInfo(optionType,address, optionPoolContractAddress);\n                }\n            });\n    }\n\n    loadOptionInfo(optionType, optionAddress, optionPoolContractAddress, optionsLength){\n        let poolDada=new UnderwritingPoolSnapshotData();\n\n        poolDada.setPoolType(optionType);\n        poolDada.setCurrentPrice(UnderlyingAssetVO.currentPrice, true);\n\n        let getInfoCallback=()=>{\n            if(poolDada.duration && poolDada.totalSupply && poolDada.available && poolDada.strikePrice && poolDada.revenue && poolDada.expiryDate){\n                log.debug(`PoolData load success,[coinName=${coinName},optionType=${optionType}, optionAddress=${optionAddress}, optionPoolContractAddress=${optionPoolContractAddress}], option data => ${poolDada}`);\n                UnderwritingPoolSnapshotVO.addPoolData(poolDada);\n            }\n        };\n\n        let coinName = AnalyticsVO.coinName;\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][\"optionContract\"];\n        let contractAddress = optionAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        contract.methods\n            .getDuration()\n            .call()\n            .then((result) => {\n                poolDada.setDuration(result);\n                getInfoCallback();\n            });\n\n        contract.methods\n            .totalSupply()\n            .call()\n            .then((result) => {\n                poolDada.setTotalSupply(result);\n                getInfoCallback();\n            });\n\n        contract.methods\n            .balanceOf(optionPoolContractAddress)\n            .call()\n            .then((result) => {\n                poolDada.setAvailable(result);\n                getInfoCallback();\n            });\n\n        contract.methods\n            .strikePrice()\n            .call()\n            .then((result) => {\n                poolDada.setStrikePrice(result);\n                getInfoCallback();\n            });\n\n        contract.methods\n            .totalPremiums()\n            .call()\n            .then((result) => {\n                poolDada.setRevenue(result);\n                getInfoCallback();\n            });\n\n        contract.methods\n            .expiryDate()\n            .call()\n            .then((result) => {\n                poolDada.setExpiryDate(result);\n                getInfoCallback();\n            });\n    }\n}\n\nexport default new AnalyticsDAO();\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx'\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport AnalyticsVO from \"./AnalyticsVO\";\nimport UnderlyingAssetVO from \"./UnderlyingAssetVO\";\nimport AnalyticsDAO from \"./AnalyticsDAO\";\nimport DataRefreshTimer from \"../../../../components/DataRefreshTimer\";\nimport CurrentChainStorage from \"../../../../components/Web3/CurrentChainStorage\";\n\nconst { Cell } = ResponsiveGrid;\n\n@observer\nclass UnderlyingAsset extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(AnalyticsVO.coinName && WebThreeLoadEvent.isLoaded && CurrentChainStorage.chainId){\n                AnalyticsDAO.loadUnderlyingAsset();\n            }\n        });\n\n        autorun(()=>{\n            if(DataRefreshTimer.round){\n                if(WebThreeLoadEvent.isLoaded){\n                    AnalyticsDAO.loadUnderlyingAsset();\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <ResponsiveGrid gap={20} className={'analytics_item analytics_asset'}>\n                <Cell className=\"grid-12 section_item section_title\" colSpan={12}>\n                    {intl.get('page.analytics.asset.title')}\n                </Cell>\n\n                <Cell className=\"grid-12 section_item section_asset_box\" colSpan={12}>\n                    <ResponsiveGrid gap={10} className={'asset_box'} columns={3}>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'b t'}><span className={'value'}>{UnderlyingAssetVO.totalAssetQuantityShow}</span>  {AnalyticsVO.coinName}</div>\n                            <div className={'usd'}>≈${UnderlyingAssetVO.totalAssetValue}</div>\n                            <div className={'b'}>{intl.get('page.analytics.asset.position.total')}</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'b t'}><span className={'value'}>{UnderlyingAssetVO.callAssetQuantityShow}</span>  {AnalyticsVO.coinName}</div>\n                            <div className={'usd'}>≈${UnderlyingAssetVO.callAssetValue}</div>\n                            <div className={'b'}>{intl.get('page.analytics.asset.position.call')}</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'b t'}><span className={'value'}>{UnderlyingAssetVO.putAssetQuantityShow}</span>  {AnalyticsVO.coinName}</div>\n                            <div className={'usd'}>≈${UnderlyingAssetVO.putAssetValue}</div>\n                            <div className={'b'}>{intl.get('page.analytics.asset.position.put')}</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'b t'}><span className={'value'}>{UnderlyingAssetVO.totalIncomeQuantityShow}</span>  USDT</div>\n                            <div className={'b'}>{intl.get('page.analytics.asset.income.total')}</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'b t'}><span className={'value'}>{UnderlyingAssetVO.callIncomeQuantityShow}</span>  USDT</div>\n                            <div className={'b'}>{intl.get('page.analytics.asset.income.call')}</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'b t'}><span className={'value'}>{UnderlyingAssetVO.putIncomeQuantityShow}</span>  USDT</div>\n                            <div className={'b'}>{intl.get('page.analytics.asset.income.put')}</div>\n                        </Cell>\n                    </ResponsiveGrid>\n                </Cell>\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default UnderlyingAsset;\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx'\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport AnalyticsVO from \"./AnalyticsVO\";\nimport UnderlyingAssetVO from \"./UnderlyingAssetVO\";\nimport UnderwritingPoolVO from \"./UnderwritingPoolVO\";\nimport AnalyticsDAO from \"./AnalyticsDAO\";\n\nconst { Cell } = ResponsiveGrid;\n\n@observer\nclass UnderwritingPool extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(AnalyticsVO.coinName && WebThreeLoadEvent.isLoaded && UnderlyingAssetVO.currentPrice){\n                AnalyticsDAO.loadUnderlyingPool();\n            }\n        });\n\n        autorun(() => {\n            if(UnderlyingAssetVO.callAssetQuantityShow && UnderwritingPoolVO.callTotalAsset){\n                UnderwritingPoolVO.setCallAvailableAssetQuantityShow();\n            }\n        });\n\n        autorun(() => {\n            if(UnderlyingAssetVO.putAssetQuantityShow && UnderwritingPoolVO.putTotalAsset){\n                UnderwritingPoolVO.setPutAvailableAssetQuantityShow();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <ResponsiveGrid gap={20} className={'analytics_item analytics_pool'}>\n                <Cell className=\"grid-12 section_item section_title\" colSpan={12}>\n                    {intl.get('page.analytics.pool.title')}\n                </Cell>\n\n                <Cell className=\"grid-12 section_item section_pool_box\" colSpan={12}>\n                    <ResponsiveGrid gap={80} className={'pool_box'} columns={2}>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'title'}>{intl.get('page.analytics.pool.title.call')}</div>\n                            <div className={'chart_box'}>\n                                <div className={'chart_available'} style={UnderwritingPoolVO.getCallAvailableAssetQuantityStyle()}>\n                                </div>\n                                <div className={'chart'} style={UnderwritingPoolVO.getCallUtilizationRatioStyle()}></div>\n                            </div>\n                            <div className={'overview'}>\n                                <div className={'item'}>\n                                    <div className={'t'}>{UnderwritingPoolVO.callUtilizationRatio}%</div>\n                                    <div><span className={'d_ratio'}>{intl.get('page.analytics.pool.ratio')}</span></div>\n                                </div>\n                                <div className={'item m'}>\n                                    <div className={'t'}>{UnderwritingPoolVO.callAvailableAssetQuantityShow} {AnalyticsVO.coinName}</div>\n                                    <div><span className={'d_available'}>{intl.get('page.analytics.pool.available')}</span></div>\n                                </div>\n                                <div className={'item r'}>\n                                    <div className={'t'}>{UnderwritingPoolVO.callTotalAssetShow} {AnalyticsVO.coinName}</div>\n                                    <div><span className={'d_total'}>{intl.get('page.analytics.pool.total')}</span></div>\n                                </div>\n                            </div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item \" colSpan={1}>\n                            <div className={'title'}>{intl.get('page.analytics.pool.title.put')}</div>\n                            <div className={'chart_box'}>\n                                <div className={'chart_available'} style={UnderwritingPoolVO.getPutAvailableAssetQuantityStyle()}>\n                                </div>\n                                <div className={'chart'} style={UnderwritingPoolVO.getPutUtilizationRatioStyle()}></div>\n                            </div>\n                            <div className={'overview'}>\n                                <div className={'item'}>\n                                    <div className={'t'}>{UnderwritingPoolVO.putUtilizationRatio}%</div>\n                                    <div><span className={'d_ratio'}>{intl.get('page.analytics.pool.ratio')}</span></div>\n                                </div>\n                                <div className={'item m'}>\n                                    <div className={'t'}>{UnderwritingPoolVO.putAvailableAssetQuantityShow} {AnalyticsVO.coinName}</div>\n                                    <div><span className={'d_available'}>{intl.get('page.analytics.pool.available')}</span></div>\n                                </div>\n                                <div className={'item r'}>\n                                    <div className={'t'}>{UnderwritingPoolVO.putTotalAssetValueShow} USDT</div>\n                                    <div><span className={'d_total'}>{intl.get('page.analytics.pool.total')}</span></div>\n                                </div>\n                            </div>\n                        </Cell>\n                    </ResponsiveGrid>\n                </Cell>\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default UnderwritingPool;\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport {ConfigProvider, ResponsiveGrid, Table} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx'\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport UnderwritingPoolSnapshotVO from \"./UnderwritingPoolSnapshotVO\";\nimport AnalyticsVO from \"./AnalyticsVO\";\nimport AnalyticsDAO from \"./AnalyticsDAO\";\nimport UnderlyingAssetVO from \"./UnderlyingAssetVO\";\nimport CountdownTimer from \"../../../../components/Countdown/CountdownTimer\";\nimport {NextComponentLocaleConfig} from \"../../../../components\";\n\nconst { Cell } = ResponsiveGrid;\n\nconst setPoolDataCellProps = (rowIndex, colIndex, dataIndex, record) => {\n    if (colIndex == 6) {\n        return {\n            className: record[\"revenueStyle\"]\n        };\n    }else if(colIndex == 8) {\n        return {\n            className: record[\"countdownStyle\"]\n        };\n    }\n};\n\n@observer\nclass UnderwritingPoolSnapshot extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(AnalyticsVO.coinName && UnderlyingAssetVO.currentPrice && WebThreeLoadEvent.isLoaded){\n                AnalyticsDAO.loadUnderwritingPoolSnapshotData();\n            }\n        });\n\n        autorun(() => {\n            if(!UnderwritingPoolSnapshotVO.isLoading && CountdownTimer.round){\n                UnderwritingPoolSnapshotVO.refreshExpiryDate();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <ResponsiveGrid gap={20} className={'analytics_item analytics_pool_snapshot'}>\n                <Cell className=\"grid-12 section_item section_title\" colSpan={12}>\n                    {intl.get('page.analytics.snapshot.title')}\n                </Cell>\n\n                <Cell className=\"grid-12 section_item section_pool_snapshot_box\" colSpan={12}>\n                    <ConfigProvider locale={NextComponentLocaleConfig}>\n                        <Table dataSource={UnderwritingPoolSnapshotVO.poolData} cellProps={setPoolDataCellProps}>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.type')} dataIndex=\"poolType\" className={'type'}/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.duration')} dataIndex=\"durationShow\" className={'duration'}/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.position')} dataIndex=\"positionShow\"/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.available')} dataIndex=\"availableShow\" className={'available'}/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.strikePrice')} dataIndex=\"strikePriceShow\" />\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.currentPrice')} dataIndex=\"currentPriceShow\"/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.revenue')} dataIndex=\"revenueShow\"/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.expiryDate')} dataIndex=\"expiryDateShow\" className={'expiryDate'}/>\n                            <Table.Column title={intl.get('page.analytics.snapshot.table.title.countdown')} dataIndex=\"countdown\"/>\n                        </Table>\n                    </ConfigProvider>\n                </Cell>\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default UnderwritingPoolSnapshot;\n","import './index.scss';\n\nimport React from 'react';\nimport {ResponsiveGrid, Tab} from '@alifd/next';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport log from \"../../../../components/Log\";\n\nimport AnalyticsVO from './AnalyticsVO';\nimport UnderlyingAsset from './UnderlyingAsset';\nimport UnderwritingPool from './UnderwritingPool';\nimport UnderwritingPoolSnapshot from \"./UnderwritingPoolSnapshot\";\n\nconst {Cell} = ResponsiveGrid;\n\nconst onAnalyticsCoinChange = (key) => {\n    log.debug(`select ${key} ...`);\n    AnalyticsVO.setCoinName(key);\n};\n\nconst AnalyticsData = () => {\n    return (\n        <section className=\"section trading_container analytics_container\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={10}>\n                    <Cell className=\"grid-12 section_item\" colSpan={12}>\n                        <div className={'coin_switch'}>\n                            <Tab onChange={onAnalyticsCoinChange} defaultActiveKey={OptionTradingConfig.defaultCoin}>\n                                {OptionTradingConfig.coins.map(coin => (\n                                    <Tab.Item title={coin.name} key={coin.name} className={coin.icon}/>\n                                ))}\n                            </Tab>\n                        </div>\n                    </Cell>\n                </ResponsiveGrid>\n\n                <UnderlyingAsset/>\n                <UnderwritingPool/>\n                <UnderwritingPoolSnapshot/>\n            </div>\n        </section>\n    );\n};\n\nexport default AnalyticsData;\n","/* eslint react/no-string-refs:0 */\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Banner from './components/Banner';\nimport AnalyticsData from './components/AnalyticsData';\nimport HeaderVO from \"../../layouts/DefaultLayout/components/Header/HeaderVO\";\n\n@withRouter\nclass Analytics extends Component {\n    componentDidMount(){\n        HeaderVO.setCurrentNavKey('analytics');\n    }\n\n    render() {\n        return (\n            <div className=\"sections\">\n                <Banner/>\n\n                <AnalyticsData/>\n            </div>\n        );\n    }\n}\n\nexport default Analytics;\n","import Analytics from './Analytics';\n\nexport default Analytics;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass PoolRewardsVO {\n    @observable totalRewards = 0;\n\n    @observable dataArr = [];\n    @observable dataArrTemp = [];\n    @observable loadDataLength = 0;\n    @observable loadedDataLength = 0;\n    isLoading = false;\n\n    @action\n    reset(){\n        this.dataArrTemp = [];\n        this.loadDataLength=0;\n        this.loadedDataLength=0;\n        this.isLoading=true;\n    }\n\n    @action\n    setDataArr(dataArr){\n        this.dataArr=dataArr;\n    }\n\n    @action\n    addData(data){\n        this.dataArrTemp.push(data);\n\n        this.addLoadedDataLength(1);\n    }\n\n    @action\n    addLoadDataLength(length){\n        this.loadDataLength=this.loadDataLength+length;\n    }\n\n    @action\n    addLoadedDataLength(length){\n        this.loadedDataLength=this.loadedDataLength+length;\n\n        if(this.loadedDataLength == this.loadDataLength){\n            this.setLoading(false);\n            this.dataArr=this.dataArrTemp;\n\n            this.countTotalRewards();\n        }\n    }\n\n    @action\n    countTotalRewards(){\n        let total=0;\n        for (let poolRewardsData of this.dataArr) {\n            total+=poolRewardsData.callPoolRewardsShowNumber;\n            total+=poolRewardsData.putPoolRewardsShowNumber;\n        }\n        this.totalRewards=BigNumberConvert.toFormatDecimal(total,4);\n    }\n\n    @action\n    setLoading(isLoading){\n        this.isLoading=isLoading;\n    }\n}\n\nexport default new PoolRewardsVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass PoolRewardsData {\n    @observable asset = \"\";\n    @observable assetIcon = \"\";\n    @observable callPoolRewards = 0;\n    @observable callPoolRewardsShow = 0;\n    @observable callPoolRewardsShowNumber = 0;\n    @observable putPoolRewards = 0;\n    @observable putPoolRewardsShow = 0;\n    @observable putPoolRewardsShowNumber = 0;\n\n    @action\n    setAsset(asset){\n        this.asset=asset;\n    }\n\n    @action\n    setAssetIcon(assetIcon){\n        this.assetIcon=assetIcon;\n    }\n\n    @action\n    setCallPoolRewards(value){\n        this.callPoolRewards=value;\n        this.callPoolRewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.callPoolRewardsShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setPutPoolRewards(value){\n        this.putPoolRewards=value;\n        this.putPoolRewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.putPoolRewardsShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n}\n\nexport default PoolRewardsData;\n","import './index.scss';\n\nconst coinIconMap = {\n    OPA:'coin_icon_opa',\n    BTCB:'coin_icon_btc',\n    ETH:'coin_icon_eth',\n    BNB:'coin_icon_bnb',\n    USDT:'coin_icon_usdt'\n};\n\nconst getCoinIcon = (assetName) => {\n    return coinIconMap[assetName] || '';\n};\n\nexport default getCoinIcon;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass RedeemRewardsVO {\n    @observable show = false;\n    @observable asset = \"\";\n    @observable assetIcon = \"\";\n    @observable callPoolRewards = 0;\n    @observable callPoolRewardsShowNumber = 0;\n    @observable callPoolRewardsShow = 0;\n    @observable putPoolRewards = 0;\n    @observable putPoolRewardsShow = 0;\n    @observable putPoolRewardsShowNumber = 0;\n\n    @observable currentPool = 'callPoolContract';\n    @observable claimEnable = false;\n\n    @action\n    setWithPoolRewardsData(poolRewardsData){\n        this.setAsset(poolRewardsData.asset);\n        this.setAssetIcon(poolRewardsData.assetIcon);\n        this.setCallPoolRewards(poolRewardsData.callPoolRewards);\n        this.setPutPoolRewards(poolRewardsData.putPoolRewards);\n    }\n\n    @action\n    setShow(value){\n        this.show=value;\n    }\n\n    @action\n    setAsset(value){\n        this.asset=value;\n    }\n\n    @action\n    setAssetIcon(value){\n        this.assetIcon=value;\n    }\n\n    @action\n    setCallPoolRewards(value){\n        this.callPoolRewards=value;\n        this.callPoolRewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.callPoolRewardsShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setPutPoolRewards(value){\n        this.putPoolRewards=value;\n        this.putPoolRewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.putPoolRewardsShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setCurrentPool(value){\n        this.currentPool = value;\n    }\n\n    @action\n    checkClaimEnable(){\n        if(this.currentPool==='callPoolContract'){\n            this.claimEnable=this.callPoolRewardsShowNumber>0;\n        }else{\n            this.claimEnable=this.putPoolRewardsShowNumber>0;\n        }\n    }\n\n    @action\n    resetRewards(){\n        if(this.currentPool==='callPoolContract'){\n            this.setCallPoolRewards(0);\n        }else{\n            this.setPutPoolRewards(0);\n        }\n\n        this.checkClaimEnable();\n    }\n}\n\nexport default new RedeemRewardsVO();\n","import log from '../../../../components/Log';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport PoolRewardsData from \"./PoolRewardsData\";\nimport PoolRewardsVO from \"./PoolRewardsVO\";\nimport getCoinIcon from \"../Coin\";\nimport RedeemRewardsVO from \"./RedeemRewardsVO\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\n\nclass PoolRewardsDAO {\n    loadPoolRewards(){\n        log.debug(`loadPoolRewards...`);\n\n        PoolRewardsVO.reset();\n\n        let loadRewardsCallback=(poolRewards) => {\n            if(poolRewards.callPoolRewardsShow && poolRewards.putPoolRewardsShow){\n                PoolRewardsVO.addData(poolRewards);\n            }\n        };\n\n        PoolRewardsVO.addLoadDataLength(OptionTradingConfig.coins.length);\n\n        for(let coin of OptionTradingConfig.coins){\n            let poolRewards=new PoolRewardsData();\n            poolRewards.setAsset(coin.name);\n            let assetIcon=`coin_icon ${getCoinIcon(coin.name)}`;\n            poolRewards.setAssetIcon(assetIcon);\n\n            this.doLoadPoolRewards(coin.name, 'callPoolContract', (rewards) => {\n                poolRewards.setCallPoolRewards(rewards);\n                loadRewardsCallback(poolRewards);\n            });\n\n            this.doLoadPoolRewards(coin.name, 'putPoolContract', (rewards) => {\n                poolRewards.setPutPoolRewards(rewards);\n                loadRewardsCallback(poolRewards);\n            });\n        }\n    }\n\n    doLoadPoolRewards(coinName, optionType, callBack){\n        log.debug(`loadPoolRewards [coinName=${coinName},optionType=${optionType}] ...`);\n\n        if(!OptionTradingConfig.contractConfig[coinName] || !OptionTradingConfig.contractConfig[coinName][optionType] || !OptionTradingConfig.contractConfig[coinName][optionType].address()){\n            return;\n        }\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .checkOPA(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`loadPoolRewards => checkOPA(${currentAccountStorage.account}) => result [coinName=${coinName}, optionType=${optionType}, pool=${contractAddress}, opa=${result}]`);\n                callBack(result);\n            });\n    }\n\n    claimPoolRewards(){\n        log.debug(`claimPoolRewards [coinName=${RedeemRewardsVO.asset},optionType=${RedeemRewardsVO.currentPool}] ...`);\n\n        let handler=this;\n\n        let coinName=RedeemRewardsVO.asset, optionType=RedeemRewardsVO.currentPool;\n\n        if(!OptionTradingConfig.contractConfig[coinName] || !OptionTradingConfig.contractConfig[coinName][optionType] || !OptionTradingConfig.contractConfig[coinName][optionType].address()){\n            return;\n        }\n\n        let contractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .claimOPA()\n            .send({\n                from: currentAccountStorage.account,\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                RedeemRewardsVO.resetRewards();\n                DialogBoxVO.success();\n                AssetBalance.refresh();\n\n                handler.loadPoolRewards();\n            });\n    }\n}\n\nexport default new PoolRewardsDAO();\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, Input, Radio, Overlay, ResponsiveGrid} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\n\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport PoolRewardsDAO from \"./PoolRewardsDAO\";\nimport RedeemRewardsVO from \"./RedeemRewardsVO\";\n\nconst {Cell} = ResponsiveGrid;\nconst RadioGroup = Radio.Group;\n\n\nconst closePoolRewardsDialog=()=>{\n    RedeemRewardsVO.setShow(false);\n};\n\nconst claimPoolRewards = () => {\n    log.debug(`claimPoolRewards...`);\n    PoolRewardsDAO.claimPoolRewards();\n};\n\nconst poolItemClick = (pool) => {\n    RedeemRewardsVO.setCurrentPool(pool);\n    RedeemRewardsVO.checkClaimEnable();\n};\n\n@observer\nclass RedeemRewards extends Component {\n    render() {\n        return (\n            <Overlay visible={RedeemRewardsVO.show}\n                // safeNode={() => this.btn}\n                     align=\"cc cc\"\n                     hasMask\n                     disableScroll className={'overlay_container opa_pop_windows'}>\n                <div>\n                    <div className={'item title'}>REDEEM REWARDS</div>\n                    <div className={'item'}>My Wallet Address</div>\n                    <div className={'item'}>\n                        <Input\n                            disabled\n                            aria-label=\"disabled\"\n                            className={'f_input'}\n                            value={currentAccountStorage.account}\n                        />\n                    </div>\n\n                    <div className={'item coin_item'}>\n                        <span className={RedeemRewardsVO.assetIcon}></span>\n                        <span className={'asset'}>{RedeemRewardsVO.asset}</span>\n                    </div>\n\n                    <div className={'item pool_rewards_item_box'}>\n                        <RadioGroup\n                            shape=\"button\"\n                            size=\"large\"\n                            value={RedeemRewardsVO.currentPool}\n                            onChange={poolItemClick}\n                        >\n                            <Radio id=\"callPoolContract\" value=\"callPoolContract\">\n                                <div className={'pool'}>Call Option Underwriting Pool</div>\n                                <div className={'rewards_box'}>\n                                    <span className={'rewards'}>{RedeemRewardsVO.callPoolRewardsShow}</span>\n                                    <span className={'unit'}>OPA</span>\n                                </div>\n                            </Radio>\n                            <Radio id=\"putPoolContract\" value=\"putPoolContract\">\n                                <div className={'pool'}>Put Option Underwriting Pool</div>\n                                <div className={'rewards_box'}>\n                                    <span className={'rewards'}>{RedeemRewardsVO.putPoolRewardsShow}</span>\n                                    <span className={'unit'}>OPA</span>\n                                </div>\n                            </Radio>\n                        </RadioGroup>\n                    </div>\n\n                    <div className={'item sub_btn_box sub_box_pool'}>\n                        <Button type=\"primary\" size=\"large\" onClick={closePoolRewardsDialog}  className=\"sub_btn cancel\">CANCEL</Button>\n                        <Button type=\"primary\" size=\"large\" onClick={claimPoolRewards} disabled={!RedeemRewardsVO.claimEnable} className=\"sub_btn confirm\">CLAIM</Button>\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n};\n\nexport default RedeemRewards;\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, ConfigProvider, ResponsiveGrid, Table} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport {NextComponentLocaleConfig} from \"../../../../components\";\nimport PoolRewardsVO from \"./PoolRewardsVO\";\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport PoolRewardsDAO from \"./PoolRewardsDAO\";\nimport RedeemRewardsVO from \"./RedeemRewardsVO\";\nimport RedeemRewards from \"./RedeemRewards\";\nimport IfConnectedWallet from \"../../../../components/ConnectWallet/IfConnectedWallet\";\n\nconst poolRewardRedeem = (poolRewardsData) => {\n    log.debug(poolRewardsData);\n    RedeemRewardsVO.setWithPoolRewardsData(poolRewardsData);\n    RedeemRewardsVO.checkClaimEnable();\n    RedeemRewardsVO.setShow(true);\n};\n\n\nconst poolCoinRender = (value, index, record) => {\n    return <div className={'asset_cell'}>\n        <span className={record.assetIcon}></span>\n        <span className={'asset'}>{record.asset}</span>\n    </div>;\n};\n\nconst callPoolRender = (value, index, record) => {\n    return <div>\n        <span>{record.callPoolRewardsShow}</span>\n        <span className={'unit'}>OPA</span>\n    </div>;\n};\n\nconst putPoolRender = (value, index, record) => {\n    return <div>\n        <span>{record.putPoolRewardsShow}</span>\n        <span className={'unit'}>OPA</span>\n    </div>;\n};\n\nconst poolRewardsOperationRender = (value, index, record) => {\n    return <Button type=\"primary\" onClick={poolRewardRedeem.bind(this,record)} size=\"small\" className=\"sub_btn sub_btn_short\">REDEEM REWARDS</Button>;\n};\n\n@observer\nclass PoolRewards extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                PoolRewardsDAO.loadPoolRewards();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <IfConnectedWallet>\n                <section className=\"section opa_p_container\">\n                    <div className=\"section_container\">\n                        <RedeemRewards/>\n\n                        <div className={'opa_total total_value'}>\n                            <span className={'value'}>{PoolRewardsVO.totalRewards}</span> <span className={'unit'}>OPA</span>\n                        </div>\n                        <div className={'opa_total'}>\n                            My OPA Reward from Pooled Underwriting\n                        </div>\n\n                        <ConfigProvider locale={NextComponentLocaleConfig}>\n                            <Table dataSource={PoolRewardsVO.dataArr} className={'rewards_table'}>\n                                <Table.Column dataIndex=\"asset\" className={''} cell={poolCoinRender}/>\n                                <Table.Column title={'Call Option Underwriting Pool'} cell={callPoolRender} className={''}/>\n                                <Table.Column title={'Put Option Underwriting Pool'} cell={putPoolRender} className={''}/>\n                                <Table.Column title={'Action'} cell={poolRewardsOperationRender}/>\n                            </Table>\n                        </ConfigProvider>\n                    </div>\n                </section>\n            </IfConnectedWallet>\n        );\n    }\n};\n\nexport default PoolRewards;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass PopStakeVO {\n    @observable show = false;\n    @observable title = \"\";\n    @observable asset = \"\";\n    @observable assetDes = \"\";\n    @observable assetUnit = \"\";\n    @observable stakeAsset = \"\";\n    @observable maxStake = 0;\n    @observable maxStakeShow = 0;\n    @observable maxStakeShowNumber = 0;\n    @observable stakeAmount = 0;\n    @observable stakeAmountBN = 0;\n\n    @observable providerLiquidityUrl = '';\n\n    // 'DAO' or 'LP'\n    @observable popEventSource = '';\n    @observable popEventTimestamp = '';\n\n    @observable submitEnable = false;\n\n    @action\n    setTitle(value) {\n        this.title = value;\n    }\n\n    @action\n    setShow(value) {\n        this.show = value;\n    }\n\n    @action\n    setAsset(value) {\n        this.asset = value;\n    }\n\n    @action\n    setAssetDes(value) {\n        this.assetDes = value;\n    }\n\n    @action\n    setAssetUnit(value) {\n        this.assetUnit = value;\n    }\n\n    @action\n    setStakeAsset(value) {\n        this.stakeAsset = value;\n    }\n\n    @action\n    setMaxStake(value) {\n        this.maxStake = value;\n        this.maxStakeShow=BigNumberConvert.toShowValueFormatDecimalSmall(value,this.stakeAsset, 4);\n        this.maxStakeShowNumber=BigNumberConvert.toShowNumberDecimalAssetSmall(value,this.stakeAsset, 4);\n        if(this.maxStakeShowNumber < 1){\n            this.setStakeAmount(this.maxStakeShowNumber);\n        }else{\n            this.setStakeAmount(1);\n        }\n    }\n\n    @action\n    setStakeAmount(value) {\n        this.stakeAmount = value;\n        this.stakeAmountBN = BigNumberConvert.toPrimitiveValue(value, this.stakeAsset);\n\n        this.submitEnable=this.maxStakeShowNumber>0 && value>0;\n    }\n\n    @action\n    setProviderLiquidityUrl(value) {\n        this.providerLiquidityUrl = value;\n    }\n\n    @action\n    setPopEventSource(value) {\n        this.popEventSource = value;\n        this.setPopEventTimestamp(0);\n    }\n\n    @action\n    setPopEventTimestamp(value) {\n        this.popEventTimestamp = value;\n    }\n\n    @action\n    triggerSubmitEvent() {\n        this.setPopEventTimestamp((new Date()).getTime());\n    }\n}\n\nexport default new PopStakeVO();\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, Input, Overlay, NumberPicker} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport PopStakeVO from \"./PopStakeVO\";\nimport ConditionDisplay from \"../../../../components/ConditionDisplay\";\n\n\nconst closePopStakeDialog=()=>{\n    PopStakeVO.setShow(false);\n};\n\nconst stakeAmountChange = (value) => {\n    PopStakeVO.setStakeAmount(value);\n};\n\nconst stake = ()=>{\n    log.debug(`stake...`);\n    PopStakeVO.triggerSubmitEvent();\n};\n\n@observer\nclass PopStake extends Component {\n    render() {\n        return (\n            <Overlay visible={PopStakeVO.show}\n                // safeNode={() => this.btn}\n                     align=\"cc cc\"\n                     hasMask\n                     disableScroll className={'overlay_container opa_pop_windows opa_stake_pop_windows'}>\n                <div>\n                    <div className={'item title'}>{PopStakeVO.title}</div>\n                    <div className={'item'}>My Wallet Address</div>\n                    <div className={'item'}>\n                        <Input\n                            disabled\n                            aria-label=\"disabled\"\n                            className={'f_input'}\n                            value={currentAccountStorage.account}\n                        />\n                    </div>\n\n                    <div className={'item'}>Stake</div>\n                    <div className={'item'}>\n                        <NumberPicker\n                            innerAfter={PopStakeVO.assetUnit}\n                            className={'f_input f_input_long'}\n                            value={PopStakeVO.stakeAmount}\n                            step={1}\n                            precision={18}\n                            min={0}\n                            max={PopStakeVO.maxStakeShowNumber}\n                            onChange={stakeAmountChange}\n                            hasTrigger={false}\n                        />\n                    </div>\n                    <div className={'item'}>Maximum Available: <span className={'asset_value'}>{PopStakeVO.maxStakeShow}</span> <span className={'asset_unit'}>{PopStakeVO.assetUnit}</span></div>\n\n                    <div className={'item sub_btn_box'}>\n                        <Button type=\"primary\" size=\"large\" onClick={closePopStakeDialog} className=\"sub_btn cancel\">CANCEL</Button>\n                        <Button type=\"primary\" size=\"large\" onClick={stake} disabled={!PopStakeVO.submitEnable} className=\"sub_btn confirm\">CONFIRM</Button>\n                    </div>\n\n                    <ConditionDisplay display={PopStakeVO.providerLiquidityUrl}>\n                        <div className={'item sub_btn_box sub_box_pl'}>\n                            <a href={PopStakeVO.providerLiquidityUrl} target={'_blank'} className={'pl_btn'}>PROVIDE LIQUIDITY</a>\n                        </div>\n                    </ConditionDisplay>\n                </div>\n            </Overlay>\n        );\n    }\n};\n\nexport default PopStake;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass PopClaimVO {\n    @observable show = false;\n    @observable title = \"REDEEM REWARDS\";\n    @observable rewardsFrom = \"\";\n    @observable rewards = 0;\n    @observable rewardsShow = 0;\n\n    // 'DAO' or 'LP'\n    @observable popEventSource = '';\n    @observable popEventTimestamp = '';\n\n    @observable submitEnable = false;\n\n    @action\n    setShow(show){\n        this.show=show;\n    }\n\n    @action\n    setTitle(value) {\n        this.title = value;\n    }\n\n    @action\n    setTitle(value) {\n        this.title = value;\n    }\n\n    @action\n    setRewardsFrom(value) {\n        this.rewardsFrom = value;\n    }\n\n    @action\n    setRewards(value) {\n        this.rewards = value;\n        this.rewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.submitEnable=this.rewards>0;\n    }\n\n    @action\n    setPopEventSource(value) {\n        this.popEventSource = value;\n        this.setPopEventTimestamp(0);\n    }\n\n    @action\n    setPopEventTimestamp(value) {\n        this.popEventTimestamp = value;\n    }\n\n    @action\n    triggerSubmitEvent() {\n        this.setPopEventTimestamp((new Date()).getTime());\n    }\n}\n\nexport default new PopClaimVO();\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, Input, Overlay, NumberPicker} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport PopClaimVO from \"./PopClaimVO\";\n\nconst closePopClaimDialog=()=>{\n    PopClaimVO.setShow(false);\n};\n\nconst stakeRewardsClaim = ()=>{\n    log.debug(`claim...`);\n    PopClaimVO.triggerSubmitEvent();\n};\n\n@observer\nclass PopClaim extends Component {\n    render() {\n        return (\n            <Overlay visible={PopClaimVO.show}\n                // safeNode={() => this.btn}\n                     align=\"cc cc\"\n                     hasMask\n                     disableScroll className={'overlay_container opa_pop_windows opa_claim_pop_windows'}>\n                <div>\n                    <div className={'item title'}>{PopClaimVO.title}</div>\n                    <div className={'item'}>My Wallet Address</div>\n                    <div className={'item'}>\n                        <Input\n                            disabled\n                            aria-label=\"disabled\"\n                            className={'f_input'}\n                            value={currentAccountStorage.account}\n                        />\n                    </div>\n\n                    <div className={'item'}>{PopClaimVO.rewardsFrom}</div>\n                    <div className={'item rewards_box'}>\n                        <span className={'asset_value'}>{PopClaimVO.rewardsShow}</span>\n                        <span className={'asset_unit'}>OPA</span>\n                    </div>\n\n                    <div className={'item sub_btn_box'}>\n                        <Button type=\"primary\" size=\"large\" onClick={closePopClaimDialog} className=\"sub_btn cancel\">CANCEL</Button>\n                        <Button type=\"primary\" size=\"large\" onClick={stakeRewardsClaim} disabled={!PopClaimVO.submitEnable} className=\"sub_btn confirm\">CLAIM</Button>\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n};\n\nexport default PopClaim;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass PopWithdrawVO {\n    @observable show = false;\n    @observable title = \"\";\n    @observable withdrawAmountBN = 0;\n    @observable assetDes = \"\";\n    @observable assetUnit = \"\";\n    @observable stakeAsset = \"\";\n    @observable maxWithdraw = 0;\n    @observable maxWithdrawShow = 0;\n    @observable maxWithdrawShowNumber = 0;\n    @observable withdrawAmount = 0;\n    @observable withdrawAmountBN = 0;\n\n    // 'DAO' or 'LP'\n    @observable popEventSource = '';\n    @observable popEventTimestamp = '';\n\n    @observable submitEnable = false;\n\n    @action\n    setShow(show){\n        this.show=show;\n    }\n\n    @action\n    setTitle(value) {\n        this.title = value;\n    }\n\n    @action\n    setAssetDes(value) {\n        this.assetDes = value;\n    }\n\n    @action\n    setAssetUnit(value) {\n        this.assetUnit = value;\n    }\n\n    @action\n    setStakeAsset(value) {\n        this.stakeAsset = value;\n    }\n\n    @action\n    setMaxWithdraw(value) {\n        this.maxWithdraw = value;\n        this.maxWithdrawShow=BigNumberConvert.toShowValueFormatDecimalSmall(value,this.stakeAsset, 4);\n        this.maxWithdrawShowNumber=BigNumberConvert.toShowNumberDecimalAssetSmall(value,this.stakeAsset, 4);\n\n        if(this.maxWithdrawShowNumber < 1){\n            this.setWithdrawAmount(this.maxWithdrawShowNumber);\n        }else{\n            this.setWithdrawAmount(1);\n        }\n\n        this.submitEnable=this.maxWithdrawShowNumber>0;\n    }\n\n    @action\n    setWithdrawAmount(value) {\n        this.withdrawAmount = value;\n        this.withdrawAmountBN = BigNumberConvert.toPrimitiveValue(value, this.stakeAsset);\n\n        this.submitEnable=this.maxWithdrawShowNumber>0 && value>0;\n    }\n\n    @action\n    setPopEventSource(value) {\n        this.popEventSource = value;\n        this.setPopEventTimestamp(0);\n    }\n\n    @action\n    setPopEventTimestamp(value) {\n        this.popEventTimestamp = value;\n    }\n\n    @action\n    triggerSubmitEvent() {\n        this.setPopEventTimestamp((new Date()).getTime());\n    }\n}\n\nexport default new PopWithdrawVO();\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, Input, Overlay, NumberPicker} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport PopWithdrawVO from \"./PopWithdrawVO\";\n\nconst closePopWithdrawDialog=()=>{\n    PopWithdrawVO.setShow(false);\n};\n\nconst withdrawAmountChange = (value) => {\n    PopWithdrawVO.setWithdrawAmount(value);\n};\n\nconst opaPopWithdraw = ()=>{\n    log.debug(`withdraw...`);\n    PopWithdrawVO.triggerSubmitEvent();\n};\n\n@observer\nclass PopWithdraw extends Component {\n    render() {\n        return (\n            <Overlay visible={PopWithdrawVO.show}\n                // safeNode={() => this.btn}\n                     align=\"cc cc\"\n                     hasMask\n                     disableScroll className={'overlay_container opa_pop_windows opa_withdraw_pop_windows'}>\n                <div>\n                    <div className={'item title'}>{PopWithdrawVO.title}</div>\n                    <div className={'item'}>My Wallet Address</div>\n                    <div className={'item'}>\n                        <Input\n                            disabled\n                            aria-label=\"disabled\"\n                            className={'f_input'}\n                            value={currentAccountStorage.account}\n                        />\n                    </div>\n\n                    <div className={'item'}>{PopWithdrawVO.assetDes}</div>\n                    <div className={'item'}>\n                        <NumberPicker\n                            innerAfter={PopWithdrawVO.assetUnit}\n                            className={'f_input f_input_long'}\n                            value={PopWithdrawVO.withdrawAmount}\n                            step={1}\n                            precision={18}\n                            min={0}\n                            max={PopWithdrawVO.maxWithdrawShowNumber}\n                            onChange={withdrawAmountChange}\n                            hasTrigger={false}\n                        />\n                    </div>\n                    <div className={'item'}>Maximum Available: <span className={'asset_value'}>{PopWithdrawVO.maxWithdrawShow}</span> <span className={'asset_unit'}>{PopWithdrawVO.assetUnit}</span></div>\n\n                    <div className={'item sub_btn_box'}>\n                        <Button type=\"primary\" size=\"large\" onClick={closePopWithdrawDialog} className=\"sub_btn cancel\">CANCEL</Button>\n                        <Button type=\"primary\" size=\"large\" onClick={opaPopWithdraw} disabled={!PopWithdrawVO.submitEnable} className=\"sub_btn confirm\">CONFIRM</Button>\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n};\n\nexport default PopWithdraw;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport BigNumber from \"bignumber.js\";\n\nclass OPAStatsVO {\n    @observable price = 0;\n    @observable priceShow = 0;\n    @observable priceShowNumber = 0;\n    @observable marketCap = 0;\n    @observable circSupply = 0;\n    @observable circSupplyShow = '';\n    @observable circSupplyShowNumber = 0;\n\n    @action\n    setPrice(value){\n        this.price=value;\n        this.priceShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.priceShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n\n        let marketCapValue=new BigNumber(this.priceShowNumber).times(this.circSupplyShowNumber);\n        this.marketCap=BigNumberConvert.toFormatDecimal(marketCapValue,2);\n    }\n\n    @action\n    setCircSupply(value){\n        this.circSupply=value;\n        this.circSupplyShow=BigNumberConvert.toFormat(value);\n        this.circSupplyShowNumber=value;\n    }\n}\n\nexport default new OPAStatsVO();\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport OPAStatsVO from \"../OPAStats/OPAStatsVO\";\n\nclass DAOStakingVO {\n    @observable totalStaked = 0;\n    @observable totalStakedShow = 0;\n    @observable totalStakedShowNumber = 0;\n\n    @observable totalStakedValue = 0;\n\n    @observable myDaoStaked = 0;\n    @observable myDaoStakedShow = 0;\n    @observable myDaoStakedShowNumber = 0;\n\n    @observable myDaoRewards = 0;\n    @observable myDaoRewardsShow = 0;\n\n    @observable myDaoApr = 0;\n\n    @action\n    setTotalStaked(value){\n        this.totalStaked=value;\n        this.totalStakedShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.totalStakedShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setTotalStakedValue(){\n        let value = this.totalStakedShowNumber * OPAStatsVO.price;\n        this.totalStakedValue=BigNumberConvert.toShowValueFormatDecimalUSDT(value);\n    }\n\n    @action\n    setMyDaoStaked(value){\n        this.myDaoStaked=value;\n        this.myDaoStakedShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.myDaoStakedShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setMyDaoRewards(value){\n        this.myDaoRewards=value;\n        this.myDaoRewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n    }\n\n    @action\n    setMyDaoApr(value){\n        this.myDaoApr=value;\n    }\n}\n\nexport default new DAOStakingVO();\n","import log from \"../../../../components/Log\";\nimport DAOStakingVO from \"./DAOStakingVO\";\nimport OptionTradingConfig from \"../../../../etherscan/OptionTradingConfig\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport PopStakeVO from \"../PopStake/PopStakeVO\";\nimport AssetApprove from \"../../../../components/AssetApprove\";\nimport BigNumber from \"bignumber.js\";\nimport PopClaimVO from \"../PopClaim/PopClaimVO\";\nimport PopWithdrawVO from \"../PopWithdraw/PopWithdrawVO\";\nimport ApplicationConfig from \"../../../../ApplicationConfig\";\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\n\nclass DAOStakingDAO {\n    loadDAOStakingData(){\n        log.debug(`loadDAOStakingData...`);\n\n        this.loadDAOTotalStaked();\n        this.loadMyDAOStaked();\n        this.loadMyDAORewards();\n    }\n\n    loadDAOTotalStaked(){\n        log.debug(`loadDAOTotalStaked ...`);\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .totalStaked()\n            .call()\n            .then((result) => {\n                log.debug(`loadDAOTotalStaked => [result=${result}]`);\n\n                DAOStakingVO.setTotalStaked(result);\n            });\n    }\n\n    loadMyDAOStaked(){\n        log.debug(`loadMyDAOStaked ...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .numStaked(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`loadMyDAOStaked => [result=${result}]`);\n\n                DAOStakingVO.setMyDaoStaked(result);\n\n                handler.loadMyDAOAPR();\n            });\n    }\n\n    loadMyDAOAPR(){\n        if(DAOStakingVO.myDaoStakedShowNumber && DAOStakingVO.totalStakedShowNumber){\n            this.loadOPABlockReward(opaBlockReward => {\n                let opaRewardsDay = new BigNumber(DAOStakingVO.myDaoStakedShowNumber).times(opaBlockReward).div(DAOStakingVO.totalStakedShowNumber);\n                log.info(`loadMyDAOAPR [myDaoStakedShowNumber=${DAOStakingVO.myDaoStakedShowNumber}, totalStakedShowNumber=${DAOStakingVO.totalStakedShowNumber}, opaOutputDay=${opaBlockReward}, opaRewardsDay=${opaRewardsDay}]`);\n\n                let apr=new BigNumber(opaRewardsDay).times(365).times(100).div(DAOStakingVO.myDaoStakedShowNumber);\n                apr=BigNumberConvert.toFormatDecimal(apr,2);\n\n                log.info(`loadMyDAOAPR result => ${apr}`);\n\n                DAOStakingVO.setMyDaoApr(apr);\n            });\n        }\n    }\n\n    loadOPABlockReward(callback){\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods['OPABlockReward']\n            .call(contract.methods)\n            .call()\n            .then((result) => {\n                log.info(`loadOPABlockReward => [result=${result}]`);\n\n                let opaBlockReward=BigNumberConvert.toShowNumberDecimalOPA(result);\n                opaBlockReward=opaBlockReward * 20 * 60 * 24;\n                callback(opaBlockReward);\n            });\n    }\n\n    loadMyDAORewards(){\n        log.debug(`loadMyDAORewards ...`);\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .checkReward(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`loadMyDAORewards => [result=${result}]`);\n\n                DAOStakingVO.setMyDaoRewards(result);\n            });\n    }\n\n    daoStake(){\n        log.debug(`daoStake...`);\n\n        let handler=this;\n        DialogBoxVO.confirm();\n\n        let contractConfig=OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n\n        let allowance=AssetApprove.getContractAllowance(contractAddress);\n        let allowanceNb=new BigNumber(allowance);\n        let defaultApproveThresholdNb=new BigNumber(OptionTradingConfig.getDefaultApproveThreshold());\n        log.debug(`allowanceNb => ${allowanceNb.toFormat()}`);\n        log.debug(`defaultApproveThresholdNb => ${defaultApproveThresholdNb.toFormat()}`);\n\n        let isNeedApprove=allowanceNb.lt(defaultApproveThresholdNb);\n        log.debug(`isNeedApprove => ${isNeedApprove}`);\n        if(isNeedApprove){\n            AssetApprove.approve(contractAddress, ()=>{\n                handler.doDAOStake();\n            },'OPA');\n        }else{\n            handler.doDAOStake();\n        }\n    }\n\n    doDAOStake(){\n        log.debug(`doDAOStake [amount=${PopStakeVO.stakeAmount} <=> ${PopStakeVO.stakeAmountBN}]...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .stake(PopStakeVO.stakeAmountBN)\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                PopStakeVO.setPopEventTimestamp(0);\n\n                AssetBalance.refresh();\n                AssetApprove.refresh(\"OPA\");\n\n                let maxStakeNew=PopStakeVO.maxStake-PopStakeVO.stakeAmountBN;\n                PopStakeVO.setMaxStake(maxStakeNew);\n\n                handler.loadDAOStakingData();\n            });\n    }\n\n    daoClaim(){\n        log.debug(`daoClaim...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .claimRewards()\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                PopClaimVO.setPopEventTimestamp(0);\n                PopClaimVO.setRewards(0);\n\n                handler.loadDAOStakingData();\n                AssetBalance.refresh();\n            });\n    }\n\n    daoWithdraw(){\n        log.debug(`daoWithdraw [amount=${PopWithdrawVO.withdrawAmount} <=> ${PopWithdrawVO.withdrawAmountBN}]...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address('DAO');\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .withdraw(PopWithdrawVO.withdrawAmountBN)\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                PopWithdrawVO.setPopEventTimestamp(0);\n\n                AssetBalance.refresh();\n\n                let maxWithdrawNew=PopWithdrawVO.maxWithdraw-PopWithdrawVO.withdrawAmountBN;\n                PopWithdrawVO.setMaxWithdraw(maxWithdrawNew);\n\n                handler.loadDAOStakingData();\n            });\n    }\n}\n\nexport default new DAOStakingDAO();\n","import {action, observable} from 'mobx';\n\nclass PopConnectWalletVO {\n    @observable show = false;\n\n    @action\n    setShow(show){\n        this.show=show;\n    }\n}\n\nexport default new PopConnectWalletVO();\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, Overlay} from '@alifd/next';\n\nimport {observer} from \"mobx-react\";\nimport PopConnectWalletVO from \"./PopConnectWalletVO\";\nimport ConnectWallet from \"../../../../components/ConnectWallet/ConnectWallet\";\n\nconst closePopConnectDialog=()=>{\n    PopConnectWalletVO.setShow(false);\n};\n\n@observer\nclass PopConnectWallet extends Component {\n    render() {\n        return (\n            <Overlay visible={PopConnectWalletVO.show}\n                // safeNode={() => this.btn}\n                     align=\"cc cc\"\n                     hasMask\n                     disableScroll className={'overlay_container opa_pop_windows opa_connect_wallet_pop_windows'}>\n                <div>\n                    <div className={'item title'}>Connect Wallet</div>\n                    <div className={'item connect_tips'}>Please connect a wallet to start using this Dapp.</div>\n                    <div className={'item sub_btn_box'}>\n                        <Button type=\"primary\" size=\"large\" onClick={closePopConnectDialog} className=\"sub_btn cancel\">CANCEL</Button>\n                        <ConnectWallet customBtnClass={'confirm'}/>\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n};\n\nexport default PopConnectWallet;\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, ResponsiveGrid} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport PopStakeVO from \"../PopStake/PopStakeVO\";\nimport PopStake from \"../PopStake\";\nimport PopClaimVO from \"../PopClaim/PopClaimVO\";\nimport PopClaim from \"../PopClaim\";\nimport PopWithdraw from \"../PopWithdraw\";\nimport PopWithdrawVO from \"../PopWithdraw/PopWithdrawVO\";\nimport DAOStakingVO from \"./DAOStakingVO\";\nimport OPAStatsVO from \"../OPAStats/OPAStatsVO\";\nimport DAOStakingDAO from \"./DAOStakingDAO\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport PopConnectWalletVO from \"../PopConnectWallet/PopConnectWalletVO\";\nimport PopConnectWallet from \"../PopConnectWallet\";\n\nconst { Cell } = ResponsiveGrid;\n\nconst opaStake = ()=>{\n    if (currentAccountStorage.account) {\n        PopStakeVO.setTitle('STAKE OPA TOKEN');\n        PopStakeVO.setAsset('OPA');\n        PopStakeVO.setAssetUnit('OPA');\n        PopStakeVO.setStakeAsset('OPA');\n\n        let balance=AssetBalance.getAssetBalance(PopStakeVO.stakeAsset);\n        log.debug(`balance of ${PopStakeVO.stakeAsset} => ${balance}`);\n        PopStakeVO.setMaxStake(balance);\n\n        PopStakeVO.setPopEventSource('DAO');\n        PopStakeVO.setShow(true);\n    } else {\n        PopConnectWalletVO.setShow(true);\n    }\n};\n\nconst opaClaim = ()=>{\n    if (currentAccountStorage.account) {\n        PopClaimVO.setRewardsFrom('OPA DAO Staking');\n        PopClaimVO.setRewards(DAOStakingVO.myDaoRewards);\n        PopClaimVO.setPopEventSource('DAO');\n        PopClaimVO.setShow(true);\n    } else {\n        PopConnectWalletVO.setShow(true);\n    }\n};\n\nconst opaWithdraw = ()=>{\n    if (currentAccountStorage.account) {\n        PopWithdrawVO.setTitle('WITHDRAW OPA TOKEN');\n        PopWithdrawVO.setAssetDes('OPA DAO Staking');\n        PopWithdrawVO.setAssetUnit('OPA');\n        PopWithdrawVO.setStakeAsset('OPA');\n\n        PopWithdrawVO.setMaxWithdraw(DAOStakingVO.myDaoStaked);\n        PopWithdrawVO.setPopEventSource('DAO');\n        PopWithdrawVO.setShow(true);\n    } else {\n        PopConnectWalletVO.setShow(true);\n    }\n};\n\n@observer\nclass DAOStaking extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                PopConnectWalletVO.setShow(false);\n                DAOStakingDAO.loadDAOStakingData();\n            }\n        });\n\n        autorun(() => {\n            if(DAOStakingVO.totalStakedShow && OPAStatsVO.priceShow){\n                DAOStakingVO.setTotalStakedValue();\n                DAOStakingDAO.loadMyDAOAPR();\n            }\n        });\n\n        autorun(() => {\n            if(PopStakeVO.popEventSource == 'DAO' && PopStakeVO.popEventTimestamp){\n                DAOStakingDAO.daoStake();\n            }\n        });\n\n        autorun(() => {\n            if(PopClaimVO.popEventSource == 'DAO' && PopClaimVO.popEventTimestamp){\n                DAOStakingDAO.daoClaim();\n            }\n        });\n\n        autorun(() => {\n            if(PopWithdrawVO.popEventSource == 'DAO' && PopWithdrawVO.popEventTimestamp){\n                DAOStakingDAO.daoWithdraw();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"section opa_dao_container\">\n                <PopConnectWallet/>\n                <PopStake/>\n                <PopClaim/>\n                <PopWithdraw/>\n                <div className=\"section_container\">\n                    <div className={'opa_section_title'}>OPA DAO Staking</div>\n\n                    <ResponsiveGrid gap={0} className={'dao_staking_box'} columns={3}>\n                        <Cell className=\"grid-3 section_item staking_header\" colSpan={3}>\n                            <span className={'coin_icon coin_icon_opa'}></span>\n                            <span>Total Staked</span>\n                            <span className={'total'}>{DAOStakingVO.totalStakedShow}</span>\n                            <span className={'total_unit'}>OPA</span>\n                            <span className={'total_value'}>≈ $ {DAOStakingVO.totalStakedValue}</span>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item staking_item\" colSpan={1}>\n                            <div>\n                                <span className={'value'}>{DAOStakingVO.myDaoStakedShow}</span>\n                                <span className={'unit'}>OPA</span>\n                            </div>\n                            <div className={'item_name'}>Staked</div>\n                            <div>\n                                <Button type=\"primary\" size=\"large\" onClick={opaStake} className=\"sub_btn\">STAKE OPA TOKEN</Button>\n                            </div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item staking_item\" colSpan={1}>\n                            <div>\n                                <span className={'value'}>{DAOStakingVO.myDaoRewardsShow}</span>\n                                <span className={'unit'}>OPA</span>\n                            </div>\n                            <div className={'item_name'}>Rewards</div>\n                            <div>\n                                <Button type=\"primary\" size=\"large\" onClick={opaClaim} className=\"sub_btn sub_btn_short\">REDEEM REWARDS</Button>\n                            </div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item staking_item\" colSpan={1}>\n                            <div>\n                                <span className={'value'}>{DAOStakingVO.myDaoApr}</span>\n                                <span className={'unit'}>%</span>\n                            </div>\n                            <div className={'item_name'}>Reward APR</div>\n                            <div>\n                                <Button type=\"primary\" size=\"large\" onClick={opaWithdraw} className=\"sub_btn sub_btn_short\">WITHDRAW OPA TOKEN</Button>\n                            </div>\n                        </Cell>\n                    </ResponsiveGrid>\n                </div>\n            </section>\n        );\n    }\n};\n\nexport default DAOStaking;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport OPAStatsVO from \"../OPAStats/OPAStatsVO\";\n\nclass LPStakingVO {\n    @observable lpDEXDataArr = [];\n\n    @action\n    setLpDEXDataArr(value){\n        this.lpDEXDataArr=value;\n    }\n}\n\nexport default new LPStakingVO();\n","import OptionTradingConfig from '../../etherscan/OptionTradingConfig';\nimport log from '../Log';\nimport BigNumber from 'bignumber.js'\nimport BigNumberConvert from '../BigNumberConvert'\n\nclass LPPriceHelper {\n\n    /**\n     * load LP price\n     * case 1: tokenPair=[OPA,USDT]\n     * case 2: tokenPair=[OPA,BNB]\n     * @param dexName\n     * @param tokenPair\n     */\n    loadTokenPrice(dexName, tokenPair, callback) {\n        dexName=dexName||'Pancake';\n        log.debug(`load LP price from ${dexName} ...`);\n\n        let contractConfig = OptionTradingConfig.LP[dexName][\"router\"];\n        let contractAddress = contractConfig.address();\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n        let amountOut=new BigNumber(10).pow(18).toFixed();\n\n        let address1=OptionTradingConfig.contractConfig[tokenPair[0]].hotPotToken.address();\n        let address2=OptionTradingConfig.contractConfig[tokenPair[1]].hotPotToken.address();\n\n        let addressArr=[address1,address2];\n\n        if(tokenPair[1] != 'USDT'){\n            let usdtAddress=OptionTradingConfig.contractConfig['USDT'].hotPotToken.address();\n            addressArr.push(usdtAddress);\n        }\n\n        contract.methods\n            .getAmountsOut(amountOut,addressArr)\n            .call()\n            .then((amounts) => {\n                log.debug(`loadLPPrice result => ${amounts}`);\n                callback(amounts[amounts.length-1]);\n            });\n    }\n\n    /**\n     * load LP token price\n     * case 1: tokenPair=[OPA,USDT]\n     * case 2: tokenPair=[OPA,BNB]\n     * @param dexName\n     * @param tokenPair\n     */\n    loadLPTokenPrice(dexName, tokenPair, callback, tokenPairAddress) {\n        dexName=dexName||'Pancake';\n        log.debug(`load LP token price from ${dexName} ...`);\n\n        let handler=this;\n        handler.loadLPTokenAddress(dexName, tokenPair, tokenPairAddress, lpTokenAddress => {\n            handler.loadLPTokenTotalSupply(dexName,lpTokenAddress, totalSupply => {\n                handler.loadLPTokenReserves(dexName, tokenPair, lpTokenAddress, reserve => {\n                    let bn = new BigNumber(reserve);\n                    // 2 * (_reserve0 / totalSupply)\n                    let priceAsset = bn.times(2).div(totalSupply);\n\n                    log.debug(`priceAsset result => ${priceAsset}`);\n\n                    if(tokenPair[1] === 'USDT'){\n                        callback(BigNumberConvert.toPrimitiveValue(priceAsset,'USDT'));\n                    }else{\n                        let usdtArr=[tokenPair[1],'USDT'];\n                        handler.loadTokenPrice(dexName,usdtArr,price => {\n                            let priceBN = new BigNumber(price);\n                            let priceResult = priceBN.times(priceAsset);\n                            log.debug(`priceAsset to USDT result => ${priceResult}`);\n                            callback(priceResult);\n                        });\n                    }\n                })\n            });\n        });\n    }\n\n    loadLPTokenAddress(dexName, tokenPair, tokenPairAddress, callback) {\n        if(tokenPairAddress){\n            callback(tokenPairAddress);\n        }else{\n            dexName=dexName||'Pancake';\n            log.debug(`loadLPTokenAddress from ${dexName} ...`);\n\n            let contractConfig = OptionTradingConfig.LP[dexName][\"factory\"];\n            let contractAddress = contractConfig.address();\n            let contractAbi = contractConfig.abi;\n\n            let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n\n            let address1=OptionTradingConfig.contractConfig[tokenPair[0]].hotPotToken.address();\n            let address2=OptionTradingConfig.contractConfig[tokenPair[1]].hotPotToken.address();\n\n            contract.methods\n                .getPair(address1,address2)\n                .call()\n                .then((lpTokenAddress) => {\n                    log.debug(`load LP token address result => ${lpTokenAddress}`);\n                    callback(lpTokenAddress);\n                });\n        }\n    }\n\n    loadLPTokenTotalSupply(dexName, lpTokenAddress, callback) {\n        dexName=dexName||'Pancake';\n        log.debug(`loadLPTokenTotalSupply from ${dexName} ...`);\n\n        let contractConfig = OptionTradingConfig.LP[dexName][\"LP_Token\"];\n        let contractAddress = lpTokenAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .totalSupply()\n            .call()\n            .then((totalSupply) => {\n                log.debug(`loadLPTokenTotalSupply result => ${totalSupply}`);\n                callback(totalSupply);\n            });\n    }\n\n    loadLPTokenReserves(dexName, tokenPair, lpTokenAddress, callback) {\n        dexName=dexName||'Pancake';\n        log.debug(`loadLPTokenTotalSupply from ${dexName} ...`);\n\n        let contractConfig = OptionTradingConfig.LP[dexName][\"LP_Token\"];\n        let contractAddress = lpTokenAddress;\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .getReserves()\n            .call()\n            .then((result) => {\n                log.debug(`loadLPTokenReserves result => ${result[0]}`);\n                // console.log(result);\n                // callback(result[0]);\n\n                contract.methods\n                    .token0()\n                    .call()\n                    .then(token0 => {\n                        log.debug(`loadLPTokenReserves token0 => ${token0}`);\n\n                        let address0=OptionTradingConfig.contractConfig[tokenPair[0]].hotPotToken.address();\n                        if(token0.toUpperCase() === address0.toUpperCase()){\n                            callback(result[1]);\n                        }else{\n                            callback(result[0]);\n                        }\n                    });\n            });\n    }\n}\n\nexport default new LPPriceHelper()\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport OPAStatsVO from \"../OPAStats/OPAStatsVO\";\n\nclass LPDEXData {\n    @observable dexName = \"\";\n    @observable lpStakingDataArr = [];\n\n    @action\n    setDexName(value){\n        this.dexName=value;\n    }\n\n    @action\n    setLpStakingDataArr(value){\n        this.lpStakingDataArr=value;\n    }\n}\n\nexport default LPDEXData;\n","import {action, observable} from 'mobx';\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport OPAStatsVO from \"../OPAStats/OPAStatsVO\";\n\nclass LPStakingData {\n    @observable dexName = \"\";\n    @observable tokenPairName = \"\";\n    @observable tokenArr = [];\n    @observable assetName = \"\";\n    @observable provideLiquidityUrl = \"\";\n\n    @observable totalStaked = 0;\n    @observable totalStakedShow = 0;\n    @observable totalStakedShowNumber = 0;\n\n    @observable totalStakedValue = 0;\n\n    @observable myStaked = 0;\n    @observable myStakedShow = 0;\n    @observable myStakedShowNumber = 0;\n\n    @observable myRewards = 0;\n    @observable myRewardsShow = 0;\n\n    @observable opaPrice = 0;\n    @observable opaPriceShowNumber = 0;\n    @observable opaLPTokenPrice = 0;\n    @observable opaLPTokenPriceShowNumber = 0;\n    @observable myApr = 0;\n\n    @action\n    setDexName(value){\n        this.dexName=value;\n    }\n\n    @action\n    setTokenPairName(value){\n        this.tokenPairName=value;\n    }\n\n    @action\n    setTokenArr(value){\n        this.tokenArr=value;\n    }\n\n    @action\n    setAssetName(value){\n        this.assetName=value;\n    }\n\n    @action\n    setProvideLiquidityUrl(value){\n        this.provideLiquidityUrl=value;\n    }\n\n    @action\n    setTotalStaked(value){\n        this.totalStaked=value;\n        this.totalStakedShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.totalStakedShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setTotalStakedValue(){\n        let value = this.totalStakedShowNumber * this.opaLPTokenPriceShowNumber;\n        if(value < 0.01){\n            this.totalStakedValue=BigNumberConvert.toFormatDecimal(value, 4);\n        }else{\n            this.totalStakedValue=BigNumberConvert.toFormatDecimal(value, 2);\n        }\n    }\n\n    @action\n    setMyStaked(value){\n        this.myStaked=value;\n        this.myStakedShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n        this.myStakedShowNumber=BigNumberConvert.toShowNumberDecimalOPA(value);\n    }\n\n    @action\n    setMyRewards(value){\n        this.myRewards=value;\n        this.myRewardsShow=BigNumberConvert.toShowValueFormatDecimalOPA(value);\n    }\n\n    @action\n    setOpaPrice(value){\n        this.opaPrice=value;\n        this.opaPriceShowNumber=BigNumberConvert.toShowNumberDecimalUSDT(value);\n    }\n\n    @action\n    setOpaLPTokenPrice(value){\n        this.opaLPTokenPrice=value;\n        this.opaLPTokenPriceShowNumber=BigNumberConvert.toShowNumberDecimalUSDT(value);\n    }\n\n    @action\n    setMyApr(value){\n        this.myApr=value;\n    }\n\n    getPairId(){\n        return `${this.tokenPairName}@${this.dexName}`;\n    }\n}\n\nexport default LPStakingData;\n","import log from \"../../../../components/Log\";\nimport OptionTradingConfig from \"../../../../etherscan/OptionTradingConfig\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport LPPriceHelper from \"../../../../components/LPPriceHelper\";\nimport PopStakeVO from \"../PopStake/PopStakeVO\";\nimport AssetApprove from \"../../../../components/AssetApprove\";\nimport BigNumber from \"bignumber.js\";\nimport BigNumberConvert from \"../../../../components/BigNumberConvert\";\nimport PopClaimVO from \"../PopClaim/PopClaimVO\";\nimport PopWithdrawVO from \"../PopWithdraw/PopWithdrawVO\";\nimport ApplicationConfig from \"../../../../ApplicationConfig\";\nimport LPDEXData from \"./LPDEXData\";\nimport LPStakingData from \"./LPStakingData\";\nimport LPStakingVO from \"./LPStakingVO\";\n\nclass LPStakingDAO {\n    /**\n     * just load staking item，don't read data from the contract\n     */\n    loadLPStakingItem(){\n        log.debug(`loadLPStakingData...`);\n\n        let stakingDataArr=[];\n\n        for(let dex of ApplicationConfig.LPStakingConfig){\n            let lpDEXData=new LPDEXData();\n            lpDEXData.setDexName(dex.dexName);\n\n            let lpStakingDataArr=[];\n            for(let tokenPair of dex.tokenPair){\n                let lpStakingData=new LPStakingData();\n\n                lpStakingData.setDexName(dex.dexName);\n                lpStakingData.setTokenPairName(tokenPair.name);\n                lpStakingData.setTokenArr(tokenPair.token);\n                lpStakingData.setAssetName(tokenPair.assetName);\n                lpStakingData.setProvideLiquidityUrl(tokenPair.plUrl);\n\n                lpStakingDataArr.push(lpStakingData);\n            }\n            lpDEXData.setLpStakingDataArr(lpStakingDataArr);\n\n            stakingDataArr.push(lpDEXData);\n        }\n\n        LPStakingVO.setLpDEXDataArr(stakingDataArr);\n    }\n\n    /**\n     * read data from the contract after wallet is connected\n     */\n    loadLPStakingData(){\n        log.debug(`loadLPStakingData...`);\n\n        let handler=this;\n\n        for(let dex of LPStakingVO.lpDEXDataArr){\n            for(let lpStakingData of dex.lpStakingDataArr){\n                handler.loadLPTotalStaked(lpStakingData);\n                handler.loadMyLPStaked(lpStakingData);\n                handler.loadMyLPRewards(lpStakingData);\n            }\n        }\n    }\n\n    loadLPTotalStaked(lpStakingData){\n        log.debug(`loadLPTotalStaked ...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(lpStakingData.getPairId());\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .totalStaked()\n            .call()\n            .then((result) => {\n                log.debug(`loadLPTotalStaked => [result=${result}]`);\n\n                lpStakingData.setTotalStaked(result);\n                handler.loadMyLPAPR(lpStakingData);\n            });\n    }\n\n    loadMyLPStaked(lpStakingData){\n        log.debug(`loadMyLPStaked ...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(lpStakingData.getPairId());\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .numStaked(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`loadMyLPStaked => [result=${result}]`);\n\n                lpStakingData.setMyStaked(result);\n\n                handler.loadMyLPAPR(lpStakingData);\n            });\n    }\n\n    loadMyLPRewards(lpStakingData){\n        log.debug(`loadMyLPRewards ...`);\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(lpStakingData.getPairId());\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .checkReward(currentAccountStorage.account)\n            .call()\n            .then((result) => {\n                log.debug(`loadMyLPRewards => [result=${result}]`);\n\n                lpStakingData.setMyRewards(result);\n            });\n    }\n\n    loadMyLPAPR(lpStakingData){\n        log.debug(`loadMyLPAPR ...`);\n\n        if(lpStakingData.myStakedShowNumber && lpStakingData.totalStakedShowNumber){\n            // let tokenArr=['ADA','BNB'];\n            let tokenArr=['OPA','USDT'];\n            LPPriceHelper.loadTokenPrice(lpStakingData.dexName,tokenArr,(opaPrice)=>{\n                lpStakingData.setOpaPrice(opaPrice);\n                log.debug(`OPA price result => ${lpStakingData.opaPriceShowNumber}`);\n\n                LPPriceHelper.loadLPTokenPrice(lpStakingData.dexName, tokenArr, lpTokenPrice => {\n                    lpStakingData.setOpaLPTokenPrice(lpTokenPrice);\n                    log.debug(`OPA LP token price result => ${lpStakingData.opaLPTokenPriceShowNumber}`);\n\n                    lpStakingData.setTotalStakedValue();\n\n                    this.loadLPOPABlockReward(lpStakingData, opaBlockReward => {\n                        let opaRewardsDay = new BigNumber(lpStakingData.myStakedShowNumber).times(opaBlockReward).div(lpStakingData.totalStakedShowNumber);\n                        log.info(`loadMyLPAPR [myStakedShowNumber=${lpStakingData.myStakedShowNumber}, totalStakedShowNumber=${lpStakingData.totalStakedShowNumber}, opaOutputDay=${opaBlockReward}, opaRewardsDay=${opaRewardsDay}]`);\n\n                        let opaValueDay=new BigNumber(lpStakingData.opaPriceShowNumber).times(opaRewardsDay);\n                        let lpTokenValue=new BigNumber(lpStakingData.myStakedShowNumber).times(lpStakingData.opaLPTokenPriceShowNumber);\n                        let apr=opaValueDay.times(365).times(100).div(lpTokenValue);\n                        apr=BigNumberConvert.toFormatDecimal(apr,2);\n\n                        log.info(`loadMyLPAPR result => ${apr}`);\n\n                        lpStakingData.setMyApr(apr);\n                    });\n                });\n            });\n        }\n    }\n\n    loadLPOPABlockReward(lpStakingData, callback){\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(lpStakingData.getPairId());\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods['OPABlockReward']\n            .call(contract.methods)\n            .call()\n            .then((result) => {\n                log.info(`loadLPOPABlockReward => [result=${result}]`);\n\n                let opaBlockReward=BigNumberConvert.toShowNumberDecimalOPA(result);\n                opaBlockReward=opaBlockReward * 20 * 60 * 24;\n                callback(opaBlockReward);\n            });\n    }\n\n    lpStake(){\n        log.debug(`lpStake...`);\n\n        let handler=this;\n        DialogBoxVO.confirm();\n\n        let contractConfig=OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(PopStakeVO.assetDes);\n\n        let allowance=AssetApprove.getContractAllowance(contractAddress);\n        let allowanceNb=new BigNumber(allowance);\n        let defaultApproveThresholdNb=new BigNumber(OptionTradingConfig.getDefaultApproveThreshold());\n        log.debug(`allowanceNb => ${allowanceNb.toFormat()}`);\n        log.debug(`defaultApproveThresholdNb => ${defaultApproveThresholdNb.toFormat()}`);\n\n        let isNeedApprove=allowanceNb.lt(defaultApproveThresholdNb);\n        log.debug(`isNeedApprove => ${isNeedApprove}`);\n        if(isNeedApprove){\n            AssetApprove.approve(contractAddress, ()=>{\n                handler.doLPStake();\n            },'OPA');\n        }else{\n            handler.doLPStake();\n        }\n    }\n\n    doLPStake(){\n        log.debug(`doLPStake [amount=${PopStakeVO.stakeAmount} <=> ${PopStakeVO.stakeAmountBN}]...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(PopStakeVO.assetDes);\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .stake(PopStakeVO.stakeAmountBN)\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                PopStakeVO.setPopEventTimestamp(0);\n\n                AssetBalance.refresh();\n                AssetApprove.refresh(\"OPA\");\n\n                let maxStakeNew=PopStakeVO.maxStake-PopStakeVO.stakeAmountBN;\n                PopStakeVO.setMaxStake(maxStakeNew);\n\n                handler.loadLPStakingData();\n            });\n    }\n\n    lpClaim(){\n        log.debug(`lpClaim...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(PopClaimVO.rewardsFrom);\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .claimRewards()\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                PopClaimVO.setPopEventTimestamp(0);\n                PopClaimVO.setRewards(0);\n\n                handler.loadLPStakingData();\n                AssetBalance.refresh();\n            });\n    }\n\n    lpWithdraw(){\n        log.debug(`lpWithdraw [amount=${PopWithdrawVO.withdrawAmount} <=> ${PopWithdrawVO.withdrawAmountBN}]...`);\n\n        let handler=this;\n\n        let contractConfig = OptionTradingConfig.contractConfig['OPA']['staking'];\n        let contractAddress = contractConfig.address(PopWithdrawVO.assetDes);\n        let contractAbi = contractConfig.abi;\n\n        let contract = new window.web3.eth.Contract(contractAbi, contractAddress);\n        contract.methods\n            .withdraw(PopWithdrawVO.withdrawAmountBN)\n            .send({\n                from: currentAccountStorage.account\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n                PopWithdrawVO.setPopEventTimestamp(0);\n\n                AssetBalance.refresh();\n\n                let maxWithdrawNew=PopWithdrawVO.maxWithdraw-PopWithdrawVO.withdrawAmountBN;\n                PopWithdrawVO.setMaxWithdraw(maxWithdrawNew);\n\n                handler.loadLPStakingData();\n            });\n    }\n}\n\nexport default new LPStakingDAO();\n","import './index.scss';\nimport '../Coin/index.scss';\n\nimport React, {Component} from 'react';\nimport {Button, ResponsiveGrid} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\n\nimport {observer} from \"mobx-react\";\nimport getCoinIcon from \"../Coin\";\nimport PopStakeVO from \"../PopStake/PopStakeVO\";\nimport PopClaimVO from \"../PopClaim/PopClaimVO\";\nimport PopWithdrawVO from \"../PopWithdraw/PopWithdrawVO\";\nimport LPStakingVO from \"./LPStakingVO\";\nimport LPStakingDAO from \"./LPStakingDAO\";\nimport AssetBalance from \"../../../../components/AssetBalance\";\nimport PopConnectWalletVO from \"../PopConnectWallet/PopConnectWalletVO\";\n\nconst { Cell } = ResponsiveGrid;\n\nconst lpStake = (pairName, assetName, plUrl, assetDes)=>{\n    if (currentAccountStorage.account) {\n        PopStakeVO.setTitle(`STAKE ${pairName} LP TOKEN`);\n        PopStakeVO.setAsset('LP Token');\n        PopStakeVO.setAssetUnit('LP Token');\n        PopStakeVO.setStakeAsset(assetName);\n        PopStakeVO.setAssetDes(assetDes);\n\n        PopStakeVO.setProviderLiquidityUrl(plUrl);\n\n        let balance=AssetBalance.getAssetBalance(PopStakeVO.stakeAsset);\n        log.debug(`balance of ${PopStakeVO.stakeAsset} => ${balance}`);\n        PopStakeVO.setMaxStake(balance);\n\n        PopStakeVO.setPopEventSource('LP');\n        PopStakeVO.setShow(true);\n    } else {\n        PopConnectWalletVO.setShow(true);\n    }\n};\n\nconst lpClaim = (pairName, rewardsFrom, rewards)=>{\n    if (currentAccountStorage.account) {\n        PopClaimVO.setRewardsFrom(rewardsFrom);\n        PopClaimVO.setRewards(rewards);\n        PopClaimVO.setPopEventSource('LP');\n        PopClaimVO.setShow(true);\n    } else {\n        PopConnectWalletVO.setShow(true);\n    }\n};\n\nconst lpWithdraw = (pairName, assetName, assetDes, staked)=>{\n    if (currentAccountStorage.account) {\n        PopWithdrawVO.setTitle(`WITHDRAW ${pairName} LP TOKEN`);\n        PopWithdrawVO.setAssetDes(assetDes);\n        PopWithdrawVO.setAssetUnit('LP Token');\n        PopWithdrawVO.setStakeAsset(assetName);\n\n        PopWithdrawVO.setMaxWithdraw(staked);\n        PopWithdrawVO.setPopEventSource('LP');\n        PopWithdrawVO.setShow(true);\n    } else {\n        PopConnectWalletVO.setShow(true);\n    }\n};\n\n@observer\nclass LPStaking extends Component {\n    componentDidMount() {\n        LPStakingDAO.loadLPStakingItem();\n\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account && LPStakingVO.lpDEXDataArr){\n                LPStakingDAO.loadLPStakingData();\n            }\n        });\n\n        autorun(() => {\n            if(PopStakeVO.popEventSource == 'LP' && PopStakeVO.popEventTimestamp){\n                LPStakingDAO.lpStake();\n            }\n        });\n\n        autorun(() => {\n            if(PopClaimVO.popEventSource == 'LP' && PopClaimVO.popEventTimestamp){\n                LPStakingDAO.lpClaim();\n            }\n        });\n\n        autorun(() => {\n            if(PopWithdrawVO.popEventSource == 'LP' && PopWithdrawVO.popEventTimestamp){\n                LPStakingDAO.lpWithdraw();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"section opa_lp_container\">\n                {\n                    LPStakingVO.lpDEXDataArr.map(dex => (\n                        <div key={dex.dexName} className=\"section_container\">\n                            <div className={'opa_section_title'}>OPA LP Staking @{dex.dexName}</div>\n\n                            <ResponsiveGrid gap={20} className={'dao_staking_box'} columns={3}>\n                                {\n                                    dex.lpStakingDataArr.map(pair => (\n                                        <Cell key={pair.tokenPairName} className=\"grid-1 section_item staking_item\" colSpan={1}>\n                                            <div className={'staking_header'}>\n                                                <div className={'coin_icon_group'}>\n                                                    <span className={`coin_icon ${getCoinIcon(pair.tokenArr[0])}`}></span>\n                                                    <span className={`coin_icon ${getCoinIcon(pair.tokenArr[1])}`}></span>\n                                                </div>\n                                                <div>{pair.tokenPairName} @{dex.dexName}</div>\n                                            </div>\n\n                                            <div className={'total_box'}>\n                                                <div>Total Staked</div>\n                                                <div className={'total_value_box'}>\n                                                    <span className={'total'}>{pair.totalStakedShow}</span>\n                                                    <span className={'unit'}>LP Token</span>\n                                                </div>\n                                                <div className={'total_value'}>≈$ {pair.totalStakedValue}</div>\n                                            </div>\n\n                                            <div className={'stake_info_box'}>\n                                                <div>Staked</div>\n                                                <div className={'stake_value'}>{pair.myStakedShow} <span className={'unit'}>LP Token</span></div>\n                                            </div>\n                                            <div className={'stake_info_box'}>\n                                                <div>Rewards</div>\n                                                <div className={'stake_value'}>{pair.myRewardsShow} <span className={'unit'}>OPA</span></div>\n                                            </div>\n                                            <div className={'stake_info_box'}>\n                                                <div>Reward APR</div>\n                                                <div className={'stake_value'}>{pair.myApr} <span className={'unit'}>%</span></div>\n                                            </div>\n\n                                            <div className={'sub_btn_box'}>\n                                                <Button type=\"primary\" size=\"large\" onClick={lpStake.bind(this, pair.tokenPairName, pair.assetName, pair.provideLiquidityUrl, `${pair.tokenPairName}@${dex.dexName}`)} className=\"sub_btn\">{`STAKE ${pair.tokenPairName} LP TOKEN`}</Button>\n                                                <Button type=\"primary\" size=\"large\" onClick={lpWithdraw.bind(this, pair.tokenPairName, pair.assetName, `${pair.tokenPairName}@${dex.dexName}`, pair.myStaked)} className=\"sub_btn sub_btn_short\">{`WITHDRAW ${pair.tokenPairName} LP TOKEN`}</Button>\n                                                <Button type=\"primary\" size=\"large\" onClick={lpClaim.bind(this, pair.tokenPairName, `${pair.tokenPairName}@${dex.dexName}`, pair.myRewards)} className=\"sub_btn sub_btn_short\">REDEEM REWARDS</Button>\n                                            </div>\n                                        </Cell>\n                                    ))\n                                }\n                            </ResponsiveGrid>\n                        </div>\n                    ))\n                }\n            </section>\n        );\n    }\n};\n\nexport default LPStaking;\n","import log from \"../../../../components/Log\";\nimport OPAStatsVO from \"./OPAStatsVO\";\nimport ApplicationConfig from \"../../../../ApplicationConfig\";\nimport LPPriceHelper from \"../../../../components/LPPriceHelper\";\nimport moment from \"moment-timezone\";\n\nclass OPAStatsDAO {\n    loadStats(){\n        log.debug(`loadStats...`);\n\n        this.loadCircSupply();\n\n        let tokenArr=['OPA','USDT'];\n        LPPriceHelper.loadTokenPrice('',tokenArr,(opaPrice)=>{\n            OPAStatsVO.setPrice(opaPrice);\n            log.debug(`OPA price result => ${OPAStatsVO.priceShowNumber}`);\n        });\n    }\n\n    loadCircSupply(){\n        let startTime = moment(ApplicationConfig.opaMiningStartTime).tz( 'Asia/Shanghai');\n        log.info(`startTime Z8 => ${startTime.format('YYYY-MM-DD HH:mm:ss')}`);\n\n        let now=moment().tz( 'Asia/Shanghai');\n        log.info(`now Z8 => ${now.format('YYYY-MM-DD HH:mm:ss')}`);\n\n        let secondsDiff=now.diff(startTime, 'seconds');\n        log.info(`now.diff(startTime, 'seconds') => ${secondsDiff}`);\n\n        if(secondsDiff < 0){\n            secondsDiff=0;\n        }\n\n\n        let paradrop=1666667;\n        let paradropStartTime = moment(ApplicationConfig.opaParadropStartTime).tz( 'Asia/Shanghai');\n        log.info(`paradropStartTime Z8 => ${paradropStartTime.format('YYYY-MM-DD HH:mm:ss')}`);\n        let paradropSecondsDiff=now.diff(paradropStartTime, 'seconds');\n        log.info(`now.diff(paradropStartTime, 'seconds') => ${paradropSecondsDiff}`);\n        if(paradropSecondsDiff < 0){\n            paradrop=0;\n        }\n\n\n        let circSupply=10 * secondsDiff + paradrop;\n        log.info(`circSupply => ${circSupply}`);\n\n        OPAStatsVO.setCircSupply(circSupply);\n    }\n}\n\nexport default new OPAStatsDAO();\n","import './index.scss';\n\nimport React, {Component} from 'react';\nimport log from \"../../../../components/Log\";\n\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../../../components/Web3/WebThreeLoadEvent\";\n\nimport {observer} from \"mobx-react\";\nimport {ResponsiveGrid} from \"@alifd/next\";\nimport OPAStatsVO from \"./OPAStatsVO\";\nimport OPAStatsDAO from \"./OPAStatsDAO\";\nimport CurrentChainStorage from \"../../../../components/Web3/CurrentChainStorage\";\n\nconst { Cell } = ResponsiveGrid;\n\n@observer\nclass OPAStats extends Component {\n    componentDidMount() {\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && CurrentChainStorage.chainId){\n                OPAStatsDAO.loadStats();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"section opa_stats_container\">\n                <div className=\"section_container opa_stats_section_container\">\n                    <ResponsiveGrid gap={20} className={''} columns={3}>\n                        <Cell className=\"grid-1 section_item stats_item\" colSpan={1}>\n                            <div>\n                                <span className={'s_value'}>{OPAStatsVO.priceShow}</span>\n                                <span className={'s_unit'}>USD</span>\n                            </div>\n                            <div className={'item_des'}>OPA Price</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item stats_item\" colSpan={1}>\n                            <div>\n                                <span className={'s_value'}>{OPAStatsVO.marketCap}</span>\n                                <span className={'s_unit'}>USD</span>\n                            </div>\n                            <div className={'item_des'}>OPA Market Cap</div>\n                        </Cell>\n                        <Cell className=\"grid-1 section_item stats_item\" colSpan={1}>\n                            <div>\n                                <span className={'s_value'}>{OPAStatsVO.circSupplyShow}</span>\n                                <span className={'s_unit'}>OPA</span>\n                            </div>\n                            <div className={'item_des'}>OPA Circ.Supply</div>\n                        </Cell>\n                    </ResponsiveGrid>\n                </div>\n            </section>\n        );\n    }\n};\n\nexport default OPAStats;\n","import OPA from './OPA';\n\nexport default OPA;\n","/* eslint react/no-string-refs:0 */\nimport './index.scss';\n\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport PoolRewards from \"./components/PoolRewards\";\nimport DAOStaking from \"./components/DAOStaking\";\nimport LPStaking from \"./components/LPStaking\";\nimport HeaderVO from \"../../layouts/DefaultLayout/components/Header/HeaderVO\";\nimport OPAStats from \"./components/OPAStats\";\nimport DialogBox from \"../../components/DialogBox\";\nimport {autorun} from \"mobx\";\nimport WebThreeLoadEvent from \"../../components/Web3/WebThreeLoadEvent\";\nimport currentAccountStorage from \"../../components/Web3/CurrentAccountStorage\";\nimport AssetApprove from \"../../components/AssetApprove\";\n\n\n@withRouter\nclass OPDashboard extends Component {\n    componentDidMount(){\n        HeaderVO.setCurrentNavKey('opa');\n\n        autorun(() => {\n            if(WebThreeLoadEvent.isLoaded && currentAccountStorage.account){\n                AssetApprove.getAllowance(\"OPA\");\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"sections\">\n                <DialogBox/>\n                <OPAStats/>\n                <PoolRewards/>\n                <DAOStaking/>\n                <LPStaking/>\n            </div>\n        );\n    }\n}\n\nexport default OPDashboard;\n","const QuestionsConfig_en = {\n    titles: {\n        l: [\n            {index: 1, title: 'What is Option Panda?'},\n            {index: 3, title: 'Why choosing Option Panda?'},\n            {index: 5, title: 'What is the difference between Option Panda and Hegic?'},\n            {index: 7, title: 'What does At The Money, Out of The Money and In The Money mean?'},\n        ],\n        r: [\n            {index: 2, title: 'What is the roadmap of Option Panda?'},\n            {index: 4, title: 'What is the difference between Option Panda and centralized option exchanges?'},\n            {index: 6, title: 'What is an option’s intrinsic value and extrinsic value?'},\n        ]\n    }\n};\n\nexport default QuestionsConfig_en;\n","import React, {Component} from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport QuestionsConfig_en from '../QuestionsConfig_en';\n\nimport './index.scss';\n\nconst {Cell} = ResponsiveGrid;\n\nclass QuestionsTitle extends Component {\n    render() {\n        return (\n            <ResponsiveGrid gap={40} columns={2}>\n                <Cell className=\"grid-1 section_item section_item_l\" colSpan={1}>\n                    <div className={'qa_title_container'}>\n                        {\n                            QuestionsConfig_en.titles.l.map((title, index) => {\n                                return (\n                                    <a key={index} href={`#question${title.index}`}>\n                                        <div className={'qa_question'}>\n                                            <div className={'index'}>{title.index}</div>\n                                            <div className={'title'}>{title.title}</div>\n                                            <div className={'arrow'}></div>\n                                        </div>\n                                    </a>\n                                )\n                            })\n                        }\n                    </div>\n                </Cell>\n                <Cell className=\"grid-1 section_item section_item_r\" colSpan={1}>\n                    <div className={'qa_title_container'}>\n                        {\n                            QuestionsConfig_en.titles.r.map((title, index) => {\n                                return (\n                                    <a key={index} href={`#question${title.index}`}>\n                                        <div className={'qa_question'}>\n                                            <div className={'index'}>{title.index}</div>\n                                            <div className={'title'}>{title.title}</div>\n                                            <div className={'arrow'}></div>\n                                        </div>\n                                    </a>\n                                )\n                            })\n                        }\n                    </div>\n                </Cell>\n                <Cell className=\"grid-1 section_item\" colSpan={2}>\n                    <div className={'qa_title_container'}>\n                        <div className={'more'}>\n                            <a href={'https://docs.opanda.io/'} target={'_blank'} className={'more_link'}>{intl.get('page.faq.more.link')}</a>\n                        </div>\n                    </div>\n                </Cell>\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default QuestionsTitle;\n","import React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport QuestionsTitle from './QuestionsTitle';\n\nimport './index.scss';\n\nconst {Cell} = ResponsiveGrid;\n\nconst Questions = () => {\n    return (\n        <section id={'J_FAQ_title_container'} className=\"section p_q_t_container\">\n            <div className=\"section_container\">\n                <ResponsiveGrid gap={40} columns={2}>\n                    <Cell className=\"grid-2 section_item\" colSpan={2}>\n                        <a name=\"QA_Top\"></a>\n                        <div className={'qa_page_title'}>Frequently Asked Questions</div>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n            <div className=\"section_container section_container_title\">\n                <QuestionsTitle/>\n            </div>\n        </section>\n    );\n};\n\nexport default Questions;\n","import React, { useEffect, useState } from 'react';\n\nimport './index.scss';\n\n/**\n * create a throttle callback\n * @param callback\n * @param delay\n * @param thisArg\n */\nexport const createThrottle = (callback, delay,thisArg) =>{\n    let lastInvokeTime = Date.now();\n    const _delay = Number(delay) || 200;\n    return (...args)=>{\n        const now = Date.now();\n        if (now - _delay <= lastInvokeTime) {\n            return;\n        }\n        lastInvokeTime = now;\n        callback.call(thisArg, ...args)\n    }\n};\n\nconst TopJumper = () =>{\n    const [show, switchShow] = useState(false);\n    useEffect(()=>{\n        const listener = createThrottle(()=>{\n            const height=document.getElementById(\"J_FAQ_title_container\").offsetHeight || 300;\n            const shouldShow = window.scrollY > height;\n            if (shouldShow !== show) {\n                switchShow(shouldShow)\n            }\n        }, 500);\n        document.addEventListener('scroll', listener);\n        return ()=>document.removeEventListener('scroll', listener);\n    }, [show]);\n\n    return show ? (<a className={'to_top'} href={'#QA_Top'}></a>) : null;\n};\n\nexport default TopJumper;\n","import React, {Component} from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\n\nimport './index.scss';\nimport TopJumper from \"./TopJumper\";\n\nconst {Cell} = ResponsiveGrid;\n\nclass QuestionsAnswer extends Component {\n    render() {\n        return (\n            <ResponsiveGrid gap={20} columns={1}>\n                <TopJumper/>\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question1\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            What is Option Panda?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            Option Panda is a decentralized options underwriting & trading exchange, which supports Ethereum, Binance Smart Chain etc. Its similar peers are Hegic and Binance Option, semi-decentralized and centralized in nature respectively. If you’re not familiar with option and its benefit, try learn some basics from here.\n                        </div>\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question2\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            What is the roadmap of Option Panda?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            <p>At its initial launch, Option Panda will focus on providing traditional cryptocurrency (BTCB/ETH/BNB etc.) option trading on Binance Smart Chain, with gradual listing of more underlying assets. In 2021, we’ll add CBBC(Callable Bull/Bear Contracts), which is a variant of options, to expand the product line. </p>\n                            <p>It’s also a work in progress to support Ethereum Optimistic Rollup network, Algorand etc., for users of those public chains to trade options. Integration and combination with other decentralized asset trading platforms or protocols are also under rigorous consideration. Option Panda is gonna evolve to a composable exotic derivatives trading platform. We will listen to the community’s opinion and let the community vote to decide the future direction of Option Panda.</p>\n                        </div>\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question3\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            Why choosing Option Panda?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            <p>Option Panda has many advantages against other option trading platforms.</p>\n                            <p>◆ <b>Scalable:</b> Option Panda is a decentralized exchange which enables crypto asset traders to trade against each others’ price trend perspective regarding a certain underlying asset. Option Panda is scalable both in terms of crypto asset classes and expiry dates. Three underlying assets (BTCB, ETH, BNB) are listed for option offerings at the initial launch, with five available expiry durations, 5 minutes, 15 minutes, 30 minutes, 45 minutes, 1 hour, respectively. On Option Panda, actually it’s quite simple to offer options for a new underlying asset, with any expiry duration. The power of deciding whether more assets or expiry durations should be provided is owned by Option Panda Community. We’ll later announce our new asset listing and governance rules.</p>\n                            <p>◆ <b>Convenient: </b> Option Panda automatically settles expiring options and updates new option offerings according to transparent rules(refer to “10. What is Option Panda’s option underwriting mechanism?”). Option holders don’t have to tower-watch and manually exercise their holdings through smart contract interaction. Option buyers simply buy a call/put option on the platform, waiting for its settlement for prospective profit; option sellers simply deposit underlying asset to a pool to participate in a pooled option underwriting, collecting premiums paid by option buyers.</p>\n                            <p>◆ <b>Transparent & Fair Pricing: </b> Option Panda adopts a transparent option pricing mechanism. As there is no scientifically accurate pricing model for options, it’s unfair to claim that any pricing mechanism is fair to everyone. One can only claim that the price is accepted and willingly taken by someone. However, Option Panda strives to do its best to create a technically fair option pricing mechanism. Please refer to “11. How the price that I have to pay to buy an option is determined by Option Panda?” for more information. </p>\n                            <p>◆ <b>Dynamic Sigma Adjustment: </b> Option Panda employs a novel dynamic adjustment mechanism based on market supply/demand to achieve a relatively frequent update of the implied volatility in the option pricing formula, which we call it Dynamic Sigma Adjustment. It is designed this way so that the frequent, market oriented Sigma(volatility) adjustment could reflect the market supply/demand trend and achieve a practically fair option pricing for both the buy and sell parties. Please refer to “13. What is Dynamic Sigma Adjustment?” for more information.</p>\n                            <p>◆ <b>Community Driven: </b> Option Panda plans to gradually transfer the governance ownership to the community, and let platform tokens holders to decide it’s roadmap. That means Option Panda will have a decentralized governance mechanism.</p>\n                        </div>\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question4\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            What is the difference between Option Panda and centralized option exchanges?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            <p>\n                                First, Option Panda is fully decentralized, no human intervention at all. Option traders could enjoy a fair trading space on Option Panda. On the contrary, when you buy or sell an option on centralized exchanges, you never know whether your trading counter-parties are real or if your counter-party has posted enough physical collateral for underwriting the option. Trading on centralized exchanges bears a lot of inherent risks, especially moral risk. Cryptocurrency traders have experienced a lot of hazardous and painful cases before.\n                            </p>\n                            <p>\n                                Second, Option Panda’s option pricing mechanism is transparent and strictly following the Black-Scholes formula. Nobody can manipulate the option price on Option Panda as it’s calculated by smart contract according to specified rules. On the contrary, non-professional traders never know how the option price on centralized exchanges are calculated and offered. It’s a black box.\n                            </p>\n                        </div>\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question5\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            What is the difference between Option Panda and Hegic?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            <p>In design philosophy, not much difference. However, Option Panda is a fully decentralized option trading platform and has many user beneficial features.</p>\n                            <table cellSpacing={0}>\n                                <tbody>\n                                    <tr className={'tb_head'}><td></td><td>Option Panda</td><td>Hegic</td></tr>\n                                    <tr>\n                                        <td className={'title'}>Option Issue</td>\n                                        <td>\n                                            Option Panda limits the amount of options with a certain expiry date that could be generated from the underwriting pool, with a balanced distribution across different expiry dates, to contain the concentration risk exposed to option underwriters. Option Panda also sets up a 75% utilization ratio upper bound to contain liquidity risk for underwriters.\n                                        </td>\n                                        <td>\n                                            Hegic let option buyers tailor the option strike price and expiry duration they desire. Buyers could buy options with any strike price with expiry duration ranging from 1 day to 28 days. It imposes potential risk to underwriters. If there is a sudden violent pump or dump of BTC or ETH price, it is likely that a large portion of the underwriting pool will be exhausted.\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td className={'title'}>Freedom of Choice</td>\n                                        <td>\n                                            For each underlying asset, Option Panda has two option underwriting pools, one for Call and another one for Put. Underwriters have the freedom to express their market price trend prediction by entering either underwriting pool, no need to afford the lost of their counterparty underwriters if they make correct predictions.\n                                        </td>\n                                        <td>\n                                            For each underlying asset, Hegic only has one option underwriting pool, which underwrites both Call and Put options. In a volatile cryptocurrency trading market, it is obvious that the pool will lose on either an up or down price movement. Underwriters has no freedom to choose. By entering Hegic underwriting pool, you have to afford the lost of other underwriters even if you have your own correct price trend prediction.\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td className={'title'}>Option Pricing</td>\n                                        <td>\n                                            The Pricing formula adopted by Option Panda is financially solid, adopting Black-Scholes model, an academically proved and widely accepted work by Nobel Prize winner. Option Panda applies Dynamic Sigma Adjustment to frequently update Sigma to reflect the up to date market volatility, no human intervention as well.\n                                        </td>\n                                        <td>\n                                            By examining Hegic&#39;s smart contract code, one can discover that the Pricing method is a simplified formula, P=sigma*t^0.5*S/K, which has not been academically proved and market tested. What’s more, Hegic owner manually updates Sigma every month. It’s thus subjected to manipulation, let alone too low an update frequency in a volatile market. Letting buyer’s tailor the option strike price while using one flat IV value for option pricing also introduce problem, as it neglects the well-know volatility smile curve.\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td className={'title'}>\n                                            Fiat Basis Vs Coin Basis\n                                        </td>\n                                        <td>\n                                            Option Panda offers Fiat Basis option. The option premium paid by option buyers to any option underwriting pool on Option Panda is paid in USD stablecoin, and the profit from exercising an option is also received as underwriting pool’s asset denominated in USD. Therefore, option buyer and sellers’ P&L are calculated on the basis of fiat currency without any invisible losses. Using the same example in the right column, we can easily calculate that when ETH price reaches $50, the buyer would break even, without any invisible loss.\n                                        </td>\n                                        <td>\n                                            Hegic basically offers Coin Basis option. Coin Basis introduces invisible loses to buyers who use their Coin to hedge the same Coin’s upside/downside risk against Fiat currency. Suppose a user purchased an ETH call option with four weeks to expiry and the current & strike price both are $500. If the option premium is $50, the user pays 0.1 ETH to Hegic ETH option underwriter pool. If ETH expires at $550 after four weeks, the user should’ve made a profit of $50. However, he will only get 50/550 = 0.091ETH from the Hegic option pool, which means that it’s not even enough to cover his cost of 0.1ETH.\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className={'title'}>Option Exercise & Profit Delivery</td>\n                                        <td>\n                                            Option Panda automatically exercises expiring options, cash settle and physical deliver profit to option buyers by smart contract. No user action needed.\n                                        </td>\n                                        <td>\n                                            Hegic requires buyers to manually exercise their option holdings before expiry. If an option buyer fails or forgets to take actions before expiry, he loses all book profit even if his option holdings expires in the money.\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td className={'title'}>Beneficiary rights Trading</td>\n                                        <td>\n                                            Liquidity is obtainable. For either option seller(underwriter) or buyer, he/she could transfer his/her beneficiary rights any time.\n                                        </td>\n                                        <td>\n                                            Hegic doesn’t provide a mechanism for users to trade his/her beneficiary ownership.\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td className={'title'}>Multi Blockchain Support</td>\n                                        <td>\n                                            Option Panda supports Ethereum, Binance Smart Chain, Huobi Eco Chain, Algorand etc.\n                                        </td>\n                                        <td>\n                                            Hegic now only runs on Ethereum network.\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question6\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            What is an option’s intrinsic value and extrinsic value?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            <p>\n                                An option value is composed of intrinsice value and extrinsic value.\n                            </p>\n                            <p><br/>OptionValue=IntrinsicValue+ExtrinsicValue <br/></p>\n                            <p>\n                                The intrinsic value of both call and put options is the difference between the underlying stock&#39;s price and the strike price. In the case of both call and put options, if the calculated value is negative, the intrinsic value is zero. In other words, intrinsic value only measures the profit as determined by the difference between the option&#39;s strike price and market price.\n                            </p>\n                            <p>Intrinsic_Value</p>\n                            <table cellSpacing={0}>\n                                <tbody>\n                                <tr className={'tb_head'}><td></td><td>Call</td><td>Put</td></tr>\n                                <tr><td className={'title'}>Current_Price &gt;= Strike_Price</td><td>Current_Price - Strike_Price</td><td>0</td></tr>\n                                <tr><td className={'title'}>Current_Price &lt; Strike_Price </td><td>0</td><td>Strike_Price - Current_Price</td></tr>\n                                </tbody>\n                            </table>\n                            <p>\n                                Extrinsic value(aka. Time value) measures the difference between the market price of an option, called the <a href={'https://www.investopedia.com/terms/p/premium.asp'} target={'_blank'}>premium</a>, and its <a href={'https://www.investopedia.com/terms/i/intrinsicvalue.asp'} target={'_blank'}>intrinsic value</a>. Extrinsic value is also the portion of the worth that has been assigned to an option by factors other than the underlying asset&#39;s price. The opposite of extrinsic value is intrinsic value, which is the inherent worth of an option. Extrinsic value rises with increase in volatility in the market.\n                            </p>\n                            <p>Extrinsic_Value</p>\n                            <table cellSpacing={0}>\n                                <tbody>\n                                <tr className={'tb_head'}><td></td><td>Call</td><td>Put</td></tr>\n                                <tr><td className={'title'}>Current_Price &gt;= Strike_Price</td><td>Option_Price- Intrinsic_Value</td><td>Option_Price</td></tr>\n                                <tr><td className={'title'}>Current_Price &lt; Strike_Price </td><td>Option_Price</td><td>Option_Price - Intrinsic_Value</td></tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </Cell>\n\n                <Cell className=\"grid-1 section_item\" colSpan={1}>\n                    <a name=\"question7\"></a>\n                    <div className={'question'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            What does At The Money, Out of The Money and In The Money mean?\n                        </div>\n                    </div>\n                    <div className={'answer'}>\n                        <div className={'avatar'}></div>\n                        <div className={'dialog_box'}>\n                            <span className={'bubble'}></span>\n                            <p>At The Money is also known as ATM, meaning an option has no intrinsic value, only time value. A call or put option is ATM if the underlying’s price is the same as the strike price.</p>\n                            <p>Out of The Money is also known as OTM, meaning an option has no intrinsic value, only extrinsic value. A call option is OTM if the underlying’s price is below the strike price. A put option is OTM if the underlying’s price is above the strike price.</p>\n                            <p>In of The Money is also known as ITM, meaning an option has both intrinsic value and extrinsic value. A call option is ITM if the underlying’s price is above the strike price. A put option is ITM if the underlying’s price is below the strike price.</p>\n                            <table cellSpacing={0}>\n                                <tbody>\n                                <tr className={'tb_head'}><td></td><td>ATM</td><td>OTM</td><td>OTM</td></tr>\n                                <tr>\n                                    <td className={'title'}>Call Option</td>\n                                    <td>\n                                        Current_Price\n                                        =\n                                        Strike_Price\n                                    </td>\n                                    <td>\n                                        Current_Price\n                                        &lt;\n                                        Strike_Price\n                                    </td>\n                                    <td>\n                                        Current_Price\n                                        &gt;\n                                        Strike_Price\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className={'title'}>Put Option</td>\n                                    <td>\n                                        Current_Price\n                                        =\n                                        Strike_Price\n                                    </td>\n                                    <td>\n                                        Current_Price\n                                        &gt;\n                                        Strike_Price\n                                    </td>\n                                    <td>\n                                        Current_Price\n                                        &lt;\n                                        Strike_Price\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <p>For protection of option buyers, at this moment, Option Panda only issues ATM options.</p>\n                        </div>\n                    </div>\n                </Cell>\n\n            </ResponsiveGrid>\n        );\n    }\n}\n\nexport default QuestionsAnswer;\n","import React from 'react';\nimport {ResponsiveGrid} from '@alifd/next';\nimport intl from 'react-intl-universal';\nimport QuestionsAnswer from './QuestionsAnswer';\n\nimport './index.scss';\n\nconst {Cell} = ResponsiveGrid;\n\nconst Answers = () => {\n    return (\n        <section className=\"section p_q_a_container\">\n            <div className=\"section_container\">\n                <QuestionsAnswer/>\n            </div>\n        </section>\n    );\n};\n\nexport default Answers;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Questions from './components/Questions';\nimport Answer from \"./components/Answers\";\nimport HeaderVO from \"../../layouts/DefaultLayout/components/Header/HeaderVO\";\n\n@withRouter\nclass FAQ extends Component {\n    componentDidMount(){\n        HeaderVO.setCurrentNavKey('faq');\n    }\n\n    render() {\n        return (\n            <div className=\"sections\">\n                <Questions/>\n                <Answer/>\n            </div>\n        );\n    }\n}\n\nexport default FAQ;\n","import {action, observable} from 'mobx';\n\nclass ListOptionsVO {\n    @observable dataArr = [];\n    @observable loadDataLength = 0;\n    @observable isLoading = true;\n\n    constructor(){\n        this.dataArr=[\n            {\n                asset: 'BTCB',\n                pool: 'CALL',\n                optionType: 'callPoolContract',\n            },\n            {\n                asset: 'BTCB',\n                pool: 'PUT',\n                optionType: 'putPoolContract',\n            },\n            {\n                asset: 'ETH',\n                pool: 'CALL',\n                optionType: 'callPoolContract',\n            },\n            {\n                asset: 'ETH',\n                pool: 'PUT',\n                optionType: 'putPoolContract',\n            },\n            {\n                asset: 'BNB',\n                pool: 'CALL',\n                optionType: 'callPoolContract',\n            },\n            {\n                asset: 'BNB',\n                pool: 'PUT',\n                optionType: 'putPoolContract',\n            }\n        ];\n\n        this.isLoading=false;\n    }\n\n    @action\n    reset(){\n        this.dataArr = [];\n        this.loadDataLength=0;\n        this.isLoading=true;\n    }\n\n    @action\n    addPoolData(data){\n        this.dataArr.push(data);\n\n        if(this.dataArr.length == this.loadDataLength){\n            this.setLoading(false);\n        }\n    }\n\n    @action\n    addLoadDataLength(length){\n        this.loadDataLength=this.loadDataLength+length;\n    }\n\n    @action\n    setLoading(isLoading){\n        this.isLoading=isLoading;\n    }\n\n}\n\nexport default new ListOptionsVO();\n","import log from '../../../../components/Log';\nimport OptionTradingConfig from '../../../../etherscan/OptionTradingConfig';\nimport currentAccountStorage from \"../../../../components/Web3/CurrentAccountStorage\";\nimport DialogBoxVO from \"../../../../components/DialogBox/DialogBoxVO\";\n\nclass ListOptionsDAO {\n\n    updateOptionPool(pool){\n        DialogBoxVO.confirm();\n\n        let coinName = pool.asset;\n        let optionType = pool.optionType;\n\n        log.debug(`updateOptionPool [coinName=${coinName},optionType=${optionType}] ...`);\n\n        if(!OptionTradingConfig.contractConfig[coinName] || !OptionTradingConfig.contractConfig[coinName][optionType] || !OptionTradingConfig.contractConfig[coinName][optionType].address()){\n            return;\n        }\n\n        let optionPoolContractConfig = OptionTradingConfig.contractConfig[coinName][optionType];\n        let optionPoolContractAddress = optionPoolContractConfig.address();\n        let optionPoolContractAbi = optionPoolContractConfig.abi;\n        let optionPoolContract = new window.web3.eth.Contract(optionPoolContractAbi, optionPoolContractAddress);\n\n        optionPoolContract.methods\n            .update()\n            .send({\n                from: currentAccountStorage.account,\n            })\n            .on('error', function(error){\n                DialogBoxVO.failed();\n                DialogBoxVO.setContent(error.message);\n            })\n            .then((result) => {\n                DialogBoxVO.success();\n            });\n    }\n\n}\n\nexport default new ListOptionsDAO();\n","import './index.scss';\n\nimport React from 'react';\nimport {Button, ConfigProvider, ResponsiveGrid, Table} from '@alifd/next';\nimport log from \"../../../../components/Log\";\n\nimport ListOptionsVO from './ListOptionsVO';\nimport ListOptionsDAO from './ListOptionsDAO';\n\nimport {NextComponentLocaleConfig} from \"../../../../components\";\nimport DialogBox from \"../../../../components/DialogBox\";\n\nconst {Cell} = ResponsiveGrid;\n\nconst updateOptionPool = (pool) => {\n    ListOptionsDAO.updateOptionPool(pool);\n};\n\nconst optionPoolOperationRender = (value, index, record) => {\n    return <Button type=\"primary\" onClick={updateOptionPool.bind(this,record)} size=\"small\" className=\"sub_btn\">Update</Button>;\n};\n\nconst ListOptions = () => {\n    return (\n        <section className=\"section dashboard_container\">\n            <div className=\"section_container\">\n                <DialogBox/>\n\n                <ResponsiveGrid gap={20} className={'analytics_item section_dashboard_box table_container'}>\n                    <Cell className=\"grid-12 section_item section_title\" colSpan={12}>\n                        Underwriting Pool\n                    </Cell>\n\n                    <Cell className=\"grid-12 section_item section_pool_snapshot_box\" colSpan={12}>\n                        <ConfigProvider locale={NextComponentLocaleConfig}>\n                            <Table dataSource={ListOptionsVO.dataArr} loading={ListOptionsVO.isLoading}>\n                                <Table.Column title={'Asset'} dataIndex=\"asset\" className={'type'}/>\n                                <Table.Column title={'Pool'} dataIndex=\"pool\" className={'duration'}/>\n                                <Table.Column cell={optionPoolOperationRender}/>\n                            </Table>\n                        </ConfigProvider>\n                    </Cell>\n                </ResponsiveGrid>\n            </div>\n        </section>\n    );\n};\n\nexport default ListOptions;\n","// src/routerConfig.js\n\nimport {Home, Sell, Analytics, OPA, FAQ, OPDashboard} from '@pages';\n\nconst routerConfig = [\n    {\n        path: '/',\n        title: 'home',\n        component: Home,\n        exact: true,\n    },\n    {\n        path: '/home',\n        title: 'home',\n        component: Home,\n    },\n    {\n        path: '/sell',\n        title: 'sell',\n        component: Sell,\n    },\n    {\n        path: '/analytics',\n        title: 'analytics',\n        component: Analytics,\n    },\n    {\n        path: '/OPA',\n        title: 'OPA',\n        component: OPA,\n    },\n    {\n        path: '/FAQ',\n        title: 'FAQ',\n        component: FAQ,\n    },\n    {\n        path: '/dashboard.op',\n        title: 'dashboard',\n        component: OPDashboard,\n    },\n];\n\nexport default routerConfig;\n","/* eslint react/no-string-refs:0 */\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport ListOptions from './components/ListOptions';\n\n@withRouter\nclass OPDashboard extends Component {\n    componentDidMount(){\n    }\n\n    render() {\n        return (\n            <div className=\"sections\">\n                <ListOptions/>\n            </div>\n        );\n    }\n}\n\nexport default OPDashboard;\n","// //overrides metamask v0.2 for our 1.0 version.\n//1.0 lets us use async and await instead of promises\n\nimport Web3 from 'web3';\nimport WebThreeLoadEvent from '../Web3/WebThreeLoadEvent';\nimport CurrentChainStorage from \"./CurrentChainStorage\";\nimport OptionTradingConfig from \"../../etherscan/OptionTradingConfig\";\n\nconst loadWeb3 = () => {\n    if (!window.ethereum && !window.BinanceChain) {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n\n        window.web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n        CurrentChainStorage.setChainId(OptionTradingConfig.defaultChain.id);\n        WebThreeLoadEvent.setLoadState(true);\n    }\n};\n\nexport default loadWeb3;\n","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport routerData from '@/routerConfig';\nimport {loadWeb3} from '@/components/Web3';\n\nimport { WalletProvider } from 'react-binance-wallet'\n\nimport './index.scss';\nimport '../../components/Theme/Panda/panda.scss';\n\nexport default class UserLayout extends Component {\n    componentDidMount() {\n        window.addEventListener('load', loadWeb3);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('load', loadWeb3);\n    }\n\n    render() {\n        return (\n            <WalletProvider chainIds={[56]}>\n                <div className=\"main_container panda\">\n                    <Header/>\n                    <Switch>\n                        {routerData.map((item, index) => {\n                            const {path, component, exact} = item;\n\n                            return component ? (\n                                <Route\n                                    key={path}\n                                    path={path}\n                                    component={component}\n                                    exact={exact}\n                                    render={(props) => {\n                                        return <Component {...props} />;\n                                    }}\n                                />\n                            ) : null;\n                        })}\n                    </Switch>\n                    <Footer/>\n                </div>\n            </WalletProvider>\n        );\n    }\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {DefaultLayout} from '@/layouts';\nimport { NotFound } from './components';\n\nconst Routers = () => {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/dashboard.op\" component={DefaultLayout}/>\n                <Route path=\"/FAQ\" component={DefaultLayout}/>\n                <Route path=\"/OPA\" component={DefaultLayout}/>\n                <Route path=\"/analytics\" component={DefaultLayout}/>\n                <Route path=\"/sell\" component={DefaultLayout}/>\n                <Route path=\"/home\" component={DefaultLayout}/>\n                <Route path=\"/\" component={DefaultLayout} exact/>\n                <Route component={NotFound} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Routers;\n","import React, {Component} from 'react';\nimport {configure} from 'mobx';\nimport {Provider, observer} from 'mobx-react';\nimport rootStore from '@stores';\nimport Router from './router';\n\nconfigure({\n    enforceActions: 'observed',\n});\n\n@observer\nclass App extends Component {\n    render() {\n        return (\n            <Provider {...rootStore}>\n                <Router/>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n"],"sourceRoot":""}